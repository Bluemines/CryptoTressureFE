import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ConfigProvider } from "antd";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v15-appRouter";
import ClientOnly from "./components/ClientOnly";
import { ThemeProvider } from "@mui/material/styles";
import theme from "./lib/theme";
import "react-quill-new/dist/quill.snow.css";
import { QueryClientProvider } from "@tanstack/react-query";
import queryClient from "./utils/queryClient";
import { Toaster } from 'react-hot-toast';


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <QueryClientProvider client={queryClient}>
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiase`}
          cz-shortcut-listen="true"
        >
          <ClientOnly>
            <ConfigProvider
              theme={{
                token: {
                  colorPrimary: "#7367F0",
                },
              }}
            >
              <ThemeProvider theme={theme}>
                <AppRouterCacheProvider>{children}
                <Toaster />
                </AppRouterCacheProvider>
              </ThemeProvider>
            </ConfigProvider>
          </ClientOnly>
        </body>
      </html>
    </QueryClientProvider>
  );
}
