{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/ui/Inputs/FormInput.tsx"],"sourcesContent":["// import React from \"react\";\r\n// import { Controller, Control, FieldErrors } from \"react-hook-form\";\r\n// import { TextField } from \"@mui/material\";\r\n\r\n// interface FormInputProps {\r\n//   name: string;\r\n//   control: Control<any>;\r\n//   label: string;\r\n//   type?: string;\r\n//   errors?: FieldErrors;\r\n//   multiline?: boolean;\r\n//   rows?: number;\r\n// }\r\n\r\n// const FormInput: React.FC<FormInputProps> = ({\r\n//   name,\r\n//   control,\r\n//   label,\r\n//   type = \"text\",\r\n//   errors,\r\n//   multiline = false,\r\n//   rows = 4,\r\n// }) => {\r\n//   return (\r\n//     <Controller\r\n//       name={name}\r\n//       control={control}\r\n//       render={({ field }) => (\r\n//         <TextField\r\n//           {...field}\r\n//           type={type}\r\n//           label={label}\r\n//           variant=\"outlined\"\r\n//           fullWidth\r\n//           margin=\"normal\"\r\n//           multiline={multiline}\r\n//           rows={multiline ? rows : undefined}\r\n//           error={!!errors?.[name]}\r\n//           helperText={errors?.[name]?.message as string}\r\n//           InputLabelProps={{ style: { color: \"#aaa\" } }}\r\n//           InputProps={{\r\n//             style: { color: \"#fff\" },\r\n//           }}\r\n//           sx={{\r\n//             backgroundColor: \"#262626\",\r\n//             // px: 2,\r\n//             // py: 1,\r\n//             borderRadius: \"6px\",\r\n//             \"& .MuiOutlinedInput-root\": {\r\n//               \"& fieldset\": {\r\n//                 borderColor: \"#444\",\r\n//               },\r\n//               \"&:hover fieldset\": {\r\n//                 borderColor: \"#666\",\r\n//               },\r\n//               \"&.Mui-focused fieldset\": {\r\n//                 borderColor: \"#888\",\r\n//               },\r\n//             },\r\n//             \"& .MuiInputBase-root\": {\r\n//               color: \"#fff\",\r\n//             },\r\n//           }}\r\n//         />\r\n//       )}\r\n//     />\r\n//   );\r\n// };\r\n\r\n// export default FormInput;\r\nimport React, { useState } from \"react\";\r\nimport { Controller, Control, FieldErrors } from \"react-hook-form\";\r\nimport { TextField, IconButton, InputAdornment, TextFieldProps } from \"@mui/material\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\n\r\ninterface FormInputProps extends Omit<TextFieldProps, \"name\" | \"label\"> {\r\n  name: string;\r\n  control: Control<any>;\r\n  label: string;\r\n  type?: string;\r\n  errors?: FieldErrors;\r\n  multiline?: boolean;\r\n  rows?: number;\r\n  rules?: any;\r\n}\r\n\r\nconst FormInput: React.FC<FormInputProps> = ({\r\n  name,\r\n  control,\r\n  label,\r\n  type = \"text\",\r\n  errors,\r\n  multiline = false,\r\n  rows = 4,\r\n  rules,\r\n  ...props\r\n}) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const isPassword = type === \"password\";\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      rules={rules}\r\n      name={name}\r\n      control={control}\r\n      render={({ field }) => (\r\n        <TextField\r\n          {...field}\r\n          type={isPassword && !showPassword ? \"password\" : \"text\"}\r\n          label={label}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          multiline={multiline}\r\n          rows={multiline ? rows : undefined}\r\n          error={!!errors?.[name]}\r\n          helperText={errors?.[name]?.message as string}\r\n          InputLabelProps={{ style: { color: \"#aaa\" } }}\r\n          InputProps={{\r\n            style: { color: \"#fff\" },\r\n            endAdornment: isPassword && (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={togglePasswordVisibility}\r\n                  edge=\"end\"\r\n                  sx={{ color: \"#aaa\" }}\r\n                >\r\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          sx={{\r\n            backgroundColor: \"#262626\",\r\n            borderRadius: \"6px\",\r\n            \"& .MuiOutlinedInput-root\": {\r\n              \"& fieldset\": {\r\n                borderColor: \"#444\",\r\n              },\r\n              \"&:hover fieldset\": {\r\n                borderColor: \"#666\",\r\n              },\r\n              \"&.Mui-focused fieldset\": {\r\n                borderColor: \"#888\",\r\n              },\r\n            },\r\n          }}\r\n          {...props}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n"],"names":[],"mappings":"AAAA,6BAA6B;AAC7B,sEAAsE;AACtE,6CAA6C;AAE7C,6BAA6B;AAC7B,kBAAkB;AAClB,2BAA2B;AAC3B,mBAAmB;AACnB,mBAAmB;AACnB,0BAA0B;AAC1B,yBAAyB;AACzB,mBAAmB;AACnB,IAAI;AAEJ,iDAAiD;AACjD,UAAU;AACV,aAAa;AACb,WAAW;AACX,mBAAmB;AACnB,YAAY;AACZ,uBAAuB;AACvB,cAAc;AACd,UAAU;AACV,aAAa;AACb,kBAAkB;AAClB,oBAAoB;AACpB,0BAA0B;AAC1B,iCAAiC;AACjC,qBAAqB;AACrB,uBAAuB;AACvB,wBAAwB;AACxB,0BAA0B;AAC1B,+BAA+B;AAC/B,sBAAsB;AACtB,4BAA4B;AAC5B,kCAAkC;AAClC,gDAAgD;AAChD,qCAAqC;AACrC,2DAA2D;AAC3D,2DAA2D;AAC3D,0BAA0B;AAC1B,wCAAwC;AACxC,eAAe;AACf,kBAAkB;AAClB,0CAA0C;AAC1C,wBAAwB;AACxB,wBAAwB;AACxB,mCAAmC;AACnC,4CAA4C;AAC5C,gCAAgC;AAChC,uCAAuC;AACvC,mBAAmB;AACnB,sCAAsC;AACtC,uCAAuC;AACvC,mBAAmB;AACnB,4CAA4C;AAC5C,uCAAuC;AACvC,mBAAmB;AACnB,iBAAiB;AACjB,wCAAwC;AACxC,+BAA+B;AAC/B,iBAAiB;AACjB,eAAe;AACf,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AAEL,4BAA4B;;;;;AAC5B;AACA;AACA;AAAA;AAAA;AACA;AAAA;;;;;;;AAaA,MAAM,YAAsC,CAAC,EAC3C,IAAI,EACJ,OAAO,EACP,KAAK,EACL,OAAO,MAAM,EACb,MAAM,EACN,YAAY,KAAK,EACjB,OAAO,CAAC,EACR,KAAK,EACL,GAAG,OACJ;IACC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,aAAa,SAAS;IAE5B,MAAM,2BAA2B;QAC/B,gBAAgB,CAAC,OAAS,CAAC;IAC7B;IAEA,qBACE,8OAAC,8JAAA,CAAA,aAAU;QACT,OAAO;QACP,MAAM;QACN,SAAS;QACT,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,0MAAA,CAAA,YAAS;gBACP,GAAG,KAAK;gBACT,MAAM,cAAc,CAAC,eAAe,aAAa;gBACjD,OAAO;gBACP,SAAQ;gBACR,SAAS;gBACT,QAAO;gBACP,WAAW;gBACX,MAAM,YAAY,OAAO;gBACzB,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK;gBACvB,YAAY,QAAQ,CAAC,KAAK,EAAE;gBAC5B,iBAAiB;oBAAE,OAAO;wBAAE,OAAO;oBAAO;gBAAE;gBAC5C,YAAY;oBACV,OAAO;wBAAE,OAAO;oBAAO;oBACvB,cAAc,4BACZ,8OAAC,yNAAA,CAAA,iBAAc;wBAAC,UAAS;kCACvB,cAAA,8OAAC,6MAAA,CAAA,aAAU;4BACT,SAAS;4BACT,MAAK;4BACL,IAAI;gCAAE,OAAO;4BAAO;sCAEnB,6BAAe,8OAAC,kKAAA,CAAA,UAAa;;;;uDAAM,8OAAC,+JAAA,CAAA,UAAU;;;;;;;;;;;;;;;gBAIvD;gBACA,IAAI;oBACF,iBAAiB;oBACjB,cAAc;oBACd,4BAA4B;wBAC1B,cAAc;4BACZ,aAAa;wBACf;wBACA,oBAAoB;4BAClB,aAAa;wBACf;wBACA,0BAA0B;4BACxB,aAAa;wBACf;oBACF;gBACF;gBACC,GAAG,KAAK;;;;;;;;;;;AAKnB;uCAEe","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/%28auth%29/register/schema.ts"],"sourcesContent":["// validation/registerSchema.ts\r\nimport * as yup from \"yup\";\r\n\r\nexport const registerSchema = yup.object({\r\n    username: yup.string().required(\"Username is required\"),\r\n    email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n    code: yup.string().required(\"Code is required\"),\r\n    password: yup\r\n      .string()\r\n      .min(6, \"Password must be at least 6 characters\")\r\n      .required(\"Password is required\"),\r\n    confirmPassword: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\")], \"Passwords must match\")\r\n      .required(\"Confirm Password is required\"),\r\n    referralCode: yup.string().optional(),\r\n  });\r\n  \r\n\r\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;AAC/B;;AAEO,MAAM,iBAAiB,CAAA,GAAA,mIAAA,CAAA,SAAU,AAAD,EAAE;IACrC,UAAU,CAAA,GAAA,mIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ,CAAC;IAChC,OAAO,CAAA,GAAA,mIAAA,CAAA,SAAU,AAAD,IAAI,KAAK,CAAC,iBAAiB,QAAQ,CAAC;IACpD,MAAM,CAAA,GAAA,mIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ,CAAC;IAC5B,UAAU,CAAA,GAAA,mIAAA,CAAA,SACD,AAAD,IACL,GAAG,CAAC,GAAG,0CACP,QAAQ,CAAC;IACZ,iBAAiB,CAAA,GAAA,mIAAA,CAAA,SACR,AAAD,IACL,KAAK,CAAC;QAAC,CAAA,GAAA,mIAAA,CAAA,MAAO,AAAD,EAAE;KAAY,EAAE,wBAC7B,QAAQ,CAAC;IACZ,cAAc,CAAA,GAAA,mIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ;AACrC","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/constants/keys.ts"],"sourcesContent":["export const base_url = process.env.NEXT_PUBLIC_API_URL;\r\nexport const base_image_url = process.env.NEXT_PUBLIC_IMAGE_URL;\r\n"],"names":[],"mappings":";;;;AAAO,MAAM;AACN,MAAM","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/utils/auth.ts"],"sourcesContent":["export const auth = {\r\n  logout: async () => {\r\n    // const email =   localStorage.getItem('userEmail');\r\n    // console.log(email, 'emailemail');\r\n    // const lastOnboardingDate =   localStorage.getItem('lastOnboardingDate');\r\n    localStorage.clear();\r\n    // if (lastOnboardingDate) {\r\n    //       localStorage.setItem('lastOnboardingDate', lastOnboardingDate);\r\n    // }\r\n    // if (email) {\r\n    //       localStorage.setItem('userEmail', email);\r\n    // }\r\n  },\r\n  delete: async () => {\r\n    localStorage.clear();\r\n  },\r\n  accessToken: async () => {\r\n    return localStorage.getItem(\"accessToken\");\r\n  },\r\n  setToken: async (token: string) => {\r\n    return localStorage.setItem(\"accessToken\", token);\r\n  },\r\n  setRole: async (role: string) => {\r\n    return localStorage.setItem(\"role\", role);\r\n  },\r\n  refreshToken: async () => {\r\n    return localStorage.getItem(\"refreshToken\");\r\n  },\r\n  platform: async () => {\r\n    return localStorage.getItem(\"platform\");\r\n  },\r\n  setUser: async (userId: string) => {\r\n    localStorage.setItem(\"userId\", userId);\r\n  },\r\n  user: async () => {\r\n    return localStorage.getItem(\"userId\");\r\n  },\r\n  updateTokens: async (accessToken: string, refreshToken: string) => {\r\n    localStorage.setItem(\"accessToken\", accessToken);\r\n    localStorage.setItem(\"refreshToken\", refreshToken);\r\n  },\r\n};\r\n\r\nexport default auth;\r\n"],"names":[],"mappings":";;;;AAAO,MAAM,OAAO;IAClB,QAAQ;QACN,qDAAqD;QACrD,oCAAoC;QACpC,2EAA2E;QAC3E,aAAa,KAAK;IAClB,4BAA4B;IAC5B,wEAAwE;IACxE,IAAI;IACJ,eAAe;IACf,kDAAkD;IAClD,IAAI;IACN;IACA,QAAQ;QACN,aAAa,KAAK;IACpB;IACA,aAAa;QACX,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,UAAU,OAAO;QACf,OAAO,aAAa,OAAO,CAAC,eAAe;IAC7C;IACA,SAAS,OAAO;QACd,OAAO,aAAa,OAAO,CAAC,QAAQ;IACtC;IACA,cAAc;QACZ,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,UAAU;QACR,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,SAAS,OAAO;QACd,aAAa,OAAO,CAAC,UAAU;IACjC;IACA,MAAM;QACJ,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,cAAc,OAAO,aAAqB;QACxC,aAAa,OAAO,CAAC,eAAe;QACpC,aAAa,OAAO,CAAC,gBAAgB;IACvC;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/utils/axios.ts"],"sourcesContent":["import { base_url } from \"../constants/keys\";\r\nimport auth from \"./auth\";\r\nimport axios from \"axios\";\r\n\r\nexport const apiClient = axios.create({\r\n  baseURL: base_url,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Access-Control-Allow-Origin\": \"*\", //\r\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, PATCH, OPTIONS\",\r\n  },\r\n});\r\napiClient.interceptors.request.use(\r\n  async (config) => {\r\n    const accessToken = await auth.accessToken();\r\n    if (accessToken) {\r\n      config.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    }\r\n    if (config.data instanceof FormData) {\r\n      config.headers[\"Content-Type\"] = \"multipart/form-data\";\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    } else {\r\n      config.headers[\"Content-Type\"] = \"application/json\";\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// apiClient.interceptors.response.use(\r\n//   (response) => response,\r\n//   async (error) => {\r\n//     const originalRequest = error.config;\r\n//     if (error.response?.status === 401 && !originalRequest._retry) {\r\n//       originalRequest._retry = true;\r\n//       const refreshToken = await auth.refreshToken();\r\n\r\n//       if (refreshToken) {\r\n//         try {\r\n//           const response = await axios.post(`${baseUrl}/auth/refresh-token`, {\r\n//             refreshToken,\r\n//           });\r\n//           const { accessToken, refreshToken: newRefreshToken } =\r\n//             response.data.data;\r\n//           await auth.updateTokens(accessToken, newRefreshToken);\r\n//           originalRequest.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n//           return axios(originalRequest);\r\n//         } catch (refreshError) {\r\n//           auth.logout();\r\n//           return Promise.reject(refreshError);\r\n//         }\r\n//       } else {\r\n//         auth.logout();\r\n//       }\r\n//     }\r\n//     return Promise.reject(error);\r\n//   }\r\n// );\r\napiClient.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const queryFn = async <T>(\r\n  endpoint: string,\r\n  params?: Record<string, any>\r\n): Promise<T> => {\r\n  const response = await apiClient.get(endpoint, { params });\r\n  return response.data;\r\n};\r\n\r\nexport const mutationFn = async (\r\n  endpoint: string,\r\n  method: \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\",\r\n  body?: Record<string, any>,\r\n  headers?: Record<string, any>\r\n) => {\r\n  const response = await apiClient.request({\r\n    url: endpoint,\r\n    method,\r\n    data: body,\r\n    headers: {\r\n      ...headers,\r\n    },\r\n  });\r\n  return response.data;\r\n};"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,MAAM,YAAY,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACpC,SAAS,+HAAA,CAAA,WAAQ;IACjB,SAAS;QACP,gBAAgB;QAChB,+BAA+B;QAC/B,gCAAgC;IAClC;AACF;AACA,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAChC,OAAO;IACL,MAAM,cAAc,MAAM,2HAAA,CAAA,UAAI,CAAC,WAAW;IAC1C,IAAI,aAAa;QACf,OAAO,OAAO,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,aAAa;QACzD,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ;IACA,IAAI,OAAO,IAAI,YAAY,UAAU;QACnC,OAAO,OAAO,CAAC,eAAe,GAAG;QACjC,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ,OAAO;QACL,OAAO,OAAO,CAAC,eAAe,GAAG;QACjC,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ;IACA,OAAO;AACT,GACA,CAAC,QAAU,QAAQ,MAAM,CAAC;AAG5B,uCAAuC;AACvC,4BAA4B;AAC5B,uBAAuB;AACvB,4CAA4C;AAC5C,uEAAuE;AACvE,uCAAuC;AACvC,wDAAwD;AAExD,4BAA4B;AAC5B,gBAAgB;AAChB,iFAAiF;AACjF,4BAA4B;AAC5B,gBAAgB;AAChB,mEAAmE;AACnE,kCAAkC;AAClC,mEAAmE;AACnE,gFAAgF;AAChF,2CAA2C;AAC3C,mCAAmC;AACnC,2BAA2B;AAC3B,iDAAiD;AACjD,YAAY;AACZ,iBAAiB;AACjB,yBAAyB;AACzB,UAAU;AACV,QAAQ;AACR,oCAAoC;AACpC,MAAM;AACN,KAAK;AACL,UAAU,YAAY,CAAC,QAAQ,CAAC,GAAG,CACjC,CAAC,WAAa,UACd,OAAO;IACL,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGK,MAAM,UAAU,OACrB,UACA;IAEA,MAAM,WAAW,MAAM,UAAU,GAAG,CAAC,UAAU;QAAE;IAAO;IACxD,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OACxB,UACA,QACA,MACA;IAEA,MAAM,WAAW,MAAM,UAAU,OAAO,CAAC;QACvC,KAAK;QACL;QACA,MAAM;QACN,SAAS;YACP,GAAG,OAAO;QACZ;IACF;IACA,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/api/authentication/index.ts"],"sourcesContent":["import { mutationFn } from \"@/app/utils/axios\";\r\nimport { ILoginBody, ISendEmailBody, ISignupBody } from \"./types\";\r\n\r\nexport const loginApi = {\r\n    mutationFn: (body: ILoginBody) => {\r\n        return mutationFn('auth/signin', 'POST', body);\r\n    },\r\n};\r\n\r\nexport const RegisterApi = {\r\n    mutationFn: (body: ISignupBody) => {\r\n        return mutationFn('auth/signup', 'POST', body);\r\n    },\r\n};\r\nexport const ConfirmEmailApi = {\r\n    mutationFn: (body: ISendEmailBody) => {\r\n        return mutationFn('auth/send-email', 'POST', body);\r\n    },\r\n};\r\n\r\nexport const ForgetPasswordApi = {\r\n    mutationFn: (body: ISendEmailBody) => {\r\n        return mutationFn('auth/request-password-reset', 'POST', body);\r\n    },\r\n};\r\n\r\nexport const resetPasswordApi = {\r\n    mutationFn: (body: ISendEmailBody) => {\r\n        return mutationFn('auth/reset-password', 'POST', body);\r\n    },\r\n};\r\n\r\n"],"names":[],"mappings":";;;;;;;AAAA;;AAGO,MAAM,WAAW;IACpB,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,4HAAA,CAAA,aAAU,AAAD,EAAE,eAAe,QAAQ;IAC7C;AACJ;AAEO,MAAM,cAAc;IACvB,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,4HAAA,CAAA,aAAU,AAAD,EAAE,eAAe,QAAQ;IAC7C;AACJ;AACO,MAAM,kBAAkB;IAC3B,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,4HAAA,CAAA,aAAU,AAAD,EAAE,mBAAmB,QAAQ;IACjD;AACJ;AAEO,MAAM,oBAAoB;IAC7B,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,4HAAA,CAAA,aAAU,AAAD,EAAE,+BAA+B,QAAQ;IAC7D;AACJ;AAEO,MAAM,mBAAmB;IAC5B,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,4HAAA,CAAA,aAAU,AAAD,EAAE,uBAAuB,QAAQ;IACrD;AACJ","debugId":null}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/%28auth%29/register/hooks/index.ts"],"sourcesContent":["import { Resolver, SubmitHandler, useForm } from \"react-hook-form\"\r\nimport { registerSchema } from \"../schema\"\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\nimport { useMutation } from \"@tanstack/react-query\"\r\nimport { ConfirmEmailApi, RegisterApi } from \"@/api/authentication\"\r\nimport { ISignupBody } from \"@/api/authentication/types\"\r\nimport { RegisterFormType } from \"../types\"\r\nimport toast from \"react-hot-toast\"\r\nimport { useRouter } from \"next/navigation\"\r\nimport { AxiosError } from \"axios\"\r\n\r\nexport default function useRegisterHook(ref?: string) {\r\n  const router = useRouter()\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    getValues,\r\n    formState: { errors },\r\n  } = useForm<RegisterFormType>({\r\n    resolver: yupResolver(registerSchema) as Resolver<RegisterFormType>,\r\n    defaultValues: {\r\n      username: \"\",\r\n      email: \"\",\r\n      code: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      referralCode: ref || \"\",\r\n      phone: ''\r\n    },\r\n  })\r\n  const {\r\n    mutateAsync: registerUser,\r\n    isPending,\r\n    isError,\r\n    isSuccess,\r\n    error,\r\n  } = useMutation({\r\n    mutationFn: RegisterApi.mutationFn,\r\n    onSuccess: () => {\r\n      toast.success(\"Register Successful!\")\r\n      router.push(\"/user/dashboard\")\r\n    },\r\n    onError: (error) => {\r\n      const err = error as AxiosError<{ message: string }>\r\n      toast.error(err.response?.data?.message || \"Something went wrong\")\r\n    },\r\n  })\r\n  const {\r\n    mutateAsync: getCode,\r\n    // isPending,\r\n    // isError,\r\n    // isSuccess,\r\n    // error,\r\n  } = useMutation({\r\n    mutationFn: ConfirmEmailApi.mutationFn,\r\n  })\r\n\r\n  const submitCode = async () => {\r\n    const email = getValues(\"email\")\r\n    if (!email) {\r\n      // Optional: Show a toast/snackbar that email is required\r\n      return\r\n    }\r\n\r\n    try {\r\n      const response = await getCode({ email })\r\n      console.log(response)\r\n      // Optional: handle success, e.g. show toast/snackbar\r\n    } catch (error) {\r\n      console.log(\"error sending email: \", error)\r\n      // Optional: handle error, e.g. show toast/snackbar\r\n    }\r\n  }\r\n  const onSubmit = async (data: RegisterFormType) => {\r\n    const { confirmPassword, ...rest } = data\r\n\r\n    const payload: ISignupBody = {\r\n      email: rest.email,\r\n      password: rest.password!,\r\n      code: rest.code,\r\n      username: rest.username,\r\n      referralCode: rest.referralCode,\r\n    }\r\n\r\n    const response = await registerUser(payload)\r\n    console.log(response)\r\n  }\r\n\r\n  return { control, errors, handleSubmit, onSubmit, error, submitCode }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;;;;;AAGe,SAAS,gBAAgB,GAAY;IAClD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EACJ,OAAO,EACP,YAAY,EACZ,SAAS,EACT,WAAW,EAAE,MAAM,EAAE,EACtB,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAoB;QAC5B,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE,4IAAA,CAAA,iBAAc;QACpC,eAAe;YACb,UAAU;YACV,OAAO;YACP,MAAM;YACN,UAAU;YACV,iBAAiB;YACjB,cAAc,OAAO;YACrB,OAAO;QACT;IACF;IACA,MAAM,EACJ,aAAa,YAAY,EACzB,SAAS,EACT,OAAO,EACP,SAAS,EACT,KAAK,EACN,GAAG,CAAA,GAAA,8KAAA,CAAA,cAAW,AAAD,EAAE;QACd,YAAY,qIAAA,CAAA,cAAW,CAAC,UAAU;QAClC,WAAW;YACT,uJAAA,CAAA,UAAK,CAAC,OAAO,CAAC;YACd,OAAO,IAAI,CAAC;QACd;QACA,SAAS,CAAC;YACR,MAAM,MAAM;YACZ,uJAAA,CAAA,UAAK,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE,MAAM,WAAW;QAC7C;IACF;IACA,MAAM,EACJ,aAAa,OAAO,EAKrB,GAAG,CAAA,GAAA,8KAAA,CAAA,cAAW,AAAD,EAAE;QACd,YAAY,qIAAA,CAAA,kBAAe,CAAC,UAAU;IACxC;IAEA,MAAM,aAAa;QACjB,MAAM,QAAQ,UAAU;QACxB,IAAI,CAAC,OAAO;YACV,yDAAyD;YACzD;QACF;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,QAAQ;gBAAE;YAAM;YACvC,QAAQ,GAAG,CAAC;QACZ,qDAAqD;QACvD,EAAE,OAAO,OAAO;YACd,QAAQ,GAAG,CAAC,yBAAyB;QACrC,mDAAmD;QACrD;IACF;IACA,MAAM,WAAW,OAAO;QACtB,MAAM,EAAE,eAAe,EAAE,GAAG,MAAM,GAAG;QAErC,MAAM,UAAuB;YAC3B,OAAO,KAAK,KAAK;YACjB,UAAU,KAAK,QAAQ;YACvB,MAAM,KAAK,IAAI;YACf,UAAU,KAAK,QAAQ;YACvB,cAAc,KAAK,YAAY;QACjC;QAEA,MAAM,WAAW,MAAM,aAAa;QACpC,QAAQ,GAAG,CAAC;IACd;IAEA,OAAO;QAAE;QAAS;QAAQ;QAAc;QAAU;QAAO;IAAW;AACtE","debugId":null}},
    {"offset": {"line": 594, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/%28auth%29/register/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport FormInput from \"@/app/components/ui/Inputs/FormInput\";\r\nimport { Button, Checkbox } from \"@mui/material\";\r\nimport Link from \"next/link\";\r\nimport useRegisterHook from \"./hooks\";\r\nimport { useSearchParams } from \"next/navigation\";\r\n\r\nconst Register = () => {\r\n\r\n  const searchParams = useSearchParams()\r\n  const ref = searchParams.get(\"ref\")\r\n\r\n  const { control, errors,handleSubmit,onSubmit,submitCode } = useRegisterHook(ref || '');\r\n  return (\r\n    <div className=\"h-dvh flex\">\r\n      <div className=\"w-[50%] lg:w-[50%] overflow-hidden hidden md:block\">\r\n        <img\r\n          src=\"/images/register-hero.png\"\r\n          alt=\"\"\r\n          className=\"h-[1016px] w-full\"\r\n        />\r\n      </div>\r\n      <div className=\"md:w-[50%] w-full grid place-items-center overflow-y-auto p-8 py-16\">\r\n        <div className=\"w-full max-w-md\">\r\n          <div className=\"text-[#737373] font-medium text-2xl\">LOGO</div>\r\n          <div className=\"text-3xl mt-4\">Welcome to NFT!</div>\r\n          <div className=\"text-muted text-sm mt-2\">\r\n            Please create to your account and start the adventure\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            <div className=\"space-y-1\">\r\n              <FormInput\r\n                name=\"username\"\r\n                control={control}\r\n                errors={errors}\r\n                label=\"Username\"\r\n              />\r\n            </div>\r\n            <div className=\"space-y-1\">\r\n              <FormInput\r\n                name=\"phone\"\r\n                control={control}\r\n                errors={errors}\r\n                label=\"Phone Number\"\r\n              />\r\n            </div>\r\n            {/* <div className=\"space-y-1\">\r\n            <FormInput\r\n                name=\"phone\"\r\n                control={control}\r\n                errors={errors}\r\n                label=\"Username\"\r\n              />\r\n            </div> */}\r\n            <div className=\"space-y-1\">\r\n              <FormInput\r\n                name=\"email\"\r\n                control={control}\r\n                errors={errors}\r\n                label=\"Enter Email\"\r\n              />\r\n              <div className=\"flex gap-2\">\r\n                <div className=\"flex-1\">\r\n                  <FormInput\r\n                    name=\"code\"\r\n                    control={control}\r\n                    errors={errors}\r\n                    label=\"Enter Code\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex\">\r\n                  <Button\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    sx={{ height: \"70%\", mt: \"15%\" }}\r\n                    onClick={submitCode}\r\n                  >\r\n                    Get Code\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-1\">\r\n              <FormInput\r\n                name=\"password\"\r\n                control={control}\r\n                errors={errors}\r\n                label=\"Enter Password\"\r\n                type=\"password\"\r\n              />\r\n            </div>\r\n            <div className=\"space-y-1\">\r\n              <FormInput\r\n                name=\"confirmPassword\"\r\n                control={control}\r\n                errors={errors}\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n              />\r\n            </div>\r\n            <div className=\"space-y-1\">\r\n              <FormInput\r\n                name=\"referralCode\"\r\n                control={control}\r\n                errors={errors}\r\n                disabled={ref ? true : false}\r\n                label=\"Referral Code\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-2\">\r\n              <Checkbox className=\"!p-0\" />{\" \"}\r\n              <span className=\"text-muted\">\r\n                I agree to{\" \"}\r\n                <span className=\"text-primary\">privacy policy & terms</span>\r\n              </span>\r\n            </div>\r\n\r\n            <Button variant=\"contained\" fullWidth onClick={handleSubmit(onSubmit)}>\r\n              Sign up\r\n            </Button>\r\n\r\n            <div className=\"text-sm text-center block mt-2\">\r\n              Already have an account?{\" \"}\r\n              <Link className=\"text-primary\" href=\"/login\">\r\n                Sign in instead\r\n              </Link>\r\n            </div>\r\n\r\n            {/* <Divider>Or</Divider> */}\r\n\r\n            {/* <div className=\"flex items-center justify-center gap-2 mt-4\">\r\n              <div className=\"h-[38px] w-[38px] bg-[#1d2b48] grid place-items-center rounded\">\r\n                <img src=\"/icons/fb.png\" alt=\"\" />\r\n              </div>\r\n              <div className=\"h-[38px] w-[38px] bg-[#0d3148] grid place-items-center rounded\">\r\n                <img src=\"/icons/twitter.png\" alt=\"\" />\r\n              </div>\r\n              <div className=\"h-[38px] w-[38px] bg-[#3f1917] grid place-items-center rounded\">\r\n                <img src=\"/icons/google.png\" alt=\"\" />\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AACA;AACA;AANA;;;;;;;AAQA,MAAM,WAAW;IAEf,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,MAAM,aAAa,GAAG,CAAC;IAE7B,MAAM,EAAE,OAAO,EAAE,MAAM,EAAC,YAAY,EAAC,QAAQ,EAAC,UAAU,EAAE,GAAG,CAAA,GAAA,oJAAA,CAAA,UAAe,AAAD,EAAE,OAAO;IACpF,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,KAAI;oBACJ,KAAI;oBACJ,WAAU;;;;;;;;;;;0BAGd,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCAAsC;;;;;;sCACrD,8OAAC;4BAAI,WAAU;sCAAgB;;;;;;sCAC/B,8OAAC;4BAAI,WAAU;sCAA0B;;;;;;sCAIzC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,sJAAA,CAAA,UAAS;wCACR,MAAK;wCACL,SAAS;wCACT,QAAQ;wCACR,OAAM;;;;;;;;;;;8CAGV,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,sJAAA,CAAA,UAAS;wCACR,MAAK;wCACL,SAAS;wCACT,QAAQ;wCACR,OAAM;;;;;;;;;;;8CAWV,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,sJAAA,CAAA,UAAS;4CACR,MAAK;4CACL,SAAS;4CACT,QAAQ;4CACR,OAAM;;;;;;sDAER,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC,sJAAA,CAAA,UAAS;wDACR,MAAK;wDACL,SAAS;wDACT,QAAQ;wDACR,OAAM;;;;;;;;;;;8DAGV,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC,iMAAA,CAAA,SAAM;wDACL,SAAS;wDACT,SAAQ;wDACR,IAAI;4DAAE,QAAQ;4DAAO,IAAI;wDAAM;wDAC/B,SAAS;kEACV;;;;;;;;;;;;;;;;;;;;;;;8CAOP,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,sJAAA,CAAA,UAAS;wCACR,MAAK;wCACL,SAAS;wCACT,QAAQ;wCACR,OAAM;wCACN,MAAK;;;;;;;;;;;8CAGT,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,sJAAA,CAAA,UAAS;wCACR,MAAK;wCACL,SAAS;wCACT,QAAQ;wCACR,OAAM;wCACN,MAAK;;;;;;;;;;;8CAGT,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,sJAAA,CAAA,UAAS;wCACR,MAAK;wCACL,SAAS;wCACT,QAAQ;wCACR,UAAU,MAAM,OAAO;wCACvB,OAAM;;;;;;;;;;;8CAIV,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,uMAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;wCAAU;sDAC9B,8OAAC;4CAAK,WAAU;;gDAAa;gDAChB;8DACX,8OAAC;oDAAK,WAAU;8DAAe;;;;;;;;;;;;;;;;;;8CAInC,8OAAC,iMAAA,CAAA,SAAM;oCAAC,SAAQ;oCAAY,SAAS;oCAAC,SAAS,aAAa;8CAAW;;;;;;8CAIvE,8OAAC;oCAAI,WAAU;;wCAAiC;wCACrB;sDACzB,8OAAC,4JAAA,CAAA,UAAI;4CAAC,WAAU;4CAAe,MAAK;sDAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuB3D;uCAEe","debugId":null}}]
}