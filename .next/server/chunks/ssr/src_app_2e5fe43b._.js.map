{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/modals/Modal.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport MUIModal from '@mui/material/Modal';\r\nimport { SxProps, Theme } from '@mui/material/styles';\r\n\r\nconst style: SxProps<Theme> = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: \"90%\",\r\n  maxWidth: 450,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\ninterface ModalProps {\r\n  open: boolean;\r\n  setOpen: (open: boolean) => void;\r\n  children?: React.ReactNode;\r\n  boxStyle?: SxProps<Theme>;\r\n}\r\n\r\nexport default function Modal({ open, setOpen, children, boxStyle }: ModalProps) {\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <MUIModal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n      slotProps={{\r\n        backdrop: {\r\n          sx: {\r\n            backdropFilter: 'blur(4px)',\r\n            backgroundColor: 'rgba(0,0,0,0.3)',\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Box sx={{ ...(style as object), ...(boxStyle as object) }}>\r\n        {children}\r\n      </Box>\r\n    </MUIModal>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAGA,MAAM,QAAwB;IAC5B,UAAU;IACV,KAAK;IACL,MAAM;IACN,WAAW;IACX,OAAO;IACP,UAAU;IACV,SAAS;IACT,QAAQ;IACR,WAAW;IACX,GAAG;AACL;AASe,SAAS,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAc;IAC7E,MAAM,cAAc,IAAM,QAAQ;IAElC,qBACE,8OAAC,0JAAA,CAAA,UAAQ;QACP,MAAM;QACN,SAAS;QACT,mBAAgB;QAChB,oBAAiB;QACjB,WAAW;YACT,UAAU;gBACR,IAAI;oBACF,gBAAgB;oBAChB,iBAAiB;gBACnB;YACF;QACF;kBAEA,cAAA,8OAAC,sJAAA,CAAA,UAAG;YAAC,IAAI;gBAAE,GAAI,KAAK;gBAAa,GAAI,QAAQ;YAAY;sBACtD;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/ui/tables/AdminTable.tsx"],"sourcesContent":["import {\r\n  Box,\r\n  Typography,\r\n  Chip,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Button,\r\n  Pagination,\r\n  Tabs,\r\n  Tab,\r\n  Paper,\r\n  Popover,\r\n  MenuItem,\r\n} from \"@mui/material\"\r\nimport EditIcon from \"@mui/icons-material/Edit\"\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\"\r\nimport { useState } from \"react\"\r\nimport Modal from \"../../modals/Modal\"\r\n\r\ninterface Column {\r\n  id: string\r\n  label: string\r\n}\r\n\r\ninterface Row {\r\n  id: string | number\r\n  [key: string]: any\r\n}\r\n\r\ninterface CustomUserTableProps {\r\n  columns: Column[]\r\n  data: Row[]\r\n  total?: number\r\n  rowsPerPage?: number\r\n  icon1?: boolean\r\n  icon2?: boolean\r\n  title?: string\r\n  onClick?: () => void\r\n  actions?: boolean\r\n  showHeader?: boolean\r\n  buttonText?: string\r\n  showSearch?: boolean\r\n  showButton?: boolean\r\n}\r\n\r\nconst statusColors: Record<string, string> = {\r\n  Approved: \"#28C76F\",\r\n  Pending: \"#E46A11\",\r\n  Suspend: \"#F04438\",\r\n  Success: \"#28C76F\",\r\n  Failed: \"#F04438\",\r\n}\r\nconst statusBgColors: Record<string, string> = {\r\n  Approved: \"#274635\",\r\n  Pending: \"#4c3422\",\r\n  Suspend: \"#4f2c2a\",\r\n  Success: \"#28C76F33\",\r\n  Failed: \"#F0443833\",\r\n}\r\n\r\nconst AdminTable = ({\r\n  columns,\r\n  data,\r\n  total = 100,\r\n  rowsPerPage = 5,\r\n  icon1 = true,\r\n  icon2 = true,\r\n  title,\r\n  onClick,\r\n  actions = true,\r\n  showHeader = false,\r\n  buttonText,\r\n  showSearch = true,\r\n  showButton = true,\r\n}: CustomUserTableProps) => {\r\n  const [page, setPage] = useState(1)\r\n  const [statusTab, setStatusTab] = useState(\"All\")\r\n  const [timeTab, setTimeTab] = useState(\"All Time\")\r\n  const [isApproveWithdrawModalOpen, setIsApproveWithdrawModalOpen] =\r\n    useState(false)\r\n  const [isSuspendedModalOpen, setIsSuspendedModalOpen] =\r\n    useState(false)\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] =\r\n    useState(false)\r\n\r\n  const handlePageChange = (_: any, value: number) => {\r\n    setPage(value)\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  const open = Boolean(anchorEl)\r\n  const id = open ? \"status-popover\" : undefined\r\n\r\n  const handleOption = (status: string) => {\r\n    if (status === \"Approved\") {\r\n      setIsApproveWithdrawModalOpen(true)\r\n    }\r\n    if (status === \"Suspended\") {\r\n      setIsSuspendedModalOpen(true)\r\n    }\r\n    if (status === \"Delete\") {\r\n      setIsDeleteModalOpen(true)\r\n    }\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ bgcolor: \"#1E1E1E\", borderRadius: 3, p: 2 }}>\r\n      <Typography variant='h6' color='white' fontWeight='bold' mb={2}>\r\n        {title}\r\n      </Typography>\r\n\r\n      {/* Tabs */}\r\n      {/* <Box\r\n        display=\"flex\"\r\n        flexDirection={{ xs: \"column\", md: \"row\" }}\r\n        gap={2}\r\n        mb={2}\r\n      >\r\n        <Tabs\r\n          value={statusTab}\r\n          onChange={(_, val) => setStatusTab(val)}\r\n          textColor='inherit'\r\n          indicatorColor='primary'\r\n          variant='scrollable'\r\n          scrollButtons='auto'\r\n          sx={{ flex: 1 }}\r\n        >\r\n          {[\"All\", \"Approved\", \"Pending\", \"Declined\"].map((tab) => (\r\n            <Tab\r\n              key={tab}\r\n              value={tab}\r\n              label={tab}\r\n              sx={{\r\n                textTransform: \"none\",\r\n                color: \"white\",\r\n                bgcolor: statusTab === tab ? \"#7367F0\" : \"transparent\",\r\n                borderRadius: 2,\r\n                px: 2,\r\n                minHeight: 36,\r\n              }}\r\n            />\r\n          ))}\r\n        </Tabs>\r\n\r\n        <Tabs\r\n          value={timeTab}\r\n          onChange={(_, val) => setTimeTab(val)}\r\n          textColor='inherit'\r\n          indicatorColor='primary'\r\n          variant='scrollable'\r\n          scrollButtons='auto'\r\n          sx={{ flex: 1 }}\r\n        >\r\n          {[\"All Time\", \"12 Months\", \"30 Days\", \"7 Days\", \"24 Hour\"].map(\r\n            (tab) => (\r\n              <Tab\r\n                key={tab}\r\n                value={tab}\r\n                label={tab}\r\n                sx={{\r\n                  textTransform: \"none\",\r\n                  color: \"white\",\r\n                  bgcolor: timeTab === tab ? \"#7367F0\" : \"transparent\",\r\n                  borderRadius: 2,\r\n                  px: 2,\r\n                  minHeight: 36,\r\n                }}\r\n              />\r\n            )\r\n          )}\r\n        </Tabs>\r\n      </Box> */}\r\n      {showHeader ? (\r\n        <Box\r\n          display='flex'\r\n          justifyContent='space-between'\r\n          alignItems='center'\r\n          mb={2}\r\n          gap={2}\r\n          sx={{ flexDirection: { xs: \"column\", md: \"row\" } }}\r\n        >\r\n          {showSearch ? (\r\n            <>\r\n              <Box\r\n                component='input'\r\n                placeholder='Search here'\r\n                sx={{\r\n                  flex: 1,\r\n                  bgcolor: \"#2B2B2B\",\r\n                  color: \"#fff\",\r\n                  border: \"1px solid #444\",\r\n                  borderRadius: 2,\r\n                  px: 2,\r\n                  py: 1,\r\n                  outline: \"none\",\r\n                  \"&::placeholder\": {\r\n                    color: \"#aaa\",\r\n                  },\r\n                }}\r\n              />\r\n              {showButton && (\r\n                <Button\r\n                  variant='contained'\r\n                  startIcon={<span style={{ fontSize: 20 }}>＋</span>}\r\n                  sx={{\r\n                    bgcolor: \"#7367F0\",\r\n                    color: \"#fff\",\r\n                    textTransform: \"none\",\r\n                    fontWeight: \"bold\",\r\n                    borderRadius: 2,\r\n\r\n                    px: 3,\r\n                    \"&:hover\": {\r\n                      bgcolor: \"#5e50ee\",\r\n                    },\r\n                  }}\r\n                  onClick={onClick}\r\n                >\r\n                  {buttonText}\r\n                </Button>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Box></Box>\r\n              <Button\r\n                variant='contained'\r\n                startIcon={<span style={{ fontSize: 20 }}>＋</span>}\r\n                sx={{\r\n                  bgcolor: \"#7367F0\",\r\n                  color: \"#fff\",\r\n                  textTransform: \"none\",\r\n                  fontWeight: \"bold\",\r\n                  borderRadius: 2,\r\n\r\n                  px: 3,\r\n                  \"&:hover\": {\r\n                    bgcolor: \"#5e50ee\",\r\n                  },\r\n                }}\r\n                onClick={onClick}\r\n                className='flex self-end '\r\n              >\r\n                {buttonText}\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Box>\r\n      ) : (\r\n        // Tabs Block\r\n        <Box\r\n          display='flex'\r\n          flexDirection={{ xs: \"column\", md: \"row\" }}\r\n          gap={2}\r\n          mb={2}\r\n        >\r\n          <Tabs\r\n            value={statusTab}\r\n            onChange={(_, val) => setStatusTab(val)}\r\n            textColor='inherit'\r\n            indicatorColor='primary'\r\n            variant='scrollable'\r\n            scrollButtons='auto'\r\n            sx={{ flex: 1 }}\r\n          >\r\n            {[\"All\", \"Approved\", \"Pending\", \"Declined\"].map((tab) => (\r\n              <Tab\r\n                key={tab}\r\n                value={tab}\r\n                label={tab}\r\n                sx={{\r\n                  textTransform: \"none\",\r\n                  color: \"white\",\r\n                  bgcolor: statusTab === tab ? \"#7367F0\" : \"transparent\",\r\n                  borderRadius: 2,\r\n                  px: 2,\r\n                  minHeight: 36,\r\n                }}\r\n              />\r\n            ))}\r\n          </Tabs>\r\n\r\n          <Tabs\r\n            value={timeTab}\r\n            onChange={(_, val) => setTimeTab(val)}\r\n            textColor='inherit'\r\n            indicatorColor='primary'\r\n            variant='scrollable'\r\n            scrollButtons='auto'\r\n            sx={{ flex: 1 }}\r\n          >\r\n            {[\"All Time\", \"12 Months\", \"30 Days\", \"7 Days\", \"24 Hour\"].map(\r\n              (tab) => (\r\n                <Tab\r\n                  key={tab}\r\n                  value={tab}\r\n                  label={tab}\r\n                  sx={{\r\n                    textTransform: \"none\",\r\n                    color: \"white\",\r\n                    bgcolor: timeTab === tab ? \"#7367F0\" : \"transparent\",\r\n                    borderRadius: 2,\r\n                    px: 2,\r\n                    minHeight: 36,\r\n                  }}\r\n                />\r\n              )\r\n            )}\r\n          </Tabs>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Table */}\r\n      <TableContainer component={Paper} sx={{ background: \"transparent\" }}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((col) => (\r\n                <TableCell\r\n                  key={col.id}\r\n                  sx={{\r\n                    color: \"#fff\",\r\n                    borderBottom: \"1px solid #333\",\r\n                    fontWeight: 600,\r\n                  }}\r\n                >\r\n                  {col.label}\r\n                </TableCell>\r\n              ))}\r\n              {actions && (\r\n                <TableCell\r\n                  sx={{ color: \"#fff\", borderBottom: \"1px solid #333\" }}\r\n                >\r\n                  Action\r\n                </TableCell>\r\n              )}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data\r\n              .slice((page - 1) * rowsPerPage, page * rowsPerPage)\r\n              .map((row) => (\r\n                <TableRow\r\n                  key={row.id}\r\n                  sx={{ \"&:last-child td\": { border: 0 } }}\r\n                >\r\n                  {columns.map((col) => (\r\n                    <TableCell key={col.id} sx={{ color: \"#ddd\" }}>\r\n                      {col.id === \"status\" ? (\r\n                        <Chip\r\n                          label={row[col.id]}\r\n                          sx={{\r\n                            backgroundColor:\r\n                              statusBgColors[row[col.id]] || \"#888\",\r\n                            color: statusColors[row[col.id]] || \"#888\",\r\n                            fontWeight: 500,\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        row[col.id]\r\n                      )}\r\n                    </TableCell>\r\n                  ))}\r\n                  {actions && (\r\n                    <TableCell>\r\n                      {icon1 && (\r\n                        <>\r\n                          <IconButton onClick={handleClick}>\r\n                            <MoreVertIcon sx={{ color: \"#A78BFA\" }} />\r\n                          </IconButton>\r\n\r\n                          <Popover\r\n                            id={id}\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{\r\n                              vertical: \"bottom\",\r\n                              horizontal: \"left\",\r\n                            }}\r\n                          >\r\n                            <MenuItem onClick={() => handleOption(\"Approved\")}>\r\n                              Approved\r\n                            </MenuItem>\r\n                            <MenuItem onClick={() => handleOption(\"Suspended\")}>\r\n                              Suspended\r\n                            </MenuItem>\r\n                            <MenuItem onClick={() => handleOption(\"Delete\")}>\r\n                              Delete\r\n                            </MenuItem>\r\n                          </Popover>\r\n                        </>\r\n                      )}\r\n                      {icon2 && (\r\n                        <IconButton onClick={onClick}>\r\n                          <EditIcon sx={{ color: \"#A78BFA\" }} />\r\n                        </IconButton>\r\n                      )}\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {/* Footer Pagination */}\r\n      <Box\r\n        mt={2}\r\n        display='flex'\r\n        justifyContent='space-between'\r\n        alignItems='center'\r\n      >\r\n        <Typography variant='body2' color='#aaa'>\r\n          Showing {Math.min((page - 1) * rowsPerPage + 1, total)}–\r\n          {Math.min(page * rowsPerPage, total)} from {total}\r\n        </Typography>\r\n        <Pagination\r\n          count={Math.ceil(total / rowsPerPage)}\r\n          page={page}\r\n          onChange={handlePageChange}\r\n          sx={{\r\n            \"& .MuiPaginationItem-root\": {\r\n              color: \"#fff\",\r\n              borderRadius: \"8px\",\r\n              backgroundColor: \"#2B2B2B\",\r\n            },\r\n            \"& .Mui-selected\": {\r\n              backgroundColor: \"#7367F0\",\r\n              color: \"#fff\",\r\n            },\r\n          }}\r\n        />\r\n      </Box>\r\n      <Modal\r\n        open={isApproveWithdrawModalOpen}\r\n        setOpen={setIsApproveWithdrawModalOpen}\r\n      >\r\n        <div className='text-lg font-medium'>Approve withdrawl?</div>\r\n        <div className='text-[#A9A9A9] mt-4'>\r\n          Do you want to approve withdrawal of $10 of User John Doe?\r\n        </div>\r\n        <div className='flex'>\r\n          <Button\r\n            sx={{\r\n              backgroundColor: \"#008A3D\",\r\n              color: \"#fff\",\r\n              marginTop: \"22px\",\r\n              marginLeft: \"auto\",\r\n            }}\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        open={isSuspendedModalOpen}\r\n        setOpen={setIsSuspendedModalOpen}\r\n      >\r\n        <div className='text-lg font-medium'>Suspend withdrawal?</div>\r\n        <div className='text-[#A9A9A9] mt-4'>\r\n          Do you want to Suspend withdrawal of $10 of User John Doe?\r\n        </div>\r\n        <div className='flex'>\r\n          <Button\r\n            sx={{\r\n              backgroundColor: \"#F04438\",\r\n              color: \"#fff\",\r\n              marginTop: \"22px\",\r\n              marginLeft: \"auto\",\r\n            }}\r\n          >\r\n            Suspended\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        open={isDeleteModalOpen}\r\n        setOpen={setIsDeleteModalOpen}\r\n      >\r\n        <div className='text-lg font-medium'>Delete Machine?</div>\r\n        <div className='text-[#A9A9A9] mt-4'>\r\n          Do you want to Delete the Machine?\r\n        </div>\r\n        <div className='flex'>\r\n          <Button\r\n            sx={{\r\n              backgroundColor: \"#F04438\",\r\n              color: \"#fff\",\r\n              marginTop: \"22px\",\r\n              marginLeft: \"auto\",\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AdminTable\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 738, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/%28pages%29/%28user%29/admin/referral-system-management/page.tsx"],"sourcesContent":["\"use client\"\r\nimport AdminTable from \"@/app/components/ui/tables/AdminTable\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nconst ReferalManagement = () => {\r\n  const router = useRouter()\r\n  const columns = [\r\n    { id: \"name\", label: \"User\" },\r\n    { id: \"email\", label: \"Email\" },\r\n    { id: \"level\", label: \"Level\" },\r\n    { id: \"date\", label: \"Date\" },\r\n    { id: \"rewardAmount\", label: \"Reward Amount\" },\r\n    { id: \"status\", label: \"Status\" },\r\n  ];\r\n\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      name: \"John Bushmill\",\r\n      email: \"Johnb@mail.com\",\r\n      level: 2,\r\n      date: \"1 min ago\",\r\n      rewardAmount: \"$1000\",\r\n      status: \"Failed\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"John Bushmill\",\r\n      email: \"Johnb@mail.com\",\r\n      level: 2,\r\n      date: \"1 min ago\",\r\n      rewardAmount: \"$1000\",\r\n      status: \"Success\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"John Bushmill\",\r\n      email: \"Johnb@mail.com\",\r\n      level: 2,\r\n      date: \"1 min ago\",\r\n      rewardAmount: \"$1000\",\r\n      status: \"Success\",\r\n    },\r\n\r\n    // Add more entries...\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <div className='font-semibold text-xl my-3'>Referral System Management</div>\r\n      <AdminTable onClick={()=>router.push(\"referral-system-management/commission-levels\")} showHeader buttonText=\"Manage Commission Level\" data={data} columns={columns} actions={false} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReferalManagement"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIA,MAAM,oBAAoB;IACxB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,UAAU;QACd;YAAE,IAAI;YAAQ,OAAO;QAAO;QAC5B;YAAE,IAAI;YAAS,OAAO;QAAQ;QAC9B;YAAE,IAAI;YAAS,OAAO;QAAQ;QAC9B;YAAE,IAAI;YAAQ,OAAO;QAAO;QAC5B;YAAE,IAAI;YAAgB,OAAO;QAAgB;QAC7C;YAAE,IAAI;YAAU,OAAO;QAAS;KACjC;IAED,MAAM,OAAO;QACX;YACE,IAAI;YACJ,MAAM;YACN,OAAO;YACP,OAAO;YACP,MAAM;YACN,cAAc;YACd,QAAQ;QACV;QACA;YACE,IAAI;YACJ,MAAM;YACN,OAAO;YACP,OAAO;YACP,MAAM;YACN,cAAc;YACd,QAAQ;QACV;QACA;YACE,IAAI;YACJ,MAAM;YACN,OAAO;YACP,OAAO;YACP,MAAM;YACN,cAAc;YACd,QAAQ;QACV;KAGD;IAED,qBACE,8OAAC;;0BACC,8OAAC;gBAAI,WAAU;0BAA6B;;;;;;0BAC5C,8OAAC,uJAAA,CAAA,UAAU;gBAAC,SAAS,IAAI,OAAO,IAAI,CAAC;gBAAiD,UAAU;gBAAC,YAAW;gBAA0B,MAAM;gBAAM,SAAS;gBAAS,SAAS;;;;;;;;;;;;AAGnL;uCAEe","debugId":null}}]
}