{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/components/modals/Modal.tsx"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport MUIModal from '@mui/material/Modal';\nimport { SxProps, Theme } from '@mui/material/styles';\n\nconst style: SxProps<Theme> = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: \"90%\",\n  maxWidth: 450,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\ninterface ModalProps {\n  open: boolean;\n  setOpen: (open: boolean) => void;\n  children?: React.ReactNode;\n  boxStyle?: SxProps<Theme>;\n}\n\nexport default function Modal({ open, setOpen, children, boxStyle }: ModalProps) {\n  const handleClose = () => setOpen(false);\n\n  return (\n    <MUIModal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n      slotProps={{\n        backdrop: {\n          sx: {\n            backdropFilter: 'blur(4px)',\n            backgroundColor: 'rgba(0,0,0,0.3)',\n          },\n        },\n      }}\n    >\n      <Box sx={{ ...(style as object), ...(boxStyle as object) }}>\n        {children}\n      </Box>\n    </MUIModal>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAGA,MAAM,QAAwB;IAC5B,UAAU;IACV,KAAK;IACL,MAAM;IACN,WAAW;IACX,OAAO;IACP,UAAU;IACV,SAAS;IACT,QAAQ;IACR,WAAW;IACX,GAAG;AACL;AASe,SAAS,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAc;IAC7E,MAAM,cAAc,IAAM,QAAQ;IAElC,qBACE,8OAAC,0JAAA,CAAA,UAAQ;QACP,MAAM;QACN,SAAS;QACT,mBAAgB;QAChB,oBAAiB;QACjB,WAAW;YACT,UAAU;gBACR,IAAI;oBACF,gBAAgB;oBAChB,iBAAiB;gBACnB;YACF;QACF;kBAEA,cAAA,8OAAC,sJAAA,CAAA,UAAG;YAAC,IAAI;gBAAE,GAAI,KAAK;gBAAa,GAAI,QAAQ;YAAY;sBACtD;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/%28pages%29/%28user%29/admin/machineManagement/schema.ts"],"sourcesContent":["import * as yup from \"yup\";\n\nexport const addMachineSchema = yup.object({\n    title:yup.string().required(\"*Required\"),\n    description:yup.string().required(\"*Required\"),\n    price:yup.string().required(\"*Required\"),\n    dailyIncome:yup.string().required(\"*Required\"),\n    fee:yup.string().required(\"*Required\"),\n    rentalDays:yup.number().required(\"*Required and must be a number\"),\n})"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,mBAAmB,CAAA,GAAA,mIAAA,CAAA,SAAU,AAAD,EAAE;IACvC,OAAM,CAAA,GAAA,mIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ,CAAC;IAC5B,aAAY,CAAA,GAAA,mIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ,CAAC;IAClC,OAAM,CAAA,GAAA,mIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ,CAAC;IAC5B,aAAY,CAAA,GAAA,mIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ,CAAC;IAClC,KAAI,CAAA,GAAA,mIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ,CAAC;IAC1B,YAAW,CAAA,GAAA,mIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ,CAAC;AACrC","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/constants/keys.ts"],"sourcesContent":["export const base_url = process.env.NEXT_PUBLIC_API_URL;\n"],"names":[],"mappings":";;;AAAO,MAAM","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/utils/auth.ts"],"sourcesContent":["export const auth = {\n  logout: async () => {\n    // const email =   localStorage.getItem('userEmail');\n    // console.log(email, 'emailemail');\n    // const lastOnboardingDate =   localStorage.getItem('lastOnboardingDate');\n    localStorage.clear();\n    // if (lastOnboardingDate) {\n    //       localStorage.setItem('lastOnboardingDate', lastOnboardingDate);\n    // }\n    // if (email) {\n    //       localStorage.setItem('userEmail', email);\n    // }\n  },\n  delete: async () => {\n    localStorage.clear();\n  },\n  accessToken: async () => {\n    return localStorage.getItem(\"accessToken\");\n  },\n  refreshToken: async () => {\n    return localStorage.getItem(\"refreshToken\");\n  },\n  platform: async () => {\n    return localStorage.getItem(\"platform\");\n  },\n  setUser: async (userId: string) => {\n    localStorage.setItem(\"userId\", userId);\n  },\n  user: async () => {\n    return localStorage.getItem(\"userId\");\n  },\n  updateTokens: async (accessToken: string, refreshToken: string) => {\n    localStorage.setItem(\"accessToken\", accessToken);\n    localStorage.setItem(\"refreshToken\", refreshToken);\n  },\n};\n\nexport default auth;\n"],"names":[],"mappings":";;;;AAAO,MAAM,OAAO;IAClB,QAAQ;QACN,qDAAqD;QACrD,oCAAoC;QACpC,2EAA2E;QAC3E,aAAa,KAAK;IAClB,4BAA4B;IAC5B,wEAAwE;IACxE,IAAI;IACJ,eAAe;IACf,kDAAkD;IAClD,IAAI;IACN;IACA,QAAQ;QACN,aAAa,KAAK;IACpB;IACA,aAAa;QACX,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,cAAc;QACZ,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,UAAU;QACR,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,SAAS,OAAO;QACd,aAAa,OAAO,CAAC,UAAU;IACjC;IACA,MAAM;QACJ,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,cAAc,OAAO,aAAqB;QACxC,aAAa,OAAO,CAAC,eAAe;QACpC,aAAa,OAAO,CAAC,gBAAgB;IACvC;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/utils/axios.ts"],"sourcesContent":["import { base_url } from \"../constants/keys\";\nimport auth from \"./auth\";\nimport axios from \"axios\";\n\nconst apiClient = axios.create({\n  baseURL: base_url,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\", //\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, PATCH, OPTIONS\",\n  },\n});\napiClient.interceptors.request.use(\n  async (config) => {\n    const accessToken = await auth.accessToken();\n    if (accessToken) {\n      config.headers[\"Authorization\"] = `Bearer ${accessToken}`;\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\n      config.headers[\"Access-Control-Allow-Methods\"] =\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\n    }\n    if (config.data instanceof FormData) {\n      config.headers[\"Content-Type\"] = \"multipart/form-data\";\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\n      config.headers[\"Access-Control-Allow-Methods\"] =\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\n    } else {\n      config.headers[\"Content-Type\"] = \"application/json\";\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\n      config.headers[\"Access-Control-Allow-Methods\"] =\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// apiClient.interceptors.response.use(\n//   (response) => response,\n//   async (error) => {\n//     const originalRequest = error.config;\n//     if (error.response?.status === 401 && !originalRequest._retry) {\n//       originalRequest._retry = true;\n//       const refreshToken = await auth.refreshToken();\n\n//       if (refreshToken) {\n//         try {\n//           const response = await axios.post(`${baseUrl}/auth/refresh-token`, {\n//             refreshToken,\n//           });\n//           const { accessToken, refreshToken: newRefreshToken } =\n//             response.data.data;\n//           await auth.updateTokens(accessToken, newRefreshToken);\n//           originalRequest.headers[\"Authorization\"] = `Bearer ${accessToken}`;\n//           return axios(originalRequest);\n//         } catch (refreshError) {\n//           auth.logout();\n//           return Promise.reject(refreshError);\n//         }\n//       } else {\n//         auth.logout();\n//       }\n//     }\n//     return Promise.reject(error);\n//   }\n// );\napiClient.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport const queryFn = async <T>(\n  endpoint: string,\n  params?: Record<string, any>\n): Promise<T> => {\n  const response = await apiClient.get(endpoint, { params });\n  return response.data;\n};\n\nexport const mutationFn = async (\n  endpoint: string,\n  method: \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\",\n  body?: Record<string, any>,\n  headers?: Record<string, any>\n) => {\n  const response = await apiClient.request({\n    url: endpoint,\n    method,\n    data: body,\n    headers: {\n      ...headers,\n    },\n  });\n  return response.data;\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,MAAM,YAAY,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC7B,SAAS,+HAAA,CAAA,WAAQ;IACjB,SAAS;QACP,gBAAgB;QAChB,+BAA+B;QAC/B,gCAAgC;IAClC;AACF;AACA,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAChC,OAAO;IACL,MAAM,cAAc,MAAM,2HAAA,CAAA,UAAI,CAAC,WAAW;IAC1C,IAAI,aAAa;QACf,OAAO,OAAO,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,aAAa;QACzD,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ;IACA,IAAI,OAAO,IAAI,YAAY,UAAU;QACnC,OAAO,OAAO,CAAC,eAAe,GAAG;QACjC,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ,OAAO;QACL,OAAO,OAAO,CAAC,eAAe,GAAG;QACjC,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ;IACA,OAAO;AACT,GACA,CAAC,QAAU,QAAQ,MAAM,CAAC;AAG5B,uCAAuC;AACvC,4BAA4B;AAC5B,uBAAuB;AACvB,4CAA4C;AAC5C,uEAAuE;AACvE,uCAAuC;AACvC,wDAAwD;AAExD,4BAA4B;AAC5B,gBAAgB;AAChB,iFAAiF;AACjF,4BAA4B;AAC5B,gBAAgB;AAChB,mEAAmE;AACnE,kCAAkC;AAClC,mEAAmE;AACnE,gFAAgF;AAChF,2CAA2C;AAC3C,mCAAmC;AACnC,2BAA2B;AAC3B,iDAAiD;AACjD,YAAY;AACZ,iBAAiB;AACjB,yBAAyB;AACzB,UAAU;AACV,QAAQ;AACR,oCAAoC;AACpC,MAAM;AACN,KAAK;AACL,UAAU,YAAY,CAAC,QAAQ,CAAC,GAAG,CACjC,CAAC,WAAa,UACd,OAAO;IACL,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGK,MAAM,UAAU,OACrB,UACA;IAEA,MAAM,WAAW,MAAM,UAAU,GAAG,CAAC,UAAU;QAAE;IAAO;IACxD,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OACxB,UACA,QACA,MACA;IAEA,MAAM,WAAW,MAAM,UAAU,OAAO,CAAC;QACvC,KAAK;QACL;QACA,MAAM;QACN,SAAS;YACP,GAAG,OAAO;QACZ;IACF;IACA,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/api/machineManagement/index.ts"],"sourcesContent":["import { mutationFn, queryFn } from \"@/app/utils/axios\";\nimport { AddMachineType, EditMachineType } from \"./types\";\nimport { MachineItem } from \"@/store/machinesStore\";\n\ninterface ApiResponse {\n    data: {\n      items: MachineItem[]; // Add items array inside data\n      // Add other properties if needed\n    };\n    status: string;\n    message: string;\n  }\n  \nexport const addMachineApi = {\n  mutationFn: (body: AddMachineType) => {\n    return mutationFn(\"products\", \"POST\", body.body);\n  },\n};\nexport const editMachineApi = {\n  mutationFn: ({ id, body }: EditMachineType) => {\n    return mutationFn(`products/${id}`, \"PATCH\", body);\n  },\n};\n\nexport const getMachinesApi = () => ({\n  queryKey: [\"machines\"],\n  queryFn: () => queryFn(`products`) as Promise<ApiResponse>,\n});\nexport const getMachinesById = (id: string) => ({\n  queryKey: [`machine-${id}`],\n  queryFn: () => queryFn(`products/${id}`),\n});\n\nexport const DeleteMachineByID = {\n  mutationFn: (id: string) => {\n    console.log(\"id: \", id);\n    return mutationFn(`products/${id}`, \"DELETE\");\n  },\n};\n"],"names":[],"mappings":";;;;;;;AAAA;;AAaO,MAAM,gBAAgB;IAC3B,YAAY,CAAC;QACX,OAAO,CAAA,GAAA,4HAAA,CAAA,aAAU,AAAD,EAAE,YAAY,QAAQ,KAAK,IAAI;IACjD;AACF;AACO,MAAM,iBAAiB;IAC5B,YAAY,CAAC,EAAE,EAAE,EAAE,IAAI,EAAmB;QACxC,OAAO,CAAA,GAAA,4HAAA,CAAA,aAAU,AAAD,EAAE,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS;IAC/C;AACF;AAEO,MAAM,iBAAiB,IAAM,CAAC;QACnC,UAAU;YAAC;SAAW;QACtB,SAAS,IAAM,CAAA,GAAA,4HAAA,CAAA,UAAO,AAAD,EAAE,CAAC,QAAQ,CAAC;IACnC,CAAC;AACM,MAAM,kBAAkB,CAAC,KAAe,CAAC;QAC9C,UAAU;YAAC,CAAC,QAAQ,EAAE,IAAI;SAAC;QAC3B,SAAS,IAAM,CAAA,GAAA,4HAAA,CAAA,UAAO,AAAD,EAAE,CAAC,SAAS,EAAE,IAAI;IACzC,CAAC;AAEM,MAAM,oBAAoB;IAC/B,YAAY,CAAC;QACX,QAAQ,GAAG,CAAC,QAAQ;QACpB,OAAO,CAAA,GAAA,4HAAA,CAAA,aAAU,AAAD,EAAE,CAAC,SAAS,EAAE,IAAI,EAAE;IACtC;AACF","debugId":null}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/store/machinesStore.ts"],"sourcesContent":["import { create } from \"zustand\";\n\nexport interface MachineItem {\n  id: number;\n  title: string;\n  description: string;\n  price: string;\n  dailyIncome: string;\n  fee: string;\n  rentalDays: number;\n  image: string;\n  userId: number;\n  createdAt: string;\n  updatedAt: string;\n  deletedAt: string | null;\n}\n\ninterface MachineStore {\n  machines: MachineItem[];\n  setAllMachines: (machines: MachineItem[]) => void;\n  addMachine: (machine: MachineItem) => void;\n  deleteMachineById: (id: number) => void;\n}\n\nexport const useMachineStore = create<MachineStore>((set) => ({\n  machines: [],\n\n  setAllMachines: (machines) =>\n    set(() => ({\n      machines: machines,\n    })),\n\n  addMachine: (machine) =>\n    set((state) => ({\n      machines: [...state.machines, machine],\n    })),\n\n  deleteMachineById: (id) =>\n    set((state) => ({\n      machines: state.machines.filter((machine) => machine.id !== id),\n    })),\n}));\n"],"names":[],"mappings":";;;AAAA;;AAwBO,MAAM,kBAAkB,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,EAAgB,CAAC,MAAQ,CAAC;QAC5D,UAAU,EAAE;QAEZ,gBAAgB,CAAC,WACf,IAAI,IAAM,CAAC;oBACT,UAAU;gBACZ,CAAC;QAEH,YAAY,CAAC,UACX,IAAI,CAAC,QAAU,CAAC;oBACd,UAAU;2BAAI,MAAM,QAAQ;wBAAE;qBAAQ;gBACxC,CAAC;QAEH,mBAAmB,CAAC,KAClB,IAAI,CAAC,QAAU,CAAC;oBACd,UAAU,MAAM,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAY,QAAQ,EAAE,KAAK;gBAC9D,CAAC;IACL,CAAC","debugId":null}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/%28pages%29/%28user%29/admin/machineManagement/hooks/index.ts"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FormSubmitHandler, SubmitHandler, useForm } from \"react-hook-form\";\nimport { AddMachineFormType } from \"../types\";\nimport { addMachineSchema } from \"../schema\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport {\n  addMachineApi,\n  DeleteMachineByID,\n  getMachinesApi,\n} from \"@/api/machineManagement\";\nimport { useMachineStore } from \"@/store/machinesStore\";\n\nexport interface Machine {\n  id: number;\n  title: string;\n  description: string;\n  price: string;\n  dailyIncome: string;\n  fee: string;\n  rentalDays: number;\n  roiPercent: number;\n  image: string;\n  createdAt: string;\n  updatedAt: string;\n  deletedAt: string | null;\n  userId: number;\n}\n\nexport default function useMachineManagement() {\n  const {\n    control,\n    handleSubmit,\n    setValue,\n    getValues,\n    watch,\n    reset,\n    formState: { errors, isValid },\n  } = useForm<AddMachineFormType>({\n    resolver: yupResolver(addMachineSchema),\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      price: \"\",\n      dailyIncome: \"\",\n      fee: \"\",\n      rentalDays: 0,\n    },\n  });\n  const handleImageSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      setValue(\"image\", file);\n    }\n  };\n  const {\n    mutateAsync: addMachine,\n    isSuccess,\n    isError,\n    error,\n  } = useMutation({\n    mutationFn: addMachineApi.mutationFn,\n  });\n  const [message, setMessage] = useState(\"\");\n  const [openToast, setOpenToast] = useState(false);\n  const handleAddMachine: SubmitHandler<AddMachineFormType> = async (\n    data\n  ) => {\n    console.log(\"data:\", data);\n    if (!selectedImage) {\n      setOpenToast(true);\n      setMessage(\"Please uplaod an Image\");\n      return;\n    }\n    try {\n      setMessage(\"\");\n      const { title, description, price, dailyIncome, fee, rentalDays } =\n        data as any;\n\n      const formData = new FormData();\n      formData.append(\"title\", title);\n      formData.append(\"description\", description);\n      formData.append(\"price\", price);\n      formData.append(\"dailyIncome\", dailyIncome);\n      formData.append(\"fee\", fee);\n      formData.append(\"rentalDays\", rentalDays);\n\n      if (selectedImage) {\n        formData.append(\"image\", selectedImage);\n      }\n\n      const response = await addMachine({ body: formData });\n      console.log(response);\n      if (response.success === true) {\n        setOpenToast(true);\n        setMessage(\"Product Added Successfully\");\n      }\n      if (response.success === false) {\n        setOpenToast(true);\n        setMessage(response.success);\n      }\n    } catch (err: any) {\n      setOpenToast(true);\n      setOpenToast(true);\n      setMessage(err.message);\n    }\n  };\n  const allValues = watch();\n  console.log(\"all values: \", allValues);\n  const { machines, setAllMachines, deleteMachineById } = useMachineStore();\n  const {\n    data: allMacchines,\n    isLoading,\n    refetch,\n    isError: onError,\n    isSuccess: onSuccess,\n  } = useQuery(getMachinesApi());\n  const getMachines = () => {\n    if (onSuccess) {\n      if (allMacchines?.data?.items) {\n        setAllMachines(allMacchines.data.items);\n      }\n    }\n    if (isError) {\n      setOpenToast(true);\n      setMessage(error.message);\n    }\n  };\n  useEffect(() => {\n    if (allMacchines) {\n      getMachines();\n    }\n  }, [allMacchines]);\n  const { mutateAsync: deleteMachine } = useMutation({\n    mutationFn: DeleteMachineByID.mutationFn,\n  });\n  const handleDeleteMachine = async (id: string) => {\n    try {\n      const response = await deleteMachine(id);\n      deleteMachineById(Number(id));\n      console.log(\"delete: \", response);\n    } catch (error) {\n      console.log(\"error: \", error);\n    }\n  };\n  const getMachineById = (id: string) => {\n    return machines.find((machine) => machine.id === Number(id)) || null;\n  };\n  const [currentMachineId, setCurrentMachineId] = useState(\"\");\n  console.log(currentMachineId);\n  const [currentMachine, setCurrentMachine] = useState<Machine | undefined>();\n  const handelSetEditValues = (id: string) => {\n    localStorage.removeItem(\"id\");\n    const machine = getMachineById(id);\n\n    localStorage.setItem(\"id\", String(machine?.id));\n  };\n\n  const selectedImage = watch(\"image\");\n  return {\n    control,\n    errors,\n    handleSubmit,\n    selectedImage,\n    handleImageSelect,\n    handleAddMachine,\n    isValid,\n    message,\n    setOpenToast,\n    openToast,\n    machines,\n    handleDeleteMachine,\n    handelSetEditValues,\n    currentMachineId,\n    reset,\n    currentMachine,\n  };\n}\n// import React, { useEffect, useState } from \"react\";\n// import { FormSubmitHandler, useForm } from \"react-hook-form\";\n// import { AddMachineFormType } from \"../types\";\n// import { addMachineSchema } from \"../schema\";\n// import { yupResolver } from \"@hookform/resolvers/yup\";\n// import { useMutation, useQuery } from \"@tanstack/react-query\";\n// import {\n//   addMachineApi,\n//   DeleteMachineByID,\n//   getMachinesApi,\n// } from \"@/api/machineManagement\";\n// import { useMachineStore } from \"@/store/machinesStore\";\n\n// export default function useMachineManagement() {\n//   const [isEditMode, setIsEditMode] = useState(false);\n//   const [currentMachineId, setCurrentMachineId] = useState<number | null>(null);\n//   const [selectedImage, setSelectedImage] = useState<File | null>(null);\n\n//   const {\n//     control,\n//     handleSubmit,\n//     setValue,\n//     getValues,\n//     watch,\n//     reset,\n//     formState: { errors, isValid },\n//   } = useForm<AddMachineFormType>({\n//     resolver: yupResolver(addMachineSchema),\n//     mode: \"onChange\",\n//     defaultValues: {\n//       title: \"\",\n//       description: \"\",\n//       price: \"\",\n//       dailyIncome: \"\",\n//       fee: \"\",\n//       rentalDays: 0,\n//     },\n//   });\n\n//   const handleImageSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     const file = event.target.files?.[0];\n//     if (file) {\n//       setSelectedImage(file);\n//       setValue(\"image\", file);\n//     }\n//   };\n\n//   const {\n//     mutateAsync: addMachine,\n//     isSuccess,\n//     isError,\n//     error,\n//   } = useMutation({\n//     mutationFn: addMachineApi.mutationFn,\n//   });\n\n//   const [message, setMessage] = useState(\"\");\n//   const [openToast, setOpenToast] = useState(false);\n\n//   const handleAddMachine: FormSubmitHandler<AddMachineFormType> = async (\n//     data\n//   ) => {\n//     if (!selectedImage && !isEditMode) {\n//       setOpenToast(true);\n//       setMessage(\"Please upload an Image\");\n//       return;\n//     }\n\n//     try {\n//       setMessage(\"\");\n//       const { title, description, price, dailyIncome, fee, rentalDays } =\n//         data as any;\n\n//       const formData = new FormData();\n//       formData.append(\"title\", title);\n//       formData.append(\"description\", description);\n//       formData.append(\"price\", price);\n//       formData.append(\"dailyIncome\", dailyIncome);\n//       formData.append(\"fee\", fee);\n//       formData.append(\"rentalDays\", String(rentalDays));\n\n//       if (selectedImage) {\n//         formData.append(\"image\", selectedImage);\n//       }\n\n//       // If in edit mode, add the machine ID to the request\n//       if (isEditMode && currentMachineId) {\n//         formData.append(\"id\", String(currentMachineId));\n//         // Add your edit machine API call here\n//       }\n\n//       const response = await addMachine({ body: formData });\n\n//       if (response.success === true) {\n//         setOpenToast(true);\n//         setMessage(\n//           isEditMode\n//             ? \"Machine Updated Successfully\"\n//             : \"Machine Added Successfully\"\n//         );\n//         resetForm();\n//       }\n\n//       if (response.success === false) {\n//         setOpenToast(true);\n//         setMessage(response.message || \"Operation failed\");\n//       }\n//     } catch (err: any) {\n//       setOpenToast(true);\n//       setMessage(err.message);\n//     }\n//   };\n\n//   const resetForm = () => {\n//     reset({\n//       title: \"\",\n//       description: \"\",\n//       price: \"\",\n//       dailyIncome: \"\",\n//       fee: \"\",\n//       rentalDays: 0,\n//     });\n//     setSelectedImage(null);\n//     setIsEditMode(false);\n//     setCurrentMachineId(null);\n//   };\n\n//   const { machines, setAllMachines, deleteMachineById } = useMachineStore();\n\n//   const {\n//     data: allMacchines,\n//     isLoading,\n//     refetch,\n//     isError: onError,\n//     isSuccess: onSuccess,\n//   } = useQuery(getMachinesApi());\n\n//   const getMachines = () => {\n//     if (onSuccess) {\n//       if (allMacchines?.data?.items) {\n//         setAllMachines(allMacchines.data.items);\n//       }\n//     }\n//     if (isError) {\n//       setOpenToast(true);\n//       setMessage(error.message);\n//     }\n//   };\n\n//   useEffect(() => {\n//     if (allMacchines) {\n//       getMachines();\n//     }\n//   }, [allMacchines]);\n\n//   const { mutateAsync: deleteMachine } = useMutation({\n//     mutationFn: DeleteMachineByID.mutationFn,\n//   });\n\n//   const handleDeleteMachine = async (id: string) => {\n//     try {\n//       const response = await deleteMachine(id);\n//       deleteMachineById(Number(id));\n//       if (response.success === true) {\n//         setOpenToast(true);\n//         setMessage(\"Machine Deleted Successfully\");\n//       } else {\n//         setMessage(response.message);\n//       }\n//     } catch (error:any) {\n//       setOpenToast(true);\n//       setMessage(error);\n//     }\n//   };\n\n//   const getMachineById = (id: string) => {\n//     return machines.find((machine) => machine.id === Number(id)) || null;\n//   };\n\n//   const handelSetEditValues = (id: string) => {\n//     const machine = getMachineById(id);\n//     console.log(\"machine for editing: \", machine);\n\n//     if (machine) {\n//       // Use setValue for each field individually instead of reset()\n//       setValue(\"title\", machine.title || \"\", {\n//         shouldValidate: true,\n//         shouldDirty: true,\n//       });\n//       setValue(\"description\", machine.description || \"\", {\n//         shouldValidate: true,\n//         shouldDirty: true,\n//       });\n//       setValue(\"price\", machine.price || \"\", {\n//         shouldValidate: true,\n//         shouldDirty: true,\n//       });\n//       setValue(\"dailyIncome\", machine.dailyIncome || \"\", {\n//         shouldValidate: true,\n//         shouldDirty: true,\n//       });\n//       setValue(\"fee\", machine.fee || \"\", {\n//         shouldValidate: true,\n//         shouldDirty: true,\n//       });\n//       setValue(\"rentalDays\", machine.rentalDays || 0, {\n//         shouldValidate: true,\n//         shouldDirty: true,\n//       });\n\n//       // Set edit mode and current machine ID\n//       setIsEditMode(true);\n//       setCurrentMachineId(machine.id);\n//     }\n//   };\n\n//   // Clear form and reset edit mode\n//   const handleCancelEdit = () => {\n//     resetForm();\n//   };\n\n//   return {\n//     control,\n//     errors,\n//     handleSubmit,\n//     selectedImage,\n//     handleImageSelect,\n//     handleAddMachine,\n//     isValid,\n//     message,\n//     setOpenToast,\n//     openToast,\n//     machines,\n//     handleDeleteMachine,\n//     handelSetEditValues,\n//     isEditMode,\n//     handleCancelEdit,\n//   };\n// }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 767, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/components/ui/tables/AdminTable.tsx"],"sourcesContent":["import {\n  Box,\n  Typography,\n  Chip,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  Button,\n  Pagination,\n  Tabs,\n  Tab,\n  Paper,\n  Popover,\n  MenuItem,\n} from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport { useState } from \"react\";\nimport Modal from \"../../modals/Modal\";\nimport useMachineManagement from \"@/app/(pages)/(user)/admin/machineManagement/hooks\";\nimport { useRouter } from \"next/navigation\";\n\ninterface Column {\n  id: string;\n  label: string;\n}\n\ninterface Row {\n  id: string | number;\n  [key: string]: any;\n}\nconst statusColors: Record<string, string> = {\n  Approved: \"#28C76F\",\n  Pending: \"#E46A11\",\n  Suspend: \"#F04438\",\n  Success: \"#28C76F\",\n  Failed: \"#F04438\",\n};\nconst statusBgColors: Record<string, string> = {\n  Approved: \"#274635\",\n  Pending: \"#4c3422\",\n  Suspended: \"#4f2c2a\",\n  Success: \"#28C76F33\",\n  Failed: \"#F0443833\",\n};\ninterface CustomUserTableProps {\n  columns: Column[];\n  data: Row[];\n  total?: number;\n  rowsPerPage?: number;\n  icon1?: boolean;\n  icon2?: boolean;\n  title?: string;\n  onClick?: () => void;\n  onClick2?: () => void;\n  actions?: boolean;\n  showHeader?: boolean;\n  buttonText?: string;\n  showSearch?: boolean;\n  showButton?: boolean;\n  editProduct?: boolean;\n  navUser?: boolean;\n}\n\nconst AdminTable = ({\n  columns,\n  data,\n  total = 100,\n  rowsPerPage = 5,\n  icon1 = true,\n  icon2 = true,\n  title,\n  onClick,\n  actions = true,\n  showHeader = false,\n  buttonText,\n  showSearch = true,\n  showButton = true,\n  editProduct = false,\n  onClick2,\n  navUser,\n}: CustomUserTableProps) => {\n  const router = useRouter();\n  const { handleDeleteMachine, handelSetEditValues } = useMachineManagement();\n  const [page, setPage] = useState(1);\n  const [DeleteID, setDeleteID] = useState(\"\");\n  const [statusTab, setStatusTab] = useState(\"All\");\n  const [timeTab, setTimeTab] = useState(\"All Time\");\n  const [isApproveWithdrawModalOpen, setIsApproveWithdrawModalOpen] =\n    useState(false);\n  const [isSuspendedModalOpen, setIsSuspendedModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n\n  const handlePageChange = (_: any, value: number) => {\n    setPage(value);\n  };\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"status-popover\" : undefined;\n\n  const handleOption = (status: string) => {\n    if (status === \"Approved\") {\n      setIsApproveWithdrawModalOpen(true);\n    }\n    if (status === \"Suspended\") {\n      setIsSuspendedModalOpen(true);\n    }\n    if (status === \"Delete\") {\n      setIsDeleteModalOpen(true);\n    }\n    handleClose();\n  };\n\n  return (\n    <Box sx={{ bgcolor: \"#1E1E1E\", borderRadius: 3, p: 2 }}>\n      <Typography variant=\"h6\" color=\"white\" fontWeight=\"bold\" mb={2}>\n        {title}\n      </Typography>\n\n      {/* Tabs */}\n      {/* <Box\n        display=\"flex\"\n        flexDirection={{ xs: \"column\", md: \"row\" }}\n        gap={2}\n        mb={2}\n      >\n        <Tabs\n          value={statusTab}\n          onChange={(_, val) => setStatusTab(val)}\n          textColor='inherit'\n          indicatorColor='primary'\n          variant='scrollable'\n          scrollButtons='auto'\n          sx={{ flex: 1 }}\n        >\n          {[\"All\", \"Approved\", \"Pending\", \"Declined\"].map((tab) => (\n            <Tab\n              key={tab}\n              value={tab}\n              label={tab}\n              sx={{\n                textTransform: \"none\",\n                color: \"white\",\n                bgcolor: statusTab === tab ? \"#7367F0\" : \"transparent\",\n                borderRadius: 2,\n                px: 2,\n                minHeight: 36,\n              }}\n            />\n          ))}\n        </Tabs>\n\n        <Tabs\n          value={timeTab}\n          onChange={(_, val) => setTimeTab(val)}\n          textColor='inherit'\n          indicatorColor='primary'\n          variant='scrollable'\n          scrollButtons='auto'\n          sx={{ flex: 1 }}\n        >\n          {[\"All Time\", \"12 Months\", \"30 Days\", \"7 Days\", \"24 Hour\"].map(\n            (tab) => (\n              <Tab\n                key={tab}\n                value={tab}\n                label={tab}\n                sx={{\n                  textTransform: \"none\",\n                  color: \"white\",\n                  bgcolor: timeTab === tab ? \"#7367F0\" : \"transparent\",\n                  borderRadius: 2,\n                  px: 2,\n                  minHeight: 36,\n                }}\n              />\n            )\n          )}\n        </Tabs>\n      </Box> */}\n      {showHeader ? (\n        <Box\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          mb={2}\n          gap={2}\n          sx={{ flexDirection: { xs: \"column\", md: \"row\" } }}\n        >\n          {showSearch ? (\n            <>\n              <Box\n                component=\"input\"\n                placeholder=\"Search here\"\n                sx={{\n                  flex: 1,\n                  bgcolor: \"#2B2B2B\",\n                  color: \"#fff\",\n                  border: \"1px solid #444\",\n                  borderRadius: 2,\n                  px: 2,\n                  py: 1,\n                  outline: \"none\",\n                  \"&::placeholder\": {\n                    color: \"#aaa\",\n                  },\n                }}\n              />\n              {showButton && (\n                <Button\n                  variant=\"contained\"\n                  startIcon={<span style={{ fontSize: 20 }}>＋</span>}\n                  sx={{\n                    bgcolor: \"#7367F0\",\n                    color: \"#fff\",\n                    textTransform: \"none\",\n                    fontWeight: \"bold\",\n                    borderRadius: 2,\n\n                    px: 3,\n                    \"&:hover\": {\n                      bgcolor: \"#5e50ee\",\n                    },\n                  }}\n                  onClick={onClick}\n                >\n                  {buttonText}\n                </Button>\n              )}\n            </>\n          ) : (\n            <>\n              <Box></Box>\n              <Button\n                variant=\"contained\"\n                startIcon={<span style={{ fontSize: 20 }}>＋</span>}\n                sx={{\n                  bgcolor: \"#7367F0\",\n                  color: \"#fff\",\n                  textTransform: \"none\",\n                  fontWeight: \"bold\",\n                  borderRadius: 2,\n\n                  px: 3,\n                  \"&:hover\": {\n                    bgcolor: \"#5e50ee\",\n                  },\n                }}\n                onClick={onClick}\n                className=\"flex self-end \"\n              >\n                {buttonText}\n              </Button>\n            </>\n          )}\n        </Box>\n      ) : (\n        // Tabs Block\n        <Box\n          display=\"flex\"\n          flexDirection={{ xs: \"column\", md: \"row\" }}\n          gap={2}\n          mb={2}\n        >\n          <Tabs\n            value={statusTab}\n            onChange={(_, val) => setStatusTab(val)}\n            textColor=\"inherit\"\n            indicatorColor=\"primary\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            sx={{ flex: 1 }}\n          >\n            {[\"All\", \"Approved\", \"Pending\", \"Declined\"].map((tab) => (\n              <Tab\n                key={tab}\n                value={tab}\n                label={tab}\n                sx={{\n                  textTransform: \"none\",\n                  color: \"white\",\n                  bgcolor: statusTab === tab ? \"#7367F0\" : \"transparent\",\n                  borderRadius: 2,\n                  px: 2,\n                  minHeight: 36,\n                }}\n              />\n            ))}\n          </Tabs>\n\n          <Tabs\n            value={timeTab}\n            onChange={(_, val) => setTimeTab(val)}\n            textColor=\"inherit\"\n            indicatorColor=\"primary\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            sx={{ flex: 1 }}\n          >\n            {[\"All Time\", \"12 Months\", \"30 Days\", \"7 Days\", \"24 Hour\"].map(\n              (tab) => (\n                <Tab\n                  key={tab}\n                  value={tab}\n                  label={tab}\n                  sx={{\n                    textTransform: \"none\",\n                    color: \"white\",\n                    bgcolor: timeTab === tab ? \"#7367F0\" : \"transparent\",\n                    borderRadius: 2,\n                    px: 2,\n                    minHeight: 36,\n                  }}\n                />\n              )\n            )}\n          </Tabs>\n        </Box>\n      )}\n\n      {/* Table */}\n      <TableContainer component={Paper} sx={{ background: \"transparent\" }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {columns.map((col) => (\n                <TableCell\n                  key={col.id}\n                  sx={{\n                    color: \"#fff\",\n                    borderBottom: \"1px solid #333\",\n                    fontWeight: 600,\n                  }}\n                >\n                  {col.label}\n                </TableCell>\n              ))}\n              {actions && (\n                <TableCell\n                  sx={{ color: \"#fff\", borderBottom: \"1px solid #333\" }}\n                >\n                  Action\n                </TableCell>\n              )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data\n              .slice((page - 1) * rowsPerPage, page * rowsPerPage)\n              .map((row) => (\n                <TableRow\n                  key={row.id}\n                  sx={{ \"&:last-child td\": { border: 0 } }}\n                >\n                  {columns.map((col) => (\n                    <TableCell key={col.id} sx={{ color: \"#ddd\" }}>\n                      {col.id === \"status\" ? (\n                        <Chip\n                          label={row[col.id]}\n                          sx={{\n                            backgroundColor:\n                              statusBgColors[row[col.id]] || \"#888\",\n                            color: statusColors[row[col.id]] || \"#888\",\n                            fontWeight: 500,\n                          }}\n                        />\n                      ) : (\n                        row[col.id]\n                      )}\n                    </TableCell>\n                  ))}\n                  {actions && (\n                    <TableCell>\n                      {icon1 && (\n                        <>\n                          <IconButton onClick={handleClick}>\n                            <MoreVertIcon sx={{ color: \"#A78BFA\" }} />\n                          </IconButton>\n\n                          <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                              vertical: \"bottom\",\n                              horizontal: \"left\",\n                            }}\n                          >\n                            <MenuItem onClick={() => handleOption(\"Approved\")}>\n                              Approved\n                            </MenuItem>\n                            <MenuItem onClick={() => handleOption(\"Suspended\")}>\n                              Suspended\n                            </MenuItem>\n                            <MenuItem\n                              onClick={() => {\n                                handleOption(\"Delete\");\n                                setDeleteID(String(row.id));\n                              }}\n                            >\n                              Delete\n                            </MenuItem>\n                          </Popover>\n                        </>\n                      )}\n                      {/* {icon2 && (\n                        <IconButton\n                          onClick={() => {\n                            if (editProduct) {\n                              handelSetEditValues(String(row.id));\n                              onClick2();\n                            } else if (navUser) {\n                              router.push(\n                                `/admin/usersManagement/details?id=${row.id}`\n                              );\n                            } else {\n                              onClick2();\n                            }\n                          }}\n                        >\n                          <EditIcon sx={{ color: \"#A78BFA\" }} />\n                        </IconButton>\n                      )} */}\n                      {icon2 && (\n                        <IconButton\n                          onClick={() => {\n                            if (editProduct) {\n                              handelSetEditValues(String(row.id));\n                              onClick2 && onClick2(); // Check if onClick2 is defined before calling it\n                            } else if (navUser) {\n                              router.push(\n                                `/admin/usersManagement/details?id=${row.id}`\n                              );\n                            } else {\n                              onClick2 && onClick2(); // Check if onClick2 is defined before calling it\n                            }\n                          }}\n                        >\n                          <EditIcon sx={{ color: \"#A78BFA\" }} />\n                        </IconButton>\n                      )}\n                    </TableCell>\n                  )}\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {/* Footer Pagination */}\n      <Box\n        mt={2}\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"body2\" color=\"#aaa\">\n          Showing {Math.min((page - 1) * rowsPerPage + 1, total)}–\n          {Math.min(page * rowsPerPage, total)} from {total}\n        </Typography>\n        <Pagination\n          count={Math.ceil(total / rowsPerPage)}\n          page={page}\n          onChange={handlePageChange}\n          sx={{\n            \"& .MuiPaginationItem-root\": {\n              color: \"#fff\",\n              borderRadius: \"8px\",\n              backgroundColor: \"#2B2B2B\",\n            },\n            \"& .Mui-selected\": {\n              backgroundColor: \"#7367F0\",\n              color: \"#fff\",\n            },\n          }}\n        />\n      </Box>\n      <Modal\n        open={isApproveWithdrawModalOpen}\n        setOpen={setIsApproveWithdrawModalOpen}\n      >\n        <div className=\"text-lg font-medium\">Approve withdrawl?</div>\n        <div className=\"text-[#A9A9A9] mt-4\">\n          Do you want to approve withdrawal of $10 of User John Doe?\n        </div>\n        <div className=\"flex\">\n          <Button\n            sx={{\n              backgroundColor: \"#008A3D\",\n              color: \"#fff\",\n              marginTop: \"22px\",\n              marginLeft: \"auto\",\n            }}\n          >\n            Confirm\n          </Button>\n        </div>\n      </Modal>\n      <Modal open={isSuspendedModalOpen} setOpen={setIsSuspendedModalOpen}>\n        <div className=\"text-lg font-medium\">Suspend withdrawal?</div>\n        <div className=\"text-[#A9A9A9] mt-4\">\n          Do you want to Suspend withdrawal of $10 of User John Doe?\n        </div>\n        <div className=\"flex\">\n          <Button\n            sx={{\n              backgroundColor: \"#F04438\",\n              color: \"#fff\",\n              marginTop: \"22px\",\n              marginLeft: \"auto\",\n            }}\n          >\n            Suspended\n          </Button>\n        </div>\n      </Modal>\n      <Modal open={isDeleteModalOpen} setOpen={setIsDeleteModalOpen}>\n        <div className=\"text-lg font-medium\">Delete Machine?</div>\n        <div className=\"text-[#A9A9A9] mt-4\">\n          Do you want to Delete the Machine?\n        </div>\n        <div className=\"flex\">\n          <Button\n            sx={{\n              backgroundColor: \"#F04438\",\n              color: \"#fff\",\n              marginTop: \"22px\",\n              marginLeft: \"auto\",\n            }}\n            onClick={async () => {\n              await handleDeleteMachine(DeleteID);\n              setIsDeleteModalOpen(false);\n            }}\n          >\n            Delete\n          </Button>\n        </div>\n      </Modal>\n    </Box>\n  );\n};\n\nexport default AdminTable;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1462, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/api/adminRewards/index.ts"],"sourcesContent":["import { mutationFn, queryFn } from \"@/app/utils/axios\";\nimport { RawRewardItem } from \"@/store/rewardsStore\";\nimport { IAddRewardValue } from \"./types\";\n\nexport interface AdminDashboardStats {\n  totalUsers: number;\n  verifiedUsers: number;\n  suspendedUsers: number;\n  activeMachines: number;\n  rewardsDistributed: number;\n  platformBalance: number;\n  totalRevenue: number;\n  pendingWithdrawals: number;\n}\ninterface AllRewardsApiResponse {\n    data: {\n      items: RawRewardItem[]; // Add items array inside data\n      // Add other properties if needed\n    };\n    status: string;\n    message: string; \n  }\nexport const getAllRewardsApi = () => ({\n  queryKey: [\"rewards-admin\"],\n  queryFn: (): Promise<AllRewardsApiResponse> => queryFn(`reward`),\n});\n\n\nexport const addRewardApi = {\n    mutationFn: (body: IAddRewardValue) => {\n        return mutationFn('reward/reward', 'POST', body);\n    },\n};"],"names":[],"mappings":";;;;AAAA;;AAsBO,MAAM,mBAAmB,IAAM,CAAC;QACrC,UAAU;YAAC;SAAgB;QAC3B,SAAS,IAAsC,CAAA,GAAA,4HAAA,CAAA,UAAO,AAAD,EAAE,CAAC,MAAM,CAAC;IACjE,CAAC;AAGM,MAAM,eAAe;IACxB,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,4HAAA,CAAA,aAAU,AAAD,EAAE,iBAAiB,QAAQ;IAC/C;AACJ","debugId":null}},
    {"offset": {"line": 1485, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/store/rewardsStore.ts"],"sourcesContent":["import { formatDistanceToNow } from \"date-fns\";\nimport { create } from \"zustand\";\n\ninterface Product {\n  id: number;\n  title: string;\n}\n\ninterface User {\n  id: number;\n  username: string;\n  email: string;\n}\n\nexport interface RawRewardItem {\n  id: number;\n  productId: number;\n  product: Product;\n  reward: string;\n  status: string;\n  date: string;\n  createdAt: string;\n  updatedAt: string;\n  userId: number;\n  user: User;\n}\n\nexport interface FlatRewardItem {\n  id: number;\n  productTitle: string;\n  reward: string;\n  status: string;\n  date: string;\n  createdAt: string;\n  updatedAt: string;\n  userName: string;\n  userEmail: string;\n}\n\ninterface RewardStore {\n  rewards: FlatRewardItem[];\n  setAllRewards: (items: RawRewardItem[]) => void;\n  addReward: (item: RawRewardItem) => void;\n}\nconst capitalizeStatus = (status: string) =>\n  status.charAt(0).toUpperCase() + status.slice(1).toLowerCase();\nexport const useRewardStore = create<RewardStore>((set) => ({\n  rewards: [],\n\n  setAllRewards: (items) =>\n    set(() => ({\n      rewards: items.map((i) => ({\n        id: i.id,\n        productTitle: i.product?.title ?? \"Unknown Product\",\n        reward: i.reward,\n        status: capitalizeStatus(i.status),\n        date: new Date(i.date).toLocaleDateString(),\n        createdAt: formatDistanceToNow(new Date(i.createdAt), {\n          addSuffix: true,\n        }),\n        updatedAt: i.updatedAt,\n        userName: i.user?.username ?? \"Unknown User\",\n        userEmail: i.user?.email ?? \"N/A\",\n      })),\n    })),\n\n  addReward: (item) =>\n    set((state) => ({\n      rewards: [\n        ...state.rewards,\n        {\n          id: item.id,\n          productTitle: item.product?.title ?? \"Unknown Product\",\n          reward: item.reward,\n          status: item.status,\n          date: new Date(item.date).toLocaleDateString(),\n          createdAt: formatDistanceToNow(new Date(item.createdAt), {\n            addSuffix: true,\n          }),\n          updatedAt: item.updatedAt,\n          userName: item.user?.username ?? \"Unknown User\",\n          userEmail: item.user?.email ?? \"N/A\",\n        },\n      ],\n    })),\n}));\n"],"names":[],"mappings":";;;AAAA;AACA;;;AA2CA,MAAM,mBAAmB,CAAC,SACxB,OAAO,MAAM,CAAC,GAAG,WAAW,KAAK,OAAO,KAAK,CAAC,GAAG,WAAW;AACvD,MAAM,iBAAiB,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,EAAe,CAAC,MAAQ,CAAC;QAC1D,SAAS,EAAE;QAEX,eAAe,CAAC,QACd,IAAI,IAAM,CAAC;oBACT,SAAS,MAAM,GAAG,CAAC,CAAC,IAAM,CAAC;4BACzB,IAAI,EAAE,EAAE;4BACR,cAAc,EAAE,OAAO,EAAE,SAAS;4BAClC,QAAQ,EAAE,MAAM;4BAChB,QAAQ,iBAAiB,EAAE,MAAM;4BACjC,MAAM,IAAI,KAAK,EAAE,IAAI,EAAE,kBAAkB;4BACzC,WAAW,CAAA,GAAA,kJAAA,CAAA,sBAAmB,AAAD,EAAE,IAAI,KAAK,EAAE,SAAS,GAAG;gCACpD,WAAW;4BACb;4BACA,WAAW,EAAE,SAAS;4BACtB,UAAU,EAAE,IAAI,EAAE,YAAY;4BAC9B,WAAW,EAAE,IAAI,EAAE,SAAS;wBAC9B,CAAC;gBACH,CAAC;QAEH,WAAW,CAAC,OACV,IAAI,CAAC,QAAU,CAAC;oBACd,SAAS;2BACJ,MAAM,OAAO;wBAChB;4BACE,IAAI,KAAK,EAAE;4BACX,cAAc,KAAK,OAAO,EAAE,SAAS;4BACrC,QAAQ,KAAK,MAAM;4BACnB,QAAQ,KAAK,MAAM;4BACnB,MAAM,IAAI,KAAK,KAAK,IAAI,EAAE,kBAAkB;4BAC5C,WAAW,CAAA,GAAA,kJAAA,CAAA,sBAAmB,AAAD,EAAE,IAAI,KAAK,KAAK,SAAS,GAAG;gCACvD,WAAW;4BACb;4BACA,WAAW,KAAK,SAAS;4BACzB,UAAU,KAAK,IAAI,EAAE,YAAY;4BACjC,WAAW,KAAK,IAAI,EAAE,SAAS;wBACjC;qBACD;gBACH,CAAC;IACL,CAAC","debugId":null}},
    {"offset": {"line": 1535, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/%28pages%29/%28user%29/admin/rewards-distribution/hooks/index.ts"],"sourcesContent":["import { AdminDashboardStats } from \"@/api/adminDashboard\";\nimport { getAllRewardsApi } from \"@/api/adminRewards\";\nimport { useRewardStore } from \"@/store/rewardsStore\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport React, { useEffect } from \"react\";\n\nexport default function useRewards() {\n  const {\n    data: allrewards,\n    isLoading,\n    refetch,\n    isError: onError,\n    isSuccess: onSuccess,\n  } = useQuery(getAllRewardsApi());\n  const { rewards, setAllRewards } = useRewardStore();\n  console.log('all rewards: ',allrewards)\n  useEffect(() => {\n    if (allrewards) {\n      setAllRewards(allrewards.data.items);\n    }\n  }, [allrewards]);\n\n  return { rewards };\n}\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;;;;;AAEe,SAAS;IACtB,MAAM,EACJ,MAAM,UAAU,EAChB,SAAS,EACT,OAAO,EACP,SAAS,OAAO,EAChB,WAAW,SAAS,EACrB,GAAG,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD;IAC5B,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,iBAAc,AAAD;IAChD,QAAQ,GAAG,CAAC,iBAAgB;IAC5B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,YAAY;YACd,cAAc,WAAW,IAAI,CAAC,KAAK;QACrC;IACF,GAAG;QAAC;KAAW;IAEf,OAAO;QAAE;IAAQ;AACnB","debugId":null}},
    {"offset": {"line": 1567, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/%28pages%29/%28user%29/admin/rewards-distribution/page.tsx"],"sourcesContent":["\"use client\";\nimport AdminTable from \"@/app/components/ui/tables/AdminTable\";\nimport useRewards from \"./hooks\";\n\nconst page = () => {\n  const columns = [\n    { id: \"userName\", label: \"User\" },\n    { id: \"userEmail\", label: \"Email\" },\n    { id: \"createdAt\", label: \"Date\" },\n    { id: \"reward\", label: \"Reward Amount\" },\n    { id: \"status\", label: \"Status\" },\n  ];\n  const { rewards } = useRewards();\n  const data = [\n    {\n      id: 1,\n      name: \"John Bushmill\",\n      email: \"Johnb@mail.com\",\n      level: 2,\n      date: \"1 min ago\",\n      rewardAmount: \"$1000\",\n      status: \"Failed\",\n    },\n    {\n      id: 2,\n      name: \"John Bushmill\",\n      email: \"Johnb@mail.com\",\n      level: 2,\n      date: \"1 min ago\",\n      rewardAmount: \"$1000\",\n      status: \"Success\",\n    },\n    {\n      id: 3,\n      name: \"John Bushmill\",\n      email: \"Johnb@mail.com\",\n      level: 2,\n      date: \"1 min ago\",\n      rewardAmount: \"$1000\",\n      status: \"Success\",\n    },\n\n    // Add more entries...\n  ];\n\n  return (\n    <div>\n      <div className=\"font-semibold text-xl my-3\">Rewards Distribution</div>\n      {rewards.length > 0 ? (\n        <AdminTable\n          showHeader={true}\n          buttonText=\"Distribute Awards Manually\"\n          data={rewards}\n          columns={columns}\n          actions={false}\n        />\n      ) : (\n        <div className=\"text-xl text-white font-bold text-center\">\n          Loading...\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default page;\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIA,MAAM,OAAO;IACX,MAAM,UAAU;QACd;YAAE,IAAI;YAAY,OAAO;QAAO;QAChC;YAAE,IAAI;YAAa,OAAO;QAAQ;QAClC;YAAE,IAAI;YAAa,OAAO;QAAO;QACjC;YAAE,IAAI;YAAU,OAAO;QAAgB;QACvC;YAAE,IAAI;YAAU,OAAO;QAAS;KACjC;IACD,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,yLAAA,CAAA,UAAU,AAAD;IAC7B,MAAM,OAAO;QACX;YACE,IAAI;YACJ,MAAM;YACN,OAAO;YACP,OAAO;YACP,MAAM;YACN,cAAc;YACd,QAAQ;QACV;QACA;YACE,IAAI;YACJ,MAAM;YACN,OAAO;YACP,OAAO;YACP,MAAM;YACN,cAAc;YACd,QAAQ;QACV;QACA;YACE,IAAI;YACJ,MAAM;YACN,OAAO;YACP,OAAO;YACP,MAAM;YACN,cAAc;YACd,QAAQ;QACV;KAGD;IAED,qBACE,8OAAC;;0BACC,8OAAC;gBAAI,WAAU;0BAA6B;;;;;;YAC3C,QAAQ,MAAM,GAAG,kBAChB,8OAAC,uJAAA,CAAA,UAAU;gBACT,YAAY;gBACZ,YAAW;gBACX,MAAM;gBACN,SAAS;gBACT,SAAS;;;;;qCAGX,8OAAC;gBAAI,WAAU;0BAA2C;;;;;;;;;;;;AAMlE;uCAEe","debugId":null}}]
}