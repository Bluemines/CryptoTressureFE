{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/components/modals/Modal.tsx"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport MUIModal from '@mui/material/Modal';\nimport { SxProps, Theme } from '@mui/material/styles';\n\nconst style: SxProps<Theme> = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: \"90%\",\n  maxWidth: 450,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\ninterface ModalProps {\n  open: boolean;\n  setOpen: (open: boolean) => void;\n  children?: React.ReactNode;\n  boxStyle?: SxProps<Theme>;\n}\n\nexport default function Modal({ open, setOpen, children, boxStyle }: ModalProps) {\n  const handleClose = () => setOpen(false);\n\n  return (\n    <MUIModal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n      slotProps={{\n        backdrop: {\n          sx: {\n            backdropFilter: 'blur(4px)',\n            backgroundColor: 'rgba(0,0,0,0.3)',\n          },\n        },\n      }}\n    >\n      <Box sx={{ ...(style as object), ...(boxStyle as object) }}>\n        {children}\n      </Box>\n    </MUIModal>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAGA,MAAM,QAAwB;IAC5B,UAAU;IACV,KAAK;IACL,MAAM;IACN,WAAW;IACX,OAAO;IACP,UAAU;IACV,SAAS;IACT,QAAQ;IACR,WAAW;IACX,GAAG;AACL;AASe,SAAS,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAc;IAC7E,MAAM,cAAc,IAAM,QAAQ;IAElC,qBACE,8OAAC,0JAAA,CAAA,UAAQ;QACP,MAAM;QACN,SAAS;QACT,mBAAgB;QAChB,oBAAiB;QACjB,WAAW;YACT,UAAU;gBACR,IAAI;oBACF,gBAAgB;oBAChB,iBAAiB;gBACnB;YACF;QACF;kBAEA,cAAA,8OAAC,sJAAA,CAAA,UAAG;YAAC,IAAI;gBAAE,GAAI,KAAK;gBAAa,GAAI,QAAQ;YAAY;sBACtD;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/components/ui/Inputs/FormInput.tsx"],"sourcesContent":["// import React from \"react\";\n// import { Controller, Control, FieldErrors } from \"react-hook-form\";\n// import { TextField } from \"@mui/material\";\n\n// interface FormInputProps {\n//   name: string;\n//   control: Control<any>;\n//   label: string;\n//   type?: string;\n//   errors?: FieldErrors;\n//   multiline?: boolean;\n//   rows?: number;\n// }\n\n// const FormInput: React.FC<FormInputProps> = ({\n//   name,\n//   control,\n//   label,\n//   type = \"text\",\n//   errors,\n//   multiline = false,\n//   rows = 4,\n// }) => {\n//   return (\n//     <Controller\n//       name={name}\n//       control={control}\n//       render={({ field }) => (\n//         <TextField\n//           {...field}\n//           type={type}\n//           label={label}\n//           variant=\"outlined\"\n//           fullWidth\n//           margin=\"normal\"\n//           multiline={multiline}\n//           rows={multiline ? rows : undefined}\n//           error={!!errors?.[name]}\n//           helperText={errors?.[name]?.message as string}\n//           InputLabelProps={{ style: { color: \"#aaa\" } }}\n//           InputProps={{\n//             style: { color: \"#fff\" },\n//           }}\n//           sx={{\n//             backgroundColor: \"#262626\",\n//             // px: 2,\n//             // py: 1,\n//             borderRadius: \"6px\",\n//             \"& .MuiOutlinedInput-root\": {\n//               \"& fieldset\": {\n//                 borderColor: \"#444\",\n//               },\n//               \"&:hover fieldset\": {\n//                 borderColor: \"#666\",\n//               },\n//               \"&.Mui-focused fieldset\": {\n//                 borderColor: \"#888\",\n//               },\n//             },\n//             \"& .MuiInputBase-root\": {\n//               color: \"#fff\",\n//             },\n//           }}\n//         />\n//       )}\n//     />\n//   );\n// };\n\n// export default FormInput;\nimport React, { useState } from \"react\";\nimport { Controller, Control, FieldErrors } from \"react-hook-form\";\nimport { TextField, IconButton, InputAdornment } from \"@mui/material\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\n\ninterface FormInputProps {\n  name: string;\n  control: Control<any>;\n  label: string;\n  type?: string;\n  errors?: FieldErrors;\n  multiline?: boolean;\n  rows?: number;\n  rules?: any;\n}\n\nconst FormInput: React.FC<FormInputProps> = ({\n  name,\n  control,\n  label,\n  type = \"text\",\n  errors,\n  multiline = false,\n  rows = 4,\n  rules,\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const isPassword = type === \"password\";\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prev) => !prev);\n  };\n\n  return (\n    <Controller\n      rules={rules}\n      name={name}\n      control={control}\n      render={({ field }) => (\n        <TextField\n          {...field}\n          type={isPassword && !showPassword ? \"password\" : \"text\"}\n          label={label}\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          multiline={multiline}\n          rows={multiline ? rows : undefined}\n          error={!!errors?.[name]}\n          helperText={errors?.[name]?.message as string}\n          InputLabelProps={{ style: { color: \"#aaa\" } }}\n          InputProps={{\n            style: { color: \"#fff\" },\n            endAdornment: isPassword && (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={togglePasswordVisibility}\n                  edge=\"end\"\n                  sx={{ color: \"#aaa\" }}\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          sx={{\n            backgroundColor: \"#262626\",\n            borderRadius: \"6px\",\n            \"& .MuiOutlinedInput-root\": {\n              \"& fieldset\": {\n                borderColor: \"#444\",\n              },\n              \"&:hover fieldset\": {\n                borderColor: \"#666\",\n              },\n              \"&.Mui-focused fieldset\": {\n                borderColor: \"#888\",\n              },\n            },\n          }}\n        />\n      )}\n    />\n  );\n};\n\nexport default FormInput;\n"],"names":[],"mappings":"AAAA,6BAA6B;AAC7B,sEAAsE;AACtE,6CAA6C;AAE7C,6BAA6B;AAC7B,kBAAkB;AAClB,2BAA2B;AAC3B,mBAAmB;AACnB,mBAAmB;AACnB,0BAA0B;AAC1B,yBAAyB;AACzB,mBAAmB;AACnB,IAAI;AAEJ,iDAAiD;AACjD,UAAU;AACV,aAAa;AACb,WAAW;AACX,mBAAmB;AACnB,YAAY;AACZ,uBAAuB;AACvB,cAAc;AACd,UAAU;AACV,aAAa;AACb,kBAAkB;AAClB,oBAAoB;AACpB,0BAA0B;AAC1B,iCAAiC;AACjC,qBAAqB;AACrB,uBAAuB;AACvB,wBAAwB;AACxB,0BAA0B;AAC1B,+BAA+B;AAC/B,sBAAsB;AACtB,4BAA4B;AAC5B,kCAAkC;AAClC,gDAAgD;AAChD,qCAAqC;AACrC,2DAA2D;AAC3D,2DAA2D;AAC3D,0BAA0B;AAC1B,wCAAwC;AACxC,eAAe;AACf,kBAAkB;AAClB,0CAA0C;AAC1C,wBAAwB;AACxB,wBAAwB;AACxB,mCAAmC;AACnC,4CAA4C;AAC5C,gCAAgC;AAChC,uCAAuC;AACvC,mBAAmB;AACnB,sCAAsC;AACtC,uCAAuC;AACvC,mBAAmB;AACnB,4CAA4C;AAC5C,uCAAuC;AACvC,mBAAmB;AACnB,iBAAiB;AACjB,wCAAwC;AACxC,+BAA+B;AAC/B,iBAAiB;AACjB,eAAe;AACf,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AAEL,4BAA4B;;;;;AAC5B;AACA;AACA;AAAA;AAAA;AACA;AAAA;;;;;;;AAaA,MAAM,YAAsC,CAAC,EAC3C,IAAI,EACJ,OAAO,EACP,KAAK,EACL,OAAO,MAAM,EACb,MAAM,EACN,YAAY,KAAK,EACjB,OAAO,CAAC,EACR,KAAK,EACN;IACC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,aAAa,SAAS;IAE5B,MAAM,2BAA2B;QAC/B,gBAAgB,CAAC,OAAS,CAAC;IAC7B;IAEA,qBACE,8OAAC,8JAAA,CAAA,aAAU;QACT,OAAO;QACP,MAAM;QACN,SAAS;QACT,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,0MAAA,CAAA,YAAS;gBACP,GAAG,KAAK;gBACT,MAAM,cAAc,CAAC,eAAe,aAAa;gBACjD,OAAO;gBACP,SAAQ;gBACR,SAAS;gBACT,QAAO;gBACP,WAAW;gBACX,MAAM,YAAY,OAAO;gBACzB,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK;gBACvB,YAAY,QAAQ,CAAC,KAAK,EAAE;gBAC5B,iBAAiB;oBAAE,OAAO;wBAAE,OAAO;oBAAO;gBAAE;gBAC5C,YAAY;oBACV,OAAO;wBAAE,OAAO;oBAAO;oBACvB,cAAc,4BACZ,8OAAC,yNAAA,CAAA,iBAAc;wBAAC,UAAS;kCACvB,cAAA,8OAAC,6MAAA,CAAA,aAAU;4BACT,SAAS;4BACT,MAAK;4BACL,IAAI;gCAAE,OAAO;4BAAO;sCAEnB,6BAAe,8OAAC,kKAAA,CAAA,UAAa;;;;uDAAM,8OAAC,+JAAA,CAAA,UAAU;;;;;;;;;;;;;;;gBAIvD;gBACA,IAAI;oBACF,iBAAiB;oBACjB,cAAc;oBACd,4BAA4B;wBAC1B,cAAc;4BACZ,aAAa;wBACf;wBACA,oBAAoB;4BAClB,aAAa;wBACf;wBACA,0BAA0B;4BACxB,aAAa;wBACf;oBACF;gBACF;;;;;;;;;;;AAKV;uCAEe","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/%28auth%29/login/schema.ts"],"sourcesContent":["import * as yup from 'yup'\n\nexport const loginSchema = yup.object().shape({\n    email:yup.string().email().required(\"Email is required\"),\n    password:yup.string().required(\"Password is required\")\n})"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,cAAc,CAAA,GAAA,mIAAA,CAAA,SAAU,AAAD,IAAI,KAAK,CAAC;IAC1C,OAAM,CAAA,GAAA,mIAAA,CAAA,SAAU,AAAD,IAAI,KAAK,GAAG,QAAQ,CAAC;IACpC,UAAS,CAAA,GAAA,mIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ,CAAC;AACnC","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/constants/keys.ts"],"sourcesContent":["export const base_url = process.env.NEXT_PUBLIC_API_URL;\n"],"names":[],"mappings":";;;AAAO,MAAM","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/utils/auth.ts"],"sourcesContent":["export const auth = {\n  logout: async () => {\n    // const email =   localStorage.getItem('userEmail');\n    // console.log(email, 'emailemail');\n    // const lastOnboardingDate =   localStorage.getItem('lastOnboardingDate');\n    localStorage.clear();\n    // if (lastOnboardingDate) {\n    //       localStorage.setItem('lastOnboardingDate', lastOnboardingDate);\n    // }\n    // if (email) {\n    //       localStorage.setItem('userEmail', email);\n    // }\n  },\n  delete: async () => {\n    localStorage.clear();\n  },\n  accessToken: async () => {\n    return localStorage.getItem(\"accessToken\");\n  },\n  refreshToken: async () => {\n    return localStorage.getItem(\"refreshToken\");\n  },\n  platform: async () => {\n    return localStorage.getItem(\"platform\");\n  },\n  setUser: async (userId: string) => {\n    localStorage.setItem(\"userId\", userId);\n  },\n  user: async () => {\n    return localStorage.getItem(\"userId\");\n  },\n  updateTokens: async (accessToken: string, refreshToken: string) => {\n    localStorage.setItem(\"accessToken\", accessToken);\n    localStorage.setItem(\"refreshToken\", refreshToken);\n  },\n};\n\nexport default auth;\n"],"names":[],"mappings":";;;;AAAO,MAAM,OAAO;IAClB,QAAQ;QACN,qDAAqD;QACrD,oCAAoC;QACpC,2EAA2E;QAC3E,aAAa,KAAK;IAClB,4BAA4B;IAC5B,wEAAwE;IACxE,IAAI;IACJ,eAAe;IACf,kDAAkD;IAClD,IAAI;IACN;IACA,QAAQ;QACN,aAAa,KAAK;IACpB;IACA,aAAa;QACX,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,cAAc;QACZ,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,UAAU;QACR,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,SAAS,OAAO;QACd,aAAa,OAAO,CAAC,UAAU;IACjC;IACA,MAAM;QACJ,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,cAAc,OAAO,aAAqB;QACxC,aAAa,OAAO,CAAC,eAAe;QACpC,aAAa,OAAO,CAAC,gBAAgB;IACvC;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/utils/axios.ts"],"sourcesContent":["import { base_url } from \"../constants/keys\";\nimport auth from \"./auth\";\nimport axios from \"axios\";\n\nconst apiClient = axios.create({\n  baseURL: base_url,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\", //\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, PATCH, OPTIONS\",\n  },\n});\napiClient.interceptors.request.use(\n  async (config) => {\n    const accessToken = await auth.accessToken();\n    if (accessToken) {\n      config.headers[\"Authorization\"] = `Bearer ${accessToken}`;\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\n      config.headers[\"Access-Control-Allow-Methods\"] =\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\n    }\n    if (config.data instanceof FormData) {\n      config.headers[\"Content-Type\"] = \"multipart/form-data\";\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\n      config.headers[\"Access-Control-Allow-Methods\"] =\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\n    } else {\n      config.headers[\"Content-Type\"] = \"application/json\";\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\n      config.headers[\"Access-Control-Allow-Methods\"] =\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// apiClient.interceptors.response.use(\n//   (response) => response,\n//   async (error) => {\n//     const originalRequest = error.config;\n//     if (error.response?.status === 401 && !originalRequest._retry) {\n//       originalRequest._retry = true;\n//       const refreshToken = await auth.refreshToken();\n\n//       if (refreshToken) {\n//         try {\n//           const response = await axios.post(`${baseUrl}/auth/refresh-token`, {\n//             refreshToken,\n//           });\n//           const { accessToken, refreshToken: newRefreshToken } =\n//             response.data.data;\n//           await auth.updateTokens(accessToken, newRefreshToken);\n//           originalRequest.headers[\"Authorization\"] = `Bearer ${accessToken}`;\n//           return axios(originalRequest);\n//         } catch (refreshError) {\n//           auth.logout();\n//           return Promise.reject(refreshError);\n//         }\n//       } else {\n//         auth.logout();\n//       }\n//     }\n//     return Promise.reject(error);\n//   }\n// );\napiClient.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport const queryFn = async <T>(\n  endpoint: string,\n  params?: Record<string, any>\n): Promise<T> => {\n  const response = await apiClient.get(endpoint, { params });\n  return response.data;\n};\n\nexport const mutationFn = async (\n  endpoint: string,\n  method: \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\",\n  body?: Record<string, any>,\n  headers?: Record<string, any>\n) => {\n  const response = await apiClient.request({\n    url: endpoint,\n    method,\n    data: body,\n    headers: {\n      ...headers,\n    },\n  });\n  return response.data;\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,MAAM,YAAY,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC7B,SAAS,+HAAA,CAAA,WAAQ;IACjB,SAAS;QACP,gBAAgB;QAChB,+BAA+B;QAC/B,gCAAgC;IAClC;AACF;AACA,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAChC,OAAO;IACL,MAAM,cAAc,MAAM,2HAAA,CAAA,UAAI,CAAC,WAAW;IAC1C,IAAI,aAAa;QACf,OAAO,OAAO,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,aAAa;QACzD,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ;IACA,IAAI,OAAO,IAAI,YAAY,UAAU;QACnC,OAAO,OAAO,CAAC,eAAe,GAAG;QACjC,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ,OAAO;QACL,OAAO,OAAO,CAAC,eAAe,GAAG;QACjC,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ;IACA,OAAO;AACT,GACA,CAAC,QAAU,QAAQ,MAAM,CAAC;AAG5B,uCAAuC;AACvC,4BAA4B;AAC5B,uBAAuB;AACvB,4CAA4C;AAC5C,uEAAuE;AACvE,uCAAuC;AACvC,wDAAwD;AAExD,4BAA4B;AAC5B,gBAAgB;AAChB,iFAAiF;AACjF,4BAA4B;AAC5B,gBAAgB;AAChB,mEAAmE;AACnE,kCAAkC;AAClC,mEAAmE;AACnE,gFAAgF;AAChF,2CAA2C;AAC3C,mCAAmC;AACnC,2BAA2B;AAC3B,iDAAiD;AACjD,YAAY;AACZ,iBAAiB;AACjB,yBAAyB;AACzB,UAAU;AACV,QAAQ;AACR,oCAAoC;AACpC,MAAM;AACN,KAAK;AACL,UAAU,YAAY,CAAC,QAAQ,CAAC,GAAG,CACjC,CAAC,WAAa,UACd,OAAO;IACL,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGK,MAAM,UAAU,OACrB,UACA;IAEA,MAAM,WAAW,MAAM,UAAU,GAAG,CAAC,UAAU;QAAE;IAAO;IACxD,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OACxB,UACA,QACA,MACA;IAEA,MAAM,WAAW,MAAM,UAAU,OAAO,CAAC;QACvC,KAAK;QACL;QACA,MAAM;QACN,SAAS;YACP,GAAG,OAAO;QACZ;IACF;IACA,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 507, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/api/authentication/index.ts"],"sourcesContent":["import { mutationFn } from \"@/app/utils/axios\";\nimport { ILoginBody, ISendEmailBody, ISignupBody } from \"./types\";\n\nexport const loginApi = {\n    mutationFn: (body: ILoginBody) => {\n        return mutationFn('auth/signin', 'POST', body);\n    },\n};\n\nexport const RegisterApi = {\n    mutationFn: (body: ISignupBody) => {\n        return mutationFn('auth/signup', 'POST', body);\n    },\n};\nexport const ConfirmEmailApi = {\n    mutationFn: (body: ISendEmailBody) => {\n        return mutationFn('auth/send-email', 'POST', body);\n    },\n};\n\n"],"names":[],"mappings":";;;;;AAAA;;AAGO,MAAM,WAAW;IACpB,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,4HAAA,CAAA,aAAU,AAAD,EAAE,eAAe,QAAQ;IAC7C;AACJ;AAEO,MAAM,cAAc;IACvB,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,4HAAA,CAAA,aAAU,AAAD,EAAE,eAAe,QAAQ;IAC7C;AACJ;AACO,MAAM,kBAAkB;IAC3B,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,4HAAA,CAAA,aAAU,AAAD,EAAE,mBAAmB,QAAQ;IACjD;AACJ","debugId":null}},
    {"offset": {"line": 535, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/%28auth%29/login/hooks/index.ts"],"sourcesContent":["\"use client\";\n\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { loginSchema } from \"../schema\";\nimport { IAddLoginFormValues } from \"../types\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { loginApi } from \"@/api/authentication\";\nimport { useState } from \"react\";\nimport { AxiosError } from \"axios\";\nimport auth from \"@/app/utils/auth\";\n\nexport default function useLogin() {\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const {\n    control,\n    handleSubmit,\n\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(loginSchema),\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n    },\n  });\n  const { mutateAsync: loginUser } = useMutation({\n    mutationFn: loginApi.mutationFn,\n  });\n  const handleLogin: SubmitHandler<IAddLoginFormValues> = async (data) => {\n    try {\n      const response = await loginUser(data);\n      console.log(\"response: \",response);\n      if (response.success === true) {\n        setMessage(response.message);\n        localStorage.setItem(\"accessToken\", response?.data?.access_token);\n        setOpen(true);\n      } else {\n        setMessage(response.message);\n      }\n    } catch (error: unknown) {\n      const err = error as AxiosError<{ message: string }>;\n      if (err?.response?.data?.message) {\n        setMessage(err.response.data.message);\n      } else {\n        setMessage(\"Something went wrong.\");\n      }\n    }\n  };\n  return { control, handleSubmit, errors, handleLogin, open, setOpen, message };\n}\n"],"names":[],"mappings":";;;AAEA;AACA;AACA;AAEA;AACA;AACA;AARA;;;;;;;AAYe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EACJ,OAAO,EACP,YAAY,EAEZ,WAAW,EAAE,MAAM,EAAE,EACtB,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE;QACV,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE,yIAAA,CAAA,cAAW;QACjC,eAAe;YACb,OAAO;YACP,UAAU;QACZ;IACF;IACA,MAAM,EAAE,aAAa,SAAS,EAAE,GAAG,CAAA,GAAA,8KAAA,CAAA,cAAW,AAAD,EAAE;QAC7C,YAAY,qIAAA,CAAA,WAAQ,CAAC,UAAU;IACjC;IACA,MAAM,cAAkD,OAAO;QAC7D,IAAI;YACF,MAAM,WAAW,MAAM,UAAU;YACjC,QAAQ,GAAG,CAAC,cAAa;YACzB,IAAI,SAAS,OAAO,KAAK,MAAM;gBAC7B,WAAW,SAAS,OAAO;gBAC3B,aAAa,OAAO,CAAC,eAAe,UAAU,MAAM;gBACpD,QAAQ;YACV,OAAO;gBACL,WAAW,SAAS,OAAO;YAC7B;QACF,EAAE,OAAO,OAAgB;YACvB,MAAM,MAAM;YACZ,IAAI,KAAK,UAAU,MAAM,SAAS;gBAChC,WAAW,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO;YACtC,OAAO;gBACL,WAAW;YACb;QACF;IACF;IACA,OAAO;QAAE;QAAS;QAAc;QAAQ;QAAa;QAAM;QAAS;IAAQ;AAC9E","debugId":null}},
    {"offset": {"line": 600, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/components/Toast.tsx"],"sourcesContent":["import { Snackbar } from \"@mui/material\";\nimport React from \"react\";\n\ninterface ToastType {\n  open: boolean;\n  message: string;\n  setOpen: (open: boolean) => void;\n}\n\nconst Toast = ({ open, message, setOpen }: ToastType) => {\n  const [state, setState] = React.useState<{\n    vertical: \"top\" | \"bottom\";\n    horizontal: \"left\" | \"center\" | \"right\";\n  }>({\n    vertical: \"top\",\n    horizontal: \"center\",\n  });\n\n  const { vertical, horizontal } = state;\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical, horizontal }}\n      key={vertical + horizontal}\n      open={open}\n      onClose={() => setOpen(false)}\n      autoHideDuration={2000}\n      message={message}\n    />\n  );\n};\n\nexport default Toast;\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAQA,MAAM,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAa;IAClD,MAAM,CAAC,OAAO,SAAS,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAGrC;QACD,UAAU;QACV,YAAY;IACd;IAEA,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG;IAEjC,qBACE,8OAAC,uMAAA,CAAA,WAAQ;QACP,cAAc;YAAE;YAAU;QAAW;QAErC,MAAM;QACN,SAAS,IAAM,QAAQ;QACvB,kBAAkB;QAClB,SAAS;OAJJ,WAAW;;;;;AAOtB;uCAEe","debugId":null}},
    {"offset": {"line": 637, "column": 0}, "map": {"version":3,"sources":["file:///Users/abdulrauf/Downloads/Treasure-nft-clone/src/app/components/Login.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button, Checkbox, Snackbar, TextField } from \"@mui/material\";\nimport { Divider } from \"antd\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\nimport Modal from \"./modals/Modal\";\nimport FormInput from \"./ui/Inputs/FormInput\";\nimport useLogin from \"../(auth)/login/hooks\";\nimport OTP from \"antd/es/input/OTP\";\nimport Toast from \"./Toast\";\n\nconst Login = () => {\n  const [IsForgotPasswordModalOpen, setIsForgotPasswordModalOpen] =\n    useState<boolean>(false);\n  const { control, handleSubmit, errors, handleLogin, open, setOpen, message } =\n    useLogin();\n\n  const [resetPassForm, setResetPassForm] = useState({\n    newPassword: \"\",\n    confirmPassword: \"\",\n  });\n  const handlePassChange = (e: any) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const [form, setForm] = useState({\n    email: \"\",\n  });\n\n  const handleChange = (e: any) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n  return (\n    <div className=\"w-full max-w-md\">\n      <div className=\"text-[#737373] font-medium text-2xl\">LOGO</div>\n      <div className=\"text-3xl mt-4\">Welcome to NFT!</div>\n      <div className=\"text-[#c0c0c0] text-sm mt-2\">\n        <Toast open={open} message={message} setOpen={setOpen} />\n        Please sign in to your account and start the adventure\n      </div>\n\n      <div className=\"space-y-4\">\n        <div className=\"space-y-1\">\n          <FormInput\n            name=\"email\"\n            control={control}\n            label=\"Email or Username\"\n            errors={errors}\n            rules={{ required: \"Email is required\" }}\n          />\n          <FormInput\n            name=\"password\"\n            control={control}\n            label=\"Password\"\n            type=\"password\"\n            errors={errors}\n            rules={{ required: \"Password is required\" }}\n          />\n          <Button\n            variant=\"text\"\n            className=\"block text-[#7367F0]\"\n            onClick={() => setIsForgotPasswordModalOpen(true)}\n          >\n            Forgot Password?\n          </Button>\n        </div>\n\n        <div className=\"flex items-center gap-2\">\n          <Checkbox className=\"!p-0\" />{\" \"}\n          <span className=\"text-muted\">Remember Me</span>\n        </div>\n\n        <Button\n          variant=\"contained\"\n          fullWidth\n          onClick={handleSubmit(handleLogin)}\n        >\n          Sign in\n        </Button>\n\n        <div className=\"text-sm text-center block mt-2\">\n          New on our platform?{\" \"}\n          <Link className=\"text-primary\" href=\"/register\">\n            Create an account\n          </Link>\n        </div>\n\n        <Divider>Or</Divider>\n\n        <div className=\"flex items-center justify-center gap-2 mt-4\">\n          <div className=\"h-[38px] w-[38px] bg-[#1d2b48] grid place-items-center rounded\">\n            <img src=\"/icons/fb.png\" alt=\"\" />\n          </div>\n          <div className=\"h-[38px] w-[38px] bg-[#0d3148] grid place-items-center rounded\">\n            <img src=\"/icons/twitter.png\" alt=\"\" />\n          </div>\n          <div className=\"h-[38px] w-[38px] bg-[#3f1917] grid place-items-center rounded\">\n            <img src=\"/icons/google.png\" alt=\"\" />\n          </div>\n        </div>\n      </div>\n      {/* forget pass modal */}\n      <Modal\n        open={IsForgotPasswordModalOpen}\n        setOpen={setIsForgotPasswordModalOpen}\n      >\n        <div className=\"space-y-4\">\n          <div className=\"text-[#737373] text-2xl text-center\">LOGO</div>\n          <div className=\"font-medium text-xl\">Forgot Password? 🔒</div>\n          <div className=\"text-[#737373] text-sm\">\n            Enter your email, and we'll send you OTP to reset your password\n          </div>\n\n          <TextField\n            name=\"email\"\n            label=\"Email\"\n            variant=\"outlined\"\n            fullWidth\n            value={form.email}\n            onChange={handleChange}\n            margin=\"normal\"\n            InputLabelProps={{ style: { color: \"#aaa\" } }}\n            InputProps={{ style: { color: \"#fff\" } }}\n          />\n\n          <Button variant=\"contained\" fullWidth>\n            Send Reset Link\n          </Button>\n          <Button variant=\"text\" fullWidth>\n            Back to log in\n          </Button>\n        </div>\n      </Modal>\n      {/* tfv modal */}\n      {/* <Modal\n        open={IsForgotPasswordModalOpen}\n        setOpen={setIsForgotPasswordModalOpen}\n      >\n        <div className='space-y-4'>\n          <div className='text-[#737373] text-2xl text-center'>LOGO</div>\n          <div className='font-medium text-xl'>Two-Step Verification 💬</div>\n          <div className='text-[#737373] text-sm'>\n            We sent a verification code to your Email. Enter the code from the\n            eamil in the field below.\n            <div>*****d20@gmail.com</div>\n          </div>\n\n          <div className='w-full'>\n            <OTP style={{ width: \"100%\", justifyContent: \"center\" }} />\n          </div>\n\n          <Button variant='contained' fullWidth>\n            Verify my account\n          </Button>\n          <div className='flex gap-2 items-center justify-center'>\n            <div>Didn't get the code?</div>\n            <div className='text-primary'>Resend</div>\n          </div>\n        </div>\n      </Modal> */}\n      {/* reset password */}\n      {/* <Modal\n        open={IsForgotPasswordModalOpen}\n        setOpen={setIsForgotPasswordModalOpen}\n      >\n        <div className=\"space-y-4\">\n        <div className='text-[#737373] text-2xl text-center'>LOGO</div>\n        <div className='font-medium text-xl'>Reset Password 🔒</div>\n        <div className='text-[#737373] text-sm'>\n          for john.doe@email.com\n        </div>\n\n        <TextField\n          name='newPassword'\n          label='New Password'\n          variant='outlined'\n          fullWidth\n          value={resetPassForm.newPassword}\n          onChange={handlePassChange}\n          margin='normal'\n          InputLabelProps={{ style: { color: \"#aaa\" } }}\n          InputProps={{ style: { color: \"#fff\" } }}\n        />\n        <TextField\n          name='confirmPassword'\n          label='Confirm Password'\n          variant='outlined'\n          fullWidth\n          value={resetPassForm.confirmPassword}\n          onChange={handlePassChange}\n          margin='normal'\n          InputLabelProps={{ style: { color: \"#aaa\" } }}\n          InputProps={{ style: { color: \"#fff\" } }}\n        />\n\n        <Button variant=\"contained\" fullWidth>Set New Password</Button>\n        <Button variant=\"text\" fullWidth>Back to log in</Button>\n        </div>\n      </Modal> */}\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAVA;;;;;;;;;;AAYA,MAAM,QAAQ;IACZ,MAAM,CAAC,2BAA2B,6BAA6B,GAC7D,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IACpB,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,GAC1E,CAAA,GAAA,iJAAA,CAAA,UAAQ,AAAD;IAET,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACjD,aAAa;QACb,iBAAiB;IACnB;IACA,MAAM,mBAAmB,CAAC;QACxB,QAAQ;YAAE,GAAG,IAAI;YAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QAAC;IACrD;IAEA,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,OAAO;IACT;IAEA,MAAM,eAAe,CAAC;QACpB,QAAQ;YAAE,GAAG,IAAI;YAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QAAC;IACrD;IACA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BAAsC;;;;;;0BACrD,8OAAC;gBAAI,WAAU;0BAAgB;;;;;;0BAC/B,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,kIAAA,CAAA,UAAK;wBAAC,MAAM;wBAAM,SAAS;wBAAS,SAAS;;;;;;oBAAW;;;;;;;0BAI3D,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,sJAAA,CAAA,UAAS;gCACR,MAAK;gCACL,SAAS;gCACT,OAAM;gCACN,QAAQ;gCACR,OAAO;oCAAE,UAAU;gCAAoB;;;;;;0CAEzC,8OAAC,sJAAA,CAAA,UAAS;gCACR,MAAK;gCACL,SAAS;gCACT,OAAM;gCACN,MAAK;gCACL,QAAQ;gCACR,OAAO;oCAAE,UAAU;gCAAuB;;;;;;0CAE5C,8OAAC,iMAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,WAAU;gCACV,SAAS,IAAM,6BAA6B;0CAC7C;;;;;;;;;;;;kCAKH,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,uMAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;4BAAU;0CAC9B,8OAAC;gCAAK,WAAU;0CAAa;;;;;;;;;;;;kCAG/B,8OAAC,iMAAA,CAAA,SAAM;wBACL,SAAQ;wBACR,SAAS;wBACT,SAAS,aAAa;kCACvB;;;;;;kCAID,8OAAC;wBAAI,WAAU;;4BAAiC;4BACzB;0CACrB,8OAAC,4JAAA,CAAA,UAAI;gCAAC,WAAU;gCAAe,MAAK;0CAAY;;;;;;;;;;;;kCAKlD,8OAAC,oLAAA,CAAA,UAAO;kCAAC;;;;;;kCAET,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAI,KAAI;oCAAgB,KAAI;;;;;;;;;;;0CAE/B,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAI,KAAI;oCAAqB,KAAI;;;;;;;;;;;0CAEpC,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAI,KAAI;oCAAoB,KAAI;;;;;;;;;;;;;;;;;;;;;;;0BAKvC,8OAAC,4IAAA,CAAA,UAAK;gBACJ,MAAM;gBACN,SAAS;0BAET,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCAAsC;;;;;;sCACrD,8OAAC;4BAAI,WAAU;sCAAsB;;;;;;sCACrC,8OAAC;4BAAI,WAAU;sCAAyB;;;;;;sCAIxC,8OAAC,0MAAA,CAAA,YAAS;4BACR,MAAK;4BACL,OAAM;4BACN,SAAQ;4BACR,SAAS;4BACT,OAAO,KAAK,KAAK;4BACjB,UAAU;4BACV,QAAO;4BACP,iBAAiB;gCAAE,OAAO;oCAAE,OAAO;gCAAO;4BAAE;4BAC5C,YAAY;gCAAE,OAAO;oCAAE,OAAO;gCAAO;4BAAE;;;;;;sCAGzC,8OAAC,iMAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAY,SAAS;sCAAC;;;;;;sCAGtC,8OAAC,iMAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAO,SAAS;sCAAC;;;;;;;;;;;;;;;;;;;;;;;AAyE3C;uCAEe","debugId":null}}]
}