{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/constants/keys.ts"],"sourcesContent":["export const base_url = process.env.NEXT_PUBLIC_API_URL;\r\n"],"names":[],"mappings":";;;AAAO,MAAM","debugId":null}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/utils/auth.ts"],"sourcesContent":["export const auth = {\r\n  logout: async () => {\r\n    // const email =   localStorage.getItem('userEmail');\r\n    // console.log(email, 'emailemail');\r\n    // const lastOnboardingDate =   localStorage.getItem('lastOnboardingDate');\r\n    localStorage.clear();\r\n    // if (lastOnboardingDate) {\r\n    //       localStorage.setItem('lastOnboardingDate', lastOnboardingDate);\r\n    // }\r\n    // if (email) {\r\n    //       localStorage.setItem('userEmail', email);\r\n    // }\r\n  },\r\n  delete: async () => {\r\n    localStorage.clear();\r\n  },\r\n  accessToken: async () => {\r\n    return localStorage.getItem(\"accessToken\");\r\n  },\r\n  setToken: async (token: string) => {\r\n    return localStorage.setItem(\"accessToken\", token);\r\n  },\r\n  refreshToken: async () => {\r\n    return localStorage.getItem(\"refreshToken\");\r\n  },\r\n  platform: async () => {\r\n    return localStorage.getItem(\"platform\");\r\n  },\r\n  setUser: async (userId: string) => {\r\n    localStorage.setItem(\"userId\", userId);\r\n  },\r\n  user: async () => {\r\n    return localStorage.getItem(\"userId\");\r\n  },\r\n  updateTokens: async (accessToken: string, refreshToken: string) => {\r\n    localStorage.setItem(\"accessToken\", accessToken);\r\n    localStorage.setItem(\"refreshToken\", refreshToken);\r\n  },\r\n};\r\n\r\nexport default auth;\r\n"],"names":[],"mappings":";;;;AAAO,MAAM,OAAO;IAClB,QAAQ;QACN,qDAAqD;QACrD,oCAAoC;QACpC,2EAA2E;QAC3E,aAAa,KAAK;IAClB,4BAA4B;IAC5B,wEAAwE;IACxE,IAAI;IACJ,eAAe;IACf,kDAAkD;IAClD,IAAI;IACN;IACA,QAAQ;QACN,aAAa,KAAK;IACpB;IACA,aAAa;QACX,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,UAAU,OAAO;QACf,OAAO,aAAa,OAAO,CAAC,eAAe;IAC7C;IACA,cAAc;QACZ,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,UAAU;QACR,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,SAAS,OAAO;QACd,aAAa,OAAO,CAAC,UAAU;IACjC;IACA,MAAM;QACJ,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,cAAc,OAAO,aAAqB;QACxC,aAAa,OAAO,CAAC,eAAe;QACpC,aAAa,OAAO,CAAC,gBAAgB;IACvC;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/utils/axios.ts"],"sourcesContent":["import { base_url } from \"../constants/keys\";\r\nimport auth from \"./auth\";\r\nimport axios from \"axios\";\r\n\r\nexport const apiClient = axios.create({\r\n  baseURL: base_url,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Access-Control-Allow-Origin\": \"*\", //\r\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, PATCH, OPTIONS\",\r\n  },\r\n});\r\napiClient.interceptors.request.use(\r\n  async (config) => {\r\n    const accessToken = await auth.accessToken();\r\n    if (accessToken) {\r\n      config.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    }\r\n    if (config.data instanceof FormData) {\r\n      config.headers[\"Content-Type\"] = \"multipart/form-data\";\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    } else {\r\n      config.headers[\"Content-Type\"] = \"application/json\";\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// apiClient.interceptors.response.use(\r\n//   (response) => response,\r\n//   async (error) => {\r\n//     const originalRequest = error.config;\r\n//     if (error.response?.status === 401 && !originalRequest._retry) {\r\n//       originalRequest._retry = true;\r\n//       const refreshToken = await auth.refreshToken();\r\n\r\n//       if (refreshToken) {\r\n//         try {\r\n//           const response = await axios.post(`${baseUrl}/auth/refresh-token`, {\r\n//             refreshToken,\r\n//           });\r\n//           const { accessToken, refreshToken: newRefreshToken } =\r\n//             response.data.data;\r\n//           await auth.updateTokens(accessToken, newRefreshToken);\r\n//           originalRequest.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n//           return axios(originalRequest);\r\n//         } catch (refreshError) {\r\n//           auth.logout();\r\n//           return Promise.reject(refreshError);\r\n//         }\r\n//       } else {\r\n//         auth.logout();\r\n//       }\r\n//     }\r\n//     return Promise.reject(error);\r\n//   }\r\n// );\r\napiClient.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const queryFn = async <T>(\r\n  endpoint: string,\r\n  params?: Record<string, any>\r\n): Promise<T> => {\r\n  const response = await apiClient.get(endpoint, { params });\r\n  return response.data;\r\n};\r\n\r\nexport const mutationFn = async (\r\n  endpoint: string,\r\n  method: \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\",\r\n  body?: Record<string, any>,\r\n  headers?: Record<string, any>\r\n) => {\r\n  const response = await apiClient.request({\r\n    url: endpoint,\r\n    method,\r\n    data: body,\r\n    headers: {\r\n      ...headers,\r\n    },\r\n  });\r\n  return response.data;\r\n};"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,MAAM,YAAY,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACpC,SAAS,+HAAA,CAAA,WAAQ;IACjB,SAAS;QACP,gBAAgB;QAChB,+BAA+B;QAC/B,gCAAgC;IAClC;AACF;AACA,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAChC,OAAO;IACL,MAAM,cAAc,MAAM,2HAAA,CAAA,UAAI,CAAC,WAAW;IAC1C,IAAI,aAAa;QACf,OAAO,OAAO,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,aAAa;QACzD,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ;IACA,IAAI,OAAO,IAAI,YAAY,UAAU;QACnC,OAAO,OAAO,CAAC,eAAe,GAAG;QACjC,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ,OAAO;QACL,OAAO,OAAO,CAAC,eAAe,GAAG;QACjC,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ;IACA,OAAO;AACT,GACA,CAAC,QAAU,QAAQ,MAAM,CAAC;AAG5B,uCAAuC;AACvC,4BAA4B;AAC5B,uBAAuB;AACvB,4CAA4C;AAC5C,uEAAuE;AACvE,uCAAuC;AACvC,wDAAwD;AAExD,4BAA4B;AAC5B,gBAAgB;AAChB,iFAAiF;AACjF,4BAA4B;AAC5B,gBAAgB;AAChB,mEAAmE;AACnE,kCAAkC;AAClC,mEAAmE;AACnE,gFAAgF;AAChF,2CAA2C;AAC3C,mCAAmC;AACnC,2BAA2B;AAC3B,iDAAiD;AACjD,YAAY;AACZ,iBAAiB;AACjB,yBAAyB;AACzB,UAAU;AACV,QAAQ;AACR,oCAAoC;AACpC,MAAM;AACN,KAAK;AACL,UAAU,YAAY,CAAC,QAAQ,CAAC,GAAG,CACjC,CAAC,WAAa,UACd,OAAO;IACL,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGK,MAAM,UAAU,OACrB,UACA;IAEA,MAAM,WAAW,MAAM,UAAU,GAAG,CAAC,UAAU;QAAE;IAAO;IACxD,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OACxB,UACA,QACA,MACA;IAEA,MAAM,WAAW,MAAM,UAAU,OAAO,CAAC;QACvC,KAAK;QACL;QACA,MAAM;QACN,SAAS;YACP,GAAG,OAAO;QACZ;IACF;IACA,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/api/admin/adminService.ts"],"sourcesContent":["import { apiClient } from \"@/app/utils/axios\"\r\n\r\nexport const getProducts = async () => {\r\n  const { data } = await apiClient.get('products')\r\n  return data\r\n}"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,cAAc;IACzB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,4HAAA,CAAA,YAAS,CAAC,GAAG,CAAC;IACrC,OAAO;AACT","debugId":null}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/api/admin/useAdmin.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { IAxiosError } from \"@/lib/axiosError\"\r\nimport { getProducts } from \"./adminService\"\r\n\r\nexport const useGetProducts = () => {\r\n  return useQuery<any, IAxiosError>({\r\n    queryKey: [\"products\"],\r\n    queryFn: getProducts,\r\n  })\r\n}"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEO,MAAM,iBAAiB;IAC5B,OAAO,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAoB;QAChC,UAAU;YAAC;SAAW;QACtB,SAAS,mIAAA,CAAA,cAAW;IACtB;AACF","debugId":null}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/drawers/DistributeRewardsDrawer.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useGetProducts } from \"@/api/admin/useAdmin\";\r\nimport {\r\n  Box,\r\n  Drawer,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  SelectChangeEvent,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function DistributeRewardsDrawer({\r\n  open,\r\n  onClose,\r\n}: {\r\n  open: boolean;\r\n  onClose: () => void;\r\n}) {\r\n\r\n  const { data } = useGetProducts()\r\n  console.log(\"data: \", data);\r\n  \r\n\r\n  const [form, setForm] = useState({\r\n    user: \"\",\r\n    selectMachine: \"\",\r\n    rewardAmount: 0,\r\n  });\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSelectChange = (e: SelectChangeEvent) => {\r\n    const { name, value } = e.target;\r\n    setForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"right\"\r\n      open={open}\r\n      onClose={onClose}\r\n      PaperProps={{\r\n        sx: {\r\n          width: { xs: \"100%\", sm: 400 },\r\n          bgcolor: \"black\",\r\n          color: \"#fff\",\r\n          p: 3,\r\n        },\r\n      }}\r\n    >\r\n      <Typography variant=\"h6\" fontWeight={600} gutterBottom>\r\n        Distribute Awards Manually\r\n      </Typography>\r\n\r\n      <FormControl fullWidth margin=\"normal\">\r\n        <InputLabel sx={{ color: \"#aaa\" }}>Select User</InputLabel>\r\n        <Select\r\n          name=\"user\"\r\n          value={form.user}\r\n          onChange={handleSelectChange}\r\n          label=\"Select User\"\r\n          sx={{\r\n            color: \"#fff\",\r\n            \".MuiOutlinedInput-notchedOutline\": { borderColor: \"#666\" },\r\n            \"&:hover .MuiOutlinedInput-notchedOutline\": { borderColor: \"#999\" },\r\n            \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": { borderColor: \"#A78BFA\" },\r\n          }}\r\n        >\r\n          <MenuItem value=\"John Bushmill\">John Bushmill</MenuItem>\r\n          <MenuItem value=\"Jane Doe\">Jane Doe</MenuItem>\r\n          <MenuItem value=\"Alice Smith\">Alice Smith</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth margin=\"normal\">\r\n        <InputLabel sx={{ color: \"#aaa\" }}>Select Machine</InputLabel>\r\n        <Select\r\n          name=\"selectMachine\"\r\n          value={form.selectMachine}\r\n          onChange={handleSelectChange}\r\n          label=\"Select Machine\"\r\n          sx={{\r\n            color: \"#fff\",\r\n            \".MuiOutlinedInput-notchedOutline\": { borderColor: \"#666\" },\r\n            \"&:hover .MuiOutlinedInput-notchedOutline\": { borderColor: \"#999\" },\r\n            \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": { borderColor: \"#A78BFA\" },\r\n          }}\r\n        >\r\n          <MenuItem value=\"Machine A\">Machine A</MenuItem>\r\n          <MenuItem value=\"Machine B\">Machine B</MenuItem>\r\n          <MenuItem value=\"Machine C\">Machine C</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <TextField\r\n        name=\"rewardAmount\"\r\n        label=\"Reward Amount\"\r\n        type=\"number\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        value={form.rewardAmount}\r\n        onChange={handleInputChange}\r\n        margin=\"normal\"\r\n        InputLabelProps={{ style: { color: \"#aaa\" } }}\r\n        InputProps={{ style: { color: \"#fff\" } }}\r\n      />\r\n\r\n      <Box display=\"flex\" justifyContent=\"space-between\" mt={4} gap={2}>\r\n        <Button\r\n          variant=\"contained\"\r\n          fullWidth\r\n          sx={{ bgcolor: \"#7367F0\", textTransform: \"none\" }}\r\n        >\r\n          Add\r\n        </Button>\r\n        <Button\r\n          fullWidth\r\n          sx={{\r\n            color: \"#a64445\",\r\n            textTransform: \"none\",\r\n            bgcolor: \"#3a2b2b\",\r\n          }}\r\n          onClick={onClose}\r\n        >\r\n          Discard\r\n        </Button>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 578, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/%28pages%29/%28user%29/admin/rewards-distribution/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n} from \"@mui/material\"\r\nimport { useState } from \"react\"\r\nimport DistributeRewardsDrawer from \"@/app/components/drawers/DistributeRewardsDrawer\"\r\nimport TableDisplay from \"@/app/components/TableDisplay\"\r\n\r\ntype RewardRow = {\r\n  id: number\r\n  name: string\r\n  email: string\r\n  level: number\r\n  date: string\r\n  rewardAmount: string\r\n  status: \"Success\" | \"Failed\"\r\n}\r\n\r\nconst Page = () => {\r\n  const [search, setSearch] = useState(\"\")\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const columns = [\r\n    { id: \"name\", label: \"User\" },\r\n    { id: \"email\", label: \"Email\" },\r\n    { id: \"level\", label: \"Level\" },\r\n    { id: \"date\", label: \"Date\" },\r\n    { id: \"rewardAmount\", label: \"Reward Amount\" },\r\n    { id: \"status\", label: \"Status\", isStatus: true },\r\n  ] as const\r\n\r\n  const data: RewardRow[] = [\r\n    {\r\n      id: 1,\r\n      name: \"John Bushmill\",\r\n      email: \"Johnb@mail.com\",\r\n      level: 2,\r\n      date: \"1 min ago\",\r\n      rewardAmount: \"$1000\",\r\n      status: \"Failed\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Jane Doe\",\r\n      email: \"jane@mail.com\",\r\n      level: 3,\r\n      date: \"5 min ago\",\r\n      rewardAmount: \"$500\",\r\n      status: \"Success\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Alice Smith\",\r\n      email: \"alice@mail.com\",\r\n      level: 1,\r\n      date: \"10 min ago\",\r\n      rewardAmount: \"$200\",\r\n      status: \"Success\",\r\n    },\r\n  ]\r\n\r\n  const filteredData = data.filter((row) =>\r\n    row.name.toLowerCase().includes(search.toLowerCase())\r\n  )\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-white\">\r\n      <div className=\"font-semibold text-xl py-3\">Rewards Distribution</div>\r\n      <div className=\"flex justify-between items-center py-4 bg-[#1f1f1f] px-4\">\r\n        <TextField\r\n          label=\"Search user\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          sx={{\r\n            label: { color: \"#aaa\" },\r\n            input: { color: \"#eee\" },\r\n            \"& .MuiOutlinedInput-root\": {\r\n              \"& fieldset\": { borderColor: \"#555\" },\r\n              \"&:hover fieldset\": { borderColor: \"#888\" },\r\n              \"&.Mui-focused fieldset\": { borderColor: \"#A78BFA\" },\r\n            },\r\n          }}\r\n        />\r\n        <Button variant=\"contained\" sx={{ fontWeight: 600 }} onClick={() => setOpen(true)}>\r\n          Distribute Awards Manually\r\n        </Button>\r\n      </div>\r\n\r\n      <TableDisplay columns={columns} data={filteredData} />\r\n\r\n      <DistributeRewardsDrawer open={open} onClose={() => setOpen(false)} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Page\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAIA;AACA;;;;;;AAPA;;;;;;AAoBA,MAAM,OAAO;IACX,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,MAAM,UAAU;QACd;YAAE,IAAI;YAAQ,OAAO;QAAO;QAC5B;YAAE,IAAI;YAAS,OAAO;QAAQ;QAC9B;YAAE,IAAI;YAAS,OAAO;QAAQ;QAC9B;YAAE,IAAI;YAAQ,OAAO;QAAO;QAC5B;YAAE,IAAI;YAAgB,OAAO;QAAgB;QAC7C;YAAE,IAAI;YAAU,OAAO;YAAU,UAAU;QAAK;KACjD;IAED,MAAM,OAAoB;QACxB;YACE,IAAI;YACJ,MAAM;YACN,OAAO;YACP,OAAO;YACP,MAAM;YACN,cAAc;YACd,QAAQ;QACV;QACA;YACE,IAAI;YACJ,MAAM;YACN,OAAO;YACP,OAAO;YACP,MAAM;YACN,cAAc;YACd,QAAQ;QACV;QACA;YACE,IAAI;YACJ,MAAM;YACN,OAAO;YACP,OAAO;YACP,MAAM;YACN,cAAc;YACd,QAAQ;QACV;KACD;IAED,MAAM,eAAe,KAAK,MAAM,CAAC,CAAC,MAChC,IAAI,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,WAAW;IAGpD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BAA6B;;;;;;0BAC5C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,0MAAA,CAAA,YAAS;wBACR,OAAM;wBACN,SAAQ;wBACR,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;wBACzC,IAAI;4BACF,OAAO;gCAAE,OAAO;4BAAO;4BACvB,OAAO;gCAAE,OAAO;4BAAO;4BACvB,4BAA4B;gCAC1B,cAAc;oCAAE,aAAa;gCAAO;gCACpC,oBAAoB;oCAAE,aAAa;gCAAO;gCAC1C,0BAA0B;oCAAE,aAAa;gCAAU;4BACrD;wBACF;;;;;;kCAEF,8OAAC,iMAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAY,IAAI;4BAAE,YAAY;wBAAI;wBAAG,SAAS,IAAM,QAAQ;kCAAO;;;;;;;;;;;;0BAKrF,8OAAC;gBAAa,SAAS;gBAAS,MAAM;;;;;;0BAEtC,8OAAC,+JAAA,CAAA,UAAuB;gBAAC,MAAM;gBAAM,SAAS,IAAM,QAAQ;;;;;;;;;;;;AAGlE;uCAEe","debugId":null}}]
}