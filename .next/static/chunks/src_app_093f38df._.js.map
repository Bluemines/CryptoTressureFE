{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/ClientOnly.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState, ReactNode } from 'react';\r\n\r\ntype ClientOnlyProps = {\r\n  children: ReactNode;\r\n};\r\n\r\nexport default function ClientOnly({ children }: ClientOnlyProps) {\r\n  const [isMounted, setIsMounted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true);\r\n  }, []);\r\n\r\n  if (!isMounted) return null;\r\n\r\n  return <>{children}</>;\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAQe,SAAS,WAAW,EAAE,QAAQ,EAAmB;;IAC9D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,aAAa;QACf;+BAAG,EAAE;IAEL,IAAI,CAAC,WAAW,OAAO;IAEvB,qBAAO;kBAAG;;AACZ;GAVwB;KAAA","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/lib/theme.tsx"],"sourcesContent":["\"use client\"\r\nimport { createTheme } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: {\r\n      main: '#7367F0',\r\n    },\r\n  },\r\n  \r\n  components: {\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          textTransform: 'capitalize',\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n"],"names":[],"mappings":";;;AACA;AADA;;AAGA,MAAM,QAAQ,CAAA,GAAA,8MAAA,CAAA,cAAW,AAAD,EAAE;IACxB,SAAS;QACP,MAAM;QACN,SAAS;YACP,MAAM;QACR;IACF;IAEA,YAAY;QACV,WAAW;YACT,gBAAgB;gBACd,MAAM;oBACJ,eAAe;gBACjB;YACF;QACF;IACF;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/ui/CustomToast.tsx"],"sourcesContent":["\"use client\";\r\nimport { Snackbar, Alert, AlertTitle } from \"@mui/material\";\r\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\ntype CustomToastProps = {\r\n  title?: string;\r\n  message: string;\r\n  severity?: \"success\" | \"info\" | \"warning\" | \"error\";\r\n  icon?: React.ReactNode;\r\n  backgroundColor?: string;\r\n  textColor?: string;\r\n  duration?: number; // optional duration in ms (default: 3000)\r\n};\r\n\r\nexport default function CustomToast({\r\n  title = \"Success\",\r\n  message,\r\n  severity = \"success\",\r\n  icon = <CheckCircleIcon fontSize=\"inherit\" />,\r\n  backgroundColor = \"#112D1D\",\r\n  textColor = \"#4ADE80\",\r\n  duration = 3000,\r\n}: CustomToastProps) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n    const timer = setTimeout(() => setOpen(false), duration);\r\n    return () => clearTimeout(timer);\r\n  }, [duration]);\r\n\r\n  return (\r\n    <Snackbar open={open} onClose={() => setOpen(false)}>\r\n      <Alert\r\n        icon={icon}\r\n        severity={severity}\r\n        sx={{\r\n          width: \"100%\",\r\n          backgroundColor,\r\n          color: textColor,\r\n          alignItems: \"flex-start\",\r\n          borderRadius: \"8px\",\r\n          boxShadow: 3,\r\n          \".MuiAlert-icon\": {\r\n            color: textColor,\r\n            marginTop: \"5px\",\r\n          },\r\n        }}\r\n      >\r\n        <AlertTitle sx={{ fontWeight: 600 }}>{title}</AlertTitle>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AACA;AACA;;;AAHA;;;;AAee,SAAS,YAAY,EAClC,QAAQ,SAAS,EACjB,OAAO,EACP,WAAW,SAAS,EACpB,qBAAO,6LAAC,mKAAA,CAAA,UAAe;IAAC,UAAS;;;;;QAAY,EAC7C,kBAAkB,SAAS,EAC3B,YAAY,SAAS,EACrB,WAAW,IAAI,EACE;;IACjB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,QAAQ;YACR,MAAM,QAAQ;+CAAW,IAAM,QAAQ;8CAAQ;YAC/C;yCAAO,IAAM,aAAa;;QAC5B;gCAAG;QAAC;KAAS;IAEb,qBACE,6LAAC,0MAAA,CAAA,WAAQ;QAAC,MAAM;QAAM,SAAS,IAAM,QAAQ;kBAC3C,cAAA,6LAAC,iMAAA,CAAA,QAAK;YACJ,MAAM;YACN,UAAU;YACV,IAAI;gBACF,OAAO;gBACP;gBACA,OAAO;gBACP,YAAY;gBACZ,cAAc;gBACd,WAAW;gBACX,kBAAkB;oBAChB,OAAO;oBACP,WAAW;gBACb;YACF;;8BAEA,6LAAC,gNAAA,CAAA,aAAU;oBAAC,IAAI;wBAAE,YAAY;oBAAI;8BAAI;;;;;;gBACrC;;;;;;;;;;;;AAIT;GAxCwB;KAAA","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/utils/queryClient.tsx"],"sourcesContent":["\"use client\"\r\nimport { QueryClient } from '@tanstack/react-query';\r\nimport CustomToast from '../components/ui/CustomToast';\r\n\r\nconst queryClient = new QueryClient({\r\n    defaultOptions: {\r\n        // queries: {\r\n        //   onError: (error: any) => {\r\n        //     const errorMessage = error.response?.data?.message;\r\n        //     Toast.show({\r\n        //       type: \"error\",\r\n        //       text1: \"Error\",\r\n        //       text2: errorMessage,\r\n        //     });\r\n        //   },\r\n        // },\r\n        mutations: {\r\n            onError: (error: any) => {\r\n                const errorMessage = error.response?.data?.message;\r\n                <CustomToast title='error' backgroundColor='red' message={errorMessage}/>\r\n            },\r\n            // onSuccess: (data: any) => {\r\n            //     const successMessage = data?.message;\r\n            //     Toast.show({\r\n            //         type: 'success',\r\n            //         text1: 'Success',\r\n            //         text2: successMessage,\r\n            //     });\r\n            // },\r\n        },\r\n    },\r\n});\r\n\r\nexport default queryClient;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIA,MAAM,cAAc,IAAI,gLAAA,CAAA,cAAW,CAAC;IAChC,gBAAgB;QACZ,aAAa;QACb,+BAA+B;QAC/B,0DAA0D;QAC1D,mBAAmB;QACnB,uBAAuB;QACvB,wBAAwB;QACxB,6BAA6B;QAC7B,UAAU;QACV,OAAO;QACP,KAAK;QACL,WAAW;YACP,SAAS,CAAC;gBACN,MAAM,eAAe,MAAM,QAAQ,EAAE,MAAM;8BAC3C,6LAAC,iJAAA,CAAA,UAAW;oBAAC,OAAM;oBAAQ,iBAAgB;oBAAM,SAAS;;;;;;YAC9D;QASJ;IACJ;AACJ;uCAEe","debugId":null}}]
}