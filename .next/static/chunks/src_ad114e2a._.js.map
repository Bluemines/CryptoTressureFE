{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/ui/Inputs/FormInput.tsx"],"sourcesContent":["// import React from \"react\";\r\n// import { Controller, Control, FieldErrors } from \"react-hook-form\";\r\n// import { TextField } from \"@mui/material\";\r\n\r\n// interface FormInputProps {\r\n//   name: string;\r\n//   control: Control<any>;\r\n//   label: string;\r\n//   type?: string;\r\n//   errors?: FieldErrors;\r\n//   multiline?: boolean;\r\n//   rows?: number;\r\n// }\r\n\r\n// const FormInput: React.FC<FormInputProps> = ({\r\n//   name,\r\n//   control,\r\n//   label,\r\n//   type = \"text\",\r\n//   errors,\r\n//   multiline = false,\r\n//   rows = 4,\r\n// }) => {\r\n//   return (\r\n//     <Controller\r\n//       name={name}\r\n//       control={control}\r\n//       render={({ field }) => (\r\n//         <TextField\r\n//           {...field}\r\n//           type={type}\r\n//           label={label}\r\n//           variant=\"outlined\"\r\n//           fullWidth\r\n//           margin=\"normal\"\r\n//           multiline={multiline}\r\n//           rows={multiline ? rows : undefined}\r\n//           error={!!errors?.[name]}\r\n//           helperText={errors?.[name]?.message as string}\r\n//           InputLabelProps={{ style: { color: \"#aaa\" } }}\r\n//           InputProps={{\r\n//             style: { color: \"#fff\" },\r\n//           }}\r\n//           sx={{\r\n//             backgroundColor: \"#262626\",\r\n//             // px: 2,\r\n//             // py: 1,\r\n//             borderRadius: \"6px\",\r\n//             \"& .MuiOutlinedInput-root\": {\r\n//               \"& fieldset\": {\r\n//                 borderColor: \"#444\",\r\n//               },\r\n//               \"&:hover fieldset\": {\r\n//                 borderColor: \"#666\",\r\n//               },\r\n//               \"&.Mui-focused fieldset\": {\r\n//                 borderColor: \"#888\",\r\n//               },\r\n//             },\r\n//             \"& .MuiInputBase-root\": {\r\n//               color: \"#fff\",\r\n//             },\r\n//           }}\r\n//         />\r\n//       )}\r\n//     />\r\n//   );\r\n// };\r\n\r\n// export default FormInput;\r\nimport React, { useState } from \"react\";\r\nimport { Controller, Control, FieldErrors } from \"react-hook-form\";\r\nimport { TextField, IconButton, InputAdornment } from \"@mui/material\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\n\r\ninterface FormInputProps {\r\n  name: string;\r\n  control: Control<any>;\r\n  label: string;\r\n  type?: string;\r\n  errors?: FieldErrors;\r\n  multiline?: boolean;\r\n  rows?: number;\r\n  rules?: any;\r\n}\r\n\r\nconst FormInput: React.FC<FormInputProps> = ({\r\n  name,\r\n  control,\r\n  label,\r\n  type = \"text\",\r\n  errors,\r\n  multiline = false,\r\n  rows = 4,\r\n  rules,\r\n}) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const isPassword = type === \"password\";\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      rules={rules}\r\n      name={name}\r\n      control={control}\r\n      render={({ field }) => (\r\n        <TextField\r\n          {...field}\r\n          type={isPassword && !showPassword ? \"password\" : \"text\"}\r\n          label={label}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          multiline={multiline}\r\n          rows={multiline ? rows : undefined}\r\n          error={!!errors?.[name]}\r\n          helperText={errors?.[name]?.message as string}\r\n          InputLabelProps={{ style: { color: \"#aaa\" } }}\r\n          InputProps={{\r\n            style: { color: \"#fff\" },\r\n            endAdornment: isPassword && (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={togglePasswordVisibility}\r\n                  edge=\"end\"\r\n                  sx={{ color: \"#aaa\" }}\r\n                >\r\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          sx={{\r\n            backgroundColor: \"#262626\",\r\n            borderRadius: \"6px\",\r\n            \"& .MuiOutlinedInput-root\": {\r\n              \"& fieldset\": {\r\n                borderColor: \"#444\",\r\n              },\r\n              \"&:hover fieldset\": {\r\n                borderColor: \"#666\",\r\n              },\r\n              \"&.Mui-focused fieldset\": {\r\n                borderColor: \"#888\",\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n"],"names":[],"mappings":"AAAA,6BAA6B;AAC7B,sEAAsE;AACtE,6CAA6C;AAE7C,6BAA6B;AAC7B,kBAAkB;AAClB,2BAA2B;AAC3B,mBAAmB;AACnB,mBAAmB;AACnB,0BAA0B;AAC1B,yBAAyB;AACzB,mBAAmB;AACnB,IAAI;AAEJ,iDAAiD;AACjD,UAAU;AACV,aAAa;AACb,WAAW;AACX,mBAAmB;AACnB,YAAY;AACZ,uBAAuB;AACvB,cAAc;AACd,UAAU;AACV,aAAa;AACb,kBAAkB;AAClB,oBAAoB;AACpB,0BAA0B;AAC1B,iCAAiC;AACjC,qBAAqB;AACrB,uBAAuB;AACvB,wBAAwB;AACxB,0BAA0B;AAC1B,+BAA+B;AAC/B,sBAAsB;AACtB,4BAA4B;AAC5B,kCAAkC;AAClC,gDAAgD;AAChD,qCAAqC;AACrC,2DAA2D;AAC3D,2DAA2D;AAC3D,0BAA0B;AAC1B,wCAAwC;AACxC,eAAe;AACf,kBAAkB;AAClB,0CAA0C;AAC1C,wBAAwB;AACxB,wBAAwB;AACxB,mCAAmC;AACnC,4CAA4C;AAC5C,gCAAgC;AAChC,uCAAuC;AACvC,mBAAmB;AACnB,sCAAsC;AACtC,uCAAuC;AACvC,mBAAmB;AACnB,4CAA4C;AAC5C,uCAAuC;AACvC,mBAAmB;AACnB,iBAAiB;AACjB,wCAAwC;AACxC,+BAA+B;AAC/B,iBAAiB;AACjB,eAAe;AACf,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AAEL,4BAA4B;;;;;AAC5B;AACA;AACA;AAAA;AAAA;AACA;AAAA;;;;;;;;AAaA,MAAM,YAAsC,CAAC,EAC3C,IAAI,EACJ,OAAO,EACP,KAAK,EACL,OAAO,MAAM,EACb,MAAM,EACN,YAAY,KAAK,EACjB,OAAO,CAAC,EACR,KAAK,EACN;;IACC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,aAAa,SAAS;IAE5B,MAAM,2BAA2B;QAC/B,gBAAgB,CAAC,OAAS,CAAC;IAC7B;IAEA,qBACE,6LAAC,iKAAA,CAAA,aAAU;QACT,OAAO;QACP,MAAM;QACN,SAAS;QACT,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,6MAAA,CAAA,YAAS;gBACP,GAAG,KAAK;gBACT,MAAM,cAAc,CAAC,eAAe,aAAa;gBACjD,OAAO;gBACP,SAAQ;gBACR,SAAS;gBACT,QAAO;gBACP,WAAW;gBACX,MAAM,YAAY,OAAO;gBACzB,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK;gBACvB,YAAY,QAAQ,CAAC,KAAK,EAAE;gBAC5B,iBAAiB;oBAAE,OAAO;wBAAE,OAAO;oBAAO;gBAAE;gBAC5C,YAAY;oBACV,OAAO;wBAAE,OAAO;oBAAO;oBACvB,cAAc,4BACZ,6LAAC,4NAAA,CAAA,iBAAc;wBAAC,UAAS;kCACvB,cAAA,6LAAC,gNAAA,CAAA,aAAU;4BACT,SAAS;4BACT,MAAK;4BACL,IAAI;gCAAE,OAAO;4BAAO;sCAEnB,6BAAe,6LAAC,qKAAA,CAAA,UAAa;;;;uDAAM,6LAAC,kKAAA,CAAA,UAAU;;;;;;;;;;;;;;;gBAIvD;gBACA,IAAI;oBACF,iBAAiB;oBACjB,cAAc;oBACd,4BAA4B;wBAC1B,cAAc;4BACZ,aAAa;wBACf;wBACA,oBAAoB;4BAClB,aAAa;wBACf;wBACA,0BAA0B;4BACxB,aAAa;wBACf;oBACF;gBACF;;;;;;;;;;;AAKV;GApEM;KAAA;uCAsES","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/%28auth%29/login/schema.ts"],"sourcesContent":["import * as yup from 'yup'\r\n\r\nexport const loginSchema = yup.object().shape({\r\n    email:yup.string().email().required(\"Email is required\"),\r\n    password:yup.string().required(\"Password is required\")\r\n})"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,cAAc,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,KAAK,CAAC;IAC1C,OAAM,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,KAAK,GAAG,QAAQ,CAAC;IACpC,UAAS,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ,CAAC;AACnC","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/constants/keys.ts"],"sourcesContent":["export const base_url = process.env.NEXT_PUBLIC_API_URL;\r\n"],"names":[],"mappings":";;;AAAwB;AAAjB,MAAM,WAAW,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,mBAAmB","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/utils/auth.ts"],"sourcesContent":["export const auth = {\r\n  logout: async () => {\r\n    // const email =   localStorage.getItem('userEmail');\r\n    // console.log(email, 'emailemail');\r\n    // const lastOnboardingDate =   localStorage.getItem('lastOnboardingDate');\r\n    localStorage.clear();\r\n    // if (lastOnboardingDate) {\r\n    //       localStorage.setItem('lastOnboardingDate', lastOnboardingDate);\r\n    // }\r\n    // if (email) {\r\n    //       localStorage.setItem('userEmail', email);\r\n    // }\r\n  },\r\n  delete: async () => {\r\n    localStorage.clear();\r\n  },\r\n  accessToken: async () => {\r\n    return localStorage.getItem(\"accessToken\");\r\n  },\r\n  refreshToken: async () => {\r\n    return localStorage.getItem(\"refreshToken\");\r\n  },\r\n  platform: async () => {\r\n    return localStorage.getItem(\"platform\");\r\n  },\r\n  setUser: async (userId: string) => {\r\n    localStorage.setItem(\"userId\", userId);\r\n  },\r\n  user: async () => {\r\n    return localStorage.getItem(\"userId\");\r\n  },\r\n  updateTokens: async (accessToken: string, refreshToken: string) => {\r\n    localStorage.setItem(\"accessToken\", accessToken);\r\n    localStorage.setItem(\"refreshToken\", refreshToken);\r\n  },\r\n};\r\n\r\nexport default auth;\r\n"],"names":[],"mappings":";;;;AAAO,MAAM,OAAO;IAClB,QAAQ;QACN,qDAAqD;QACrD,oCAAoC;QACpC,2EAA2E;QAC3E,aAAa,KAAK;IAClB,4BAA4B;IAC5B,wEAAwE;IACxE,IAAI;IACJ,eAAe;IACf,kDAAkD;IAClD,IAAI;IACN;IACA,QAAQ;QACN,aAAa,KAAK;IACpB;IACA,aAAa;QACX,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,cAAc;QACZ,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,UAAU;QACR,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,SAAS,OAAO;QACd,aAAa,OAAO,CAAC,UAAU;IACjC;IACA,MAAM;QACJ,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,cAAc,OAAO,aAAqB;QACxC,aAAa,OAAO,CAAC,eAAe;QACpC,aAAa,OAAO,CAAC,gBAAgB;IACvC;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/utils/axios.ts"],"sourcesContent":["import { base_url } from \"../constants/keys\";\r\nimport auth from \"./auth\";\r\nimport axios from \"axios\";\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: base_url,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Access-Control-Allow-Origin\": \"*\", //\r\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, PATCH, OPTIONS\",\r\n  },\r\n});\r\napiClient.interceptors.request.use(\r\n  async (config) => {\r\n    const accessToken = await auth.accessToken();\r\n    if (accessToken) {\r\n      config.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    }\r\n    if (config.data instanceof FormData) {\r\n      config.headers[\"Content-Type\"] = \"multipart/form-data\";\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    } else {\r\n      config.headers[\"Content-Type\"] = \"application/json\";\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// apiClient.interceptors.response.use(\r\n//   (response) => response,\r\n//   async (error) => {\r\n//     const originalRequest = error.config;\r\n//     if (error.response?.status === 401 && !originalRequest._retry) {\r\n//       originalRequest._retry = true;\r\n//       const refreshToken = await auth.refreshToken();\r\n\r\n//       if (refreshToken) {\r\n//         try {\r\n//           const response = await axios.post(`${baseUrl}/auth/refresh-token`, {\r\n//             refreshToken,\r\n//           });\r\n//           const { accessToken, refreshToken: newRefreshToken } =\r\n//             response.data.data;\r\n//           await auth.updateTokens(accessToken, newRefreshToken);\r\n//           originalRequest.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n//           return axios(originalRequest);\r\n//         } catch (refreshError) {\r\n//           auth.logout();\r\n//           return Promise.reject(refreshError);\r\n//         }\r\n//       } else {\r\n//         auth.logout();\r\n//       }\r\n//     }\r\n//     return Promise.reject(error);\r\n//   }\r\n// );\r\napiClient.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const queryFn = async <T>(\r\n  endpoint: string,\r\n  params?: Record<string, any>\r\n): Promise<T> => {\r\n  const response = await apiClient.get(endpoint, { params });\r\n  return response.data;\r\n};\r\n\r\nexport const mutationFn = async (\r\n  endpoint: string,\r\n  method: \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\",\r\n  body?: Record<string, any>,\r\n  headers?: Record<string, any>\r\n) => {\r\n  const response = await apiClient.request({\r\n    url: endpoint,\r\n    method,\r\n    data: body,\r\n    headers: {\r\n      ...headers,\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,MAAM,YAAY,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC7B,SAAS,kIAAA,CAAA,WAAQ;IACjB,SAAS;QACP,gBAAgB;QAChB,+BAA+B;QAC/B,gCAAgC;IAClC;AACF;AACA,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAChC,OAAO;IACL,MAAM,cAAc,MAAM,8HAAA,CAAA,UAAI,CAAC,WAAW;IAC1C,IAAI,aAAa;QACf,OAAO,OAAO,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,aAAa;QACzD,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ;IACA,IAAI,OAAO,IAAI,YAAY,UAAU;QACnC,OAAO,OAAO,CAAC,eAAe,GAAG;QACjC,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ,OAAO;QACL,OAAO,OAAO,CAAC,eAAe,GAAG;QACjC,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ;IACA,OAAO;AACT,GACA,CAAC,QAAU,QAAQ,MAAM,CAAC;AAG5B,uCAAuC;AACvC,4BAA4B;AAC5B,uBAAuB;AACvB,4CAA4C;AAC5C,uEAAuE;AACvE,uCAAuC;AACvC,wDAAwD;AAExD,4BAA4B;AAC5B,gBAAgB;AAChB,iFAAiF;AACjF,4BAA4B;AAC5B,gBAAgB;AAChB,mEAAmE;AACnE,kCAAkC;AAClC,mEAAmE;AACnE,gFAAgF;AAChF,2CAA2C;AAC3C,mCAAmC;AACnC,2BAA2B;AAC3B,iDAAiD;AACjD,YAAY;AACZ,iBAAiB;AACjB,yBAAyB;AACzB,UAAU;AACV,QAAQ;AACR,oCAAoC;AACpC,MAAM;AACN,KAAK;AACL,UAAU,YAAY,CAAC,QAAQ,CAAC,GAAG,CACjC,CAAC,WAAa,UACd,OAAO;IACL,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGK,MAAM,UAAU,OACrB,UACA;IAEA,MAAM,WAAW,MAAM,UAAU,GAAG,CAAC,UAAU;QAAE;IAAO;IACxD,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OACxB,UACA,QACA,MACA;IAEA,MAAM,WAAW,MAAM,UAAU,OAAO,CAAC;QACvC,KAAK;QACL;QACA,MAAM;QACN,SAAS;YACP,GAAG,OAAO;QACZ;IACF;IACA,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/api/authentication/index.ts"],"sourcesContent":["import { mutationFn } from \"@/app/utils/axios\";\r\nimport { ILoginBody, ISendEmailBody, ISignupBody } from \"./types\";\r\n\r\nexport const loginApi = {\r\n    mutationFn: (body: ILoginBody) => {\r\n        return mutationFn('auth/signin', 'POST', body);\r\n    },\r\n};\r\n\r\nexport const RegisterApi = {\r\n    mutationFn: (body: ISignupBody) => {\r\n        return mutationFn('auth/signup', 'POST', body);\r\n    },\r\n};\r\nexport const ConfirmEmailApi = {\r\n    mutationFn: (body: ISendEmailBody) => {\r\n        return mutationFn('auth/send-email', 'POST', body);\r\n    },\r\n};\r\n\r\n"],"names":[],"mappings":";;;;;AAAA;;AAGO,MAAM,WAAW;IACpB,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,+HAAA,CAAA,aAAU,AAAD,EAAE,eAAe,QAAQ;IAC7C;AACJ;AAEO,MAAM,cAAc;IACvB,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,+HAAA,CAAA,aAAU,AAAD,EAAE,eAAe,QAAQ;IAC7C;AACJ;AACO,MAAM,kBAAkB;IAC3B,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,+HAAA,CAAA,aAAU,AAAD,EAAE,mBAAmB,QAAQ;IACjD;AACJ","debugId":null}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/%28auth%29/login/hooks/index.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { loginSchema } from \"../schema\";\r\nimport { IAddLoginFormValues } from \"../types\";\r\nimport { useMutation } from \"@tanstack/react-query\";\r\nimport { loginApi } from \"@/api/authentication\";\r\n\r\nexport default function useLogin() {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(loginSchema),\r\n    defaultValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  });\r\n  const { mutateAsync: loginUser } = useMutation({\r\n    mutationFn: loginApi.mutationFn,\r\n  });\r\n  const handleLogin: SubmitHandler<IAddLoginFormValues> = async (data) => {\r\n    try {\r\n      const response = await loginUser(data);\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return { control, handleSubmit, errors, handleLogin };\r\n}\r\n"],"names":[],"mappings":";;;AAEA;AACA;AACA;AAEA;AACA;;AAPA;;;;;;AASe,SAAS;;IACtB,MAAM,EACJ,OAAO,EACP,YAAY,EACZ,KAAK,EACL,WAAW,EAAE,MAAM,EAAE,EACtB,GAAG,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE;QACV,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE,4IAAA,CAAA,cAAW;QACjC,eAAe;YACb,OAAO;YACP,UAAU;QACZ;IACF;IACA,MAAM,EAAE,aAAa,SAAS,EAAE,GAAG,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE;QAC7C,YAAY,wIAAA,CAAA,WAAQ,CAAC,UAAU;IACjC;IACA,MAAM,cAAkD,OAAO;QAC7D,IAAI;YACF,MAAM,WAAW,MAAM,UAAU;YACjC,QAAQ,GAAG,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,GAAG,CAAC;QACd;IACF;IACA,OAAO;QAAE;QAAS;QAAc;QAAQ;IAAY;AACtD;GAzBwB;;QAMlB,iKAAA,CAAA,UAAO;QAOwB,iLAAA,CAAA,cAAW","debugId":null}},
    {"offset": {"line": 454, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/Login.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { Button, Checkbox, TextField } from \"@mui/material\"\r\nimport { Divider } from \"antd\"\r\nimport Link from \"next/link\"\r\nimport { useState } from \"react\"\r\nimport Modal from \"./modals/Modal\"\r\nimport FormInput from \"./ui/Inputs/FormInput\"\r\nimport useLogin from \"../(auth)/login/hooks\"\r\nimport OTP from \"antd/es/input/OTP\"\r\n\r\nconst Login = () => {\r\n  const [IsForgotPasswordModalOpen, setIsForgotPasswordModalOpen] =\r\n    useState<boolean>(false)\r\n  const { control, handleSubmit, errors, handleLogin } = useLogin()\r\n\r\n  const [resetPassForm, setResetPassForm] = useState({\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  })\r\n  const handlePassChange = (e: any) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n  })\r\n\r\n  const handleChange = (e: any) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value })\r\n  }\r\n  return (\r\n    <div className='w-full max-w-md'>\r\n      <div className='text-[#737373] font-medium text-2xl'>LOGO</div>\r\n      <div className='text-3xl mt-4'>Welcome to NFT!</div>\r\n      <div className='text-[#c0c0c0] text-sm mt-2'>\r\n        Please sign in to your account and start the adventure\r\n      </div>\r\n\r\n      <div className='space-y-4'>\r\n        <div className='space-y-1'>\r\n          <FormInput\r\n            name='email'\r\n            control={control}\r\n            label='Email or Username'\r\n            errors={errors}\r\n            rules={{ required: \"Email is required\" }}\r\n          />\r\n          <FormInput\r\n            name='password'\r\n            control={control}\r\n            label='Password'\r\n            type='password'\r\n            errors={errors}\r\n            rules={{ required: \"Password is required\" }}\r\n          />\r\n          <Button\r\n            variant='text'\r\n            className='block text-[#7367F0]'\r\n            onClick={() => setIsForgotPasswordModalOpen(true)}\r\n          >\r\n            Forgot Password?\r\n          </Button>\r\n        </div>\r\n\r\n        <div className='flex items-center gap-2'>\r\n          <Checkbox className='!p-0' />{\" \"}\r\n          <span className='text-muted'>Remember Me</span>\r\n        </div>\r\n\r\n        <Button\r\n          variant='contained'\r\n          fullWidth\r\n          onClick={handleSubmit(handleLogin)}\r\n        >\r\n          Sign in\r\n        </Button>\r\n\r\n        <div className='text-sm text-center block mt-2'>\r\n          New on our platform?{\" \"}\r\n          <Link className='text-primary' href='/register'>\r\n            Create an account\r\n          </Link>\r\n        </div>\r\n\r\n        <Divider>Or</Divider>\r\n\r\n        <div className='flex items-center justify-center gap-2 mt-4'>\r\n          <div className='h-[38px] w-[38px] bg-[#1d2b48] grid place-items-center rounded'>\r\n            <img src='/icons/fb.png' alt='' />\r\n          </div>\r\n          <div className='h-[38px] w-[38px] bg-[#0d3148] grid place-items-center rounded'>\r\n            <img src='/icons/twitter.png' alt='' />\r\n          </div>\r\n          <div className='h-[38px] w-[38px] bg-[#3f1917] grid place-items-center rounded'>\r\n            <img src='/icons/google.png' alt='' />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* forget pass modal */}\r\n      {/* <Modal\r\n        open={IsForgotPasswordModalOpen}\r\n        setOpen={setIsForgotPasswordModalOpen}\r\n      >\r\n        <div className=\"space-y-4\">\r\n        <div className='text-[#737373] text-2xl text-center'>LOGO</div>\r\n        <div className='font-medium text-xl'>Forgot Password? 🔒</div>\r\n        <div className='text-[#737373] text-sm'>\r\n          Enter your email, and we'll send you OTP to reset your password\r\n        </div>\r\n\r\n        <TextField\r\n          name='email'\r\n          label='Email'\r\n          variant='outlined'\r\n          fullWidth\r\n          value={form.email}\r\n          onChange={handleChange}\r\n          margin='normal'\r\n          InputLabelProps={{ style: { color: \"#aaa\" } }}\r\n          InputProps={{ style: { color: \"#fff\" } }}\r\n        />\r\n\r\n        <Button variant=\"contained\" fullWidth>Send Reset Link</Button>\r\n        <Button variant=\"text\" fullWidth>Back to log in</Button>\r\n        </div>\r\n      </Modal> */}\r\n      {/* tfv modal */}\r\n      {/* <Modal\r\n        open={IsForgotPasswordModalOpen}\r\n        setOpen={setIsForgotPasswordModalOpen}\r\n      >\r\n        <div className='space-y-4'>\r\n          <div className='text-[#737373] text-2xl text-center'>LOGO</div>\r\n          <div className='font-medium text-xl'>Two-Step Verification 💬</div>\r\n          <div className='text-[#737373] text-sm'>\r\n            We sent a verification code to your Email. Enter the code from the\r\n            eamil in the field below.\r\n            <div>*****d20@gmail.com</div>\r\n          </div>\r\n\r\n          <div className='w-full'>\r\n            <OTP style={{ width: \"100%\", justifyContent: \"center\" }} />\r\n          </div>\r\n\r\n          <Button variant='contained' fullWidth>\r\n            Verify my account\r\n          </Button>\r\n          <div className='flex gap-2 items-center justify-center'>\r\n            <div>Didn't get the code?</div>\r\n            <div className='text-primary'>Resend</div>\r\n          </div>\r\n        </div>\r\n      </Modal> */}\r\n      {/* reset password */}\r\n      {/* <Modal\r\n        open={IsForgotPasswordModalOpen}\r\n        setOpen={setIsForgotPasswordModalOpen}\r\n      >\r\n        <div className=\"space-y-4\">\r\n        <div className='text-[#737373] text-2xl text-center'>LOGO</div>\r\n        <div className='font-medium text-xl'>Reset Password 🔒</div>\r\n        <div className='text-[#737373] text-sm'>\r\n          for john.doe@email.com\r\n        </div>\r\n\r\n        <TextField\r\n          name='newPassword'\r\n          label='New Password'\r\n          variant='outlined'\r\n          fullWidth\r\n          value={resetPassForm.newPassword}\r\n          onChange={handlePassChange}\r\n          margin='normal'\r\n          InputLabelProps={{ style: { color: \"#aaa\" } }}\r\n          InputProps={{ style: { color: \"#fff\" } }}\r\n        />\r\n        <TextField\r\n          name='confirmPassword'\r\n          label='Confirm Password'\r\n          variant='outlined'\r\n          fullWidth\r\n          value={resetPassForm.confirmPassword}\r\n          onChange={handlePassChange}\r\n          margin='normal'\r\n          InputLabelProps={{ style: { color: \"#aaa\" } }}\r\n          InputProps={{ style: { color: \"#fff\" } }}\r\n        />\r\n\r\n        <Button variant=\"contained\" fullWidth>Set New Password</Button>\r\n        <Button variant=\"text\" fullWidth>Back to log in</Button>\r\n        </div>\r\n      </Modal> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;;;AARA;;;;;;;AAWA,MAAM,QAAQ;;IACZ,MAAM,CAAC,2BAA2B,6BAA6B,GAC7D,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IACpB,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,oJAAA,CAAA,UAAQ,AAAD;IAE9D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QACjD,aAAa;QACb,iBAAiB;IACnB;IACA,MAAM,mBAAmB,CAAC;QACxB,QAAQ;YAAE,GAAG,IAAI;YAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QAAC;IACrD;IAEA,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,OAAO;IACT;IAEA,MAAM,eAAe,CAAC;QACpB,QAAQ;YAAE,GAAG,IAAI;YAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QAAC;IACrD;IACA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BAAsC;;;;;;0BACrD,6LAAC;gBAAI,WAAU;0BAAgB;;;;;;0BAC/B,6LAAC;gBAAI,WAAU;0BAA8B;;;;;;0BAI7C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,yJAAA,CAAA,UAAS;gCACR,MAAK;gCACL,SAAS;gCACT,OAAM;gCACN,QAAQ;gCACR,OAAO;oCAAE,UAAU;gCAAoB;;;;;;0CAEzC,6LAAC,yJAAA,CAAA,UAAS;gCACR,MAAK;gCACL,SAAS;gCACT,OAAM;gCACN,MAAK;gCACL,QAAQ;gCACR,OAAO;oCAAE,UAAU;gCAAuB;;;;;;0CAE5C,6LAAC,oMAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,WAAU;gCACV,SAAS,IAAM,6BAA6B;0CAC7C;;;;;;;;;;;;kCAKH,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,0MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;4BAAU;0CAC9B,6LAAC;gCAAK,WAAU;0CAAa;;;;;;;;;;;;kCAG/B,6LAAC,oMAAA,CAAA,SAAM;wBACL,SAAQ;wBACR,SAAS;wBACT,SAAS,aAAa;kCACvB;;;;;;kCAID,6LAAC;wBAAI,WAAU;;4BAAiC;4BACzB;0CACrB,6LAAC,+JAAA,CAAA,UAAI;gCAAC,WAAU;gCAAe,MAAK;0CAAY;;;;;;;;;;;;kCAKlD,6LAAC,uLAAA,CAAA,UAAO;kCAAC;;;;;;kCAET,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,KAAI;oCAAgB,KAAI;;;;;;;;;;;0CAE/B,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,KAAI;oCAAqB,KAAI;;;;;;;;;;;0CAEpC,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,KAAI;oCAAoB,KAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoG7C;GAxLM;;QAGmD,oJAAA,CAAA,UAAQ;;;KAH3D;uCA0LS","debugId":null}}]
}