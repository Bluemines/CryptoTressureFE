{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/constants/keys.ts"],"sourcesContent":["export const base_url = process.env.NEXT_PUBLIC_API_URL;\r\nexport const base_image_url = process.env.NEXT_PUBLIC_IMAGE_URL;\r\n"],"names":[],"mappings":";;;;AAAwB;AAAjB,MAAM;AACN,MAAM","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/utils/auth.ts"],"sourcesContent":["export const auth = {\r\n  logout: async () => {\r\n    // const email =   localStorage.getItem('userEmail');\r\n    // console.log(email, 'emailemail');\r\n    // const lastOnboardingDate =   localStorage.getItem('lastOnboardingDate');\r\n    localStorage.clear();\r\n    // if (lastOnboardingDate) {\r\n    //       localStorage.setItem('lastOnboardingDate', lastOnboardingDate);\r\n    // }\r\n    // if (email) {\r\n    //       localStorage.setItem('userEmail', email);\r\n    // }\r\n  },\r\n  delete: async () => {\r\n    localStorage.clear();\r\n  },\r\n  accessToken: async () => {\r\n    return localStorage.getItem(\"accessToken\");\r\n  },\r\n  setToken: async (token: string) => {\r\n    return localStorage.setItem(\"accessToken\", token);\r\n  },\r\n  setRole: async (role: string) => {\r\n    return localStorage.setItem(\"role\", role);\r\n  },\r\n  refreshToken: async () => {\r\n    return localStorage.getItem(\"refreshToken\");\r\n  },\r\n  platform: async () => {\r\n    return localStorage.getItem(\"platform\");\r\n  },\r\n  setUser: async (userId: string) => {\r\n    localStorage.setItem(\"userId\", userId);\r\n  },\r\n  user: async () => {\r\n    return localStorage.getItem(\"userId\");\r\n  },\r\n  updateTokens: async (accessToken: string, refreshToken: string) => {\r\n    localStorage.setItem(\"accessToken\", accessToken);\r\n    localStorage.setItem(\"refreshToken\", refreshToken);\r\n  },\r\n};\r\n\r\nexport default auth;\r\n"],"names":[],"mappings":";;;;AAAO,MAAM,OAAO;IAClB,QAAQ;QACN,qDAAqD;QACrD,oCAAoC;QACpC,2EAA2E;QAC3E,aAAa,KAAK;IAClB,4BAA4B;IAC5B,wEAAwE;IACxE,IAAI;IACJ,eAAe;IACf,kDAAkD;IAClD,IAAI;IACN;IACA,QAAQ;QACN,aAAa,KAAK;IACpB;IACA,aAAa;QACX,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,UAAU,OAAO;QACf,OAAO,aAAa,OAAO,CAAC,eAAe;IAC7C;IACA,SAAS,OAAO;QACd,OAAO,aAAa,OAAO,CAAC,QAAQ;IACtC;IACA,cAAc;QACZ,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,UAAU;QACR,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,SAAS,OAAO;QACd,aAAa,OAAO,CAAC,UAAU;IACjC;IACA,MAAM;QACJ,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,cAAc,OAAO,aAAqB;QACxC,aAAa,OAAO,CAAC,eAAe;QACpC,aAAa,OAAO,CAAC,gBAAgB;IACvC;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/utils/axios.ts"],"sourcesContent":["import { base_url } from \"../constants/keys\";\r\nimport auth from \"./auth\";\r\nimport axios from \"axios\";\r\n\r\nexport const apiClient = axios.create({\r\n  baseURL: base_url,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Access-Control-Allow-Origin\": \"*\", //\r\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, PATCH, OPTIONS\",\r\n  },\r\n});\r\napiClient.interceptors.request.use(\r\n  async (config) => {\r\n    const accessToken = await auth.accessToken();\r\n    if (accessToken) {\r\n      config.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    }\r\n    if (config.data instanceof FormData) {\r\n      config.headers[\"Content-Type\"] = \"multipart/form-data\";\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    } else {\r\n      config.headers[\"Content-Type\"] = \"application/json\";\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// apiClient.interceptors.response.use(\r\n//   (response) => response,\r\n//   async (error) => {\r\n//     const originalRequest = error.config;\r\n//     if (error.response?.status === 401 && !originalRequest._retry) {\r\n//       originalRequest._retry = true;\r\n//       const refreshToken = await auth.refreshToken();\r\n\r\n//       if (refreshToken) {\r\n//         try {\r\n//           const response = await axios.post(`${baseUrl}/auth/refresh-token`, {\r\n//             refreshToken,\r\n//           });\r\n//           const { accessToken, refreshToken: newRefreshToken } =\r\n//             response.data.data;\r\n//           await auth.updateTokens(accessToken, newRefreshToken);\r\n//           originalRequest.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n//           return axios(originalRequest);\r\n//         } catch (refreshError) {\r\n//           auth.logout();\r\n//           return Promise.reject(refreshError);\r\n//         }\r\n//       } else {\r\n//         auth.logout();\r\n//       }\r\n//     }\r\n//     return Promise.reject(error);\r\n//   }\r\n// );\r\napiClient.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const queryFn = async <T>(\r\n  endpoint: string,\r\n  params?: Record<string, any>\r\n): Promise<T> => {\r\n  const response = await apiClient.get(endpoint, { params });\r\n  return response.data;\r\n};\r\n\r\nexport const mutationFn = async (\r\n  endpoint: string,\r\n  method: \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\",\r\n  body?: Record<string, any>,\r\n  headers?: Record<string, any>\r\n) => {\r\n  const response = await apiClient.request({\r\n    url: endpoint,\r\n    method,\r\n    data: body,\r\n    headers: {\r\n      ...headers,\r\n    },\r\n  });\r\n  return response.data;\r\n};"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,MAAM,YAAY,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACpC,SAAS,kIAAA,CAAA,WAAQ;IACjB,SAAS;QACP,gBAAgB;QAChB,+BAA+B;QAC/B,gCAAgC;IAClC;AACF;AACA,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAChC,OAAO;IACL,MAAM,cAAc,MAAM,8HAAA,CAAA,UAAI,CAAC,WAAW;IAC1C,IAAI,aAAa;QACf,OAAO,OAAO,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,aAAa;QACzD,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ;IACA,IAAI,OAAO,IAAI,YAAY,UAAU;QACnC,OAAO,OAAO,CAAC,eAAe,GAAG;QACjC,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ,OAAO;QACL,OAAO,OAAO,CAAC,eAAe,GAAG;QACjC,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ;IACA,OAAO;AACT,GACA,CAAC,QAAU,QAAQ,MAAM,CAAC;AAG5B,uCAAuC;AACvC,4BAA4B;AAC5B,uBAAuB;AACvB,4CAA4C;AAC5C,uEAAuE;AACvE,uCAAuC;AACvC,wDAAwD;AAExD,4BAA4B;AAC5B,gBAAgB;AAChB,iFAAiF;AACjF,4BAA4B;AAC5B,gBAAgB;AAChB,mEAAmE;AACnE,kCAAkC;AAClC,mEAAmE;AACnE,gFAAgF;AAChF,2CAA2C;AAC3C,mCAAmC;AACnC,2BAA2B;AAC3B,iDAAiD;AACjD,YAAY;AACZ,iBAAiB;AACjB,yBAAyB;AACzB,UAAU;AACV,QAAQ;AACR,oCAAoC;AACpC,MAAM;AACN,KAAK;AACL,UAAU,YAAY,CAAC,QAAQ,CAAC,GAAG,CACjC,CAAC,WAAa,UACd,OAAO;IACL,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGK,MAAM,UAAU,OACrB,UACA;IAEA,MAAM,WAAW,MAAM,UAAU,GAAG,CAAC,UAAU;QAAE;IAAO;IACxD,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OACxB,UACA,QACA,MACA;IAEA,MAAM,WAAW,MAAM,UAAU,OAAO,CAAC;QACvC,KAAK;QACL;QACA,MAAM;QACN,SAAS;YACP,GAAG,OAAO;QACZ;IACF;IACA,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/api/auth/authService.ts"],"sourcesContent":["import { apiClient } from \"@/app/utils/axios\"\r\n\r\nexport const getCurrentUser = async () => {\r\n  const { data } = await apiClient.get('auth/me')\r\n  return data.data\r\n}\r\n\r\nexport const updateUser = async (id: number, username: string, phone: string) => {\r\n  const { data } = await apiClient.patch('user/update', { id, username, phone })\r\n  return data\r\n}"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,iBAAiB;IAC5B,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,+HAAA,CAAA,YAAS,CAAC,GAAG,CAAC;IACrC,OAAO,KAAK,IAAI;AAClB;AAEO,MAAM,aAAa,OAAO,IAAY,UAAkB;IAC7D,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,+HAAA,CAAA,YAAS,CAAC,KAAK,CAAC,eAAe;QAAE;QAAI;QAAU;IAAM;IAC5E,OAAO;AACT","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/api/auth/useAuth.ts"],"sourcesContent":["import { useMutation, useQuery } from \"@tanstack/react-query\"\r\nimport { getCurrentUser, updateUser } from \"./authService\"\r\nimport { IAxiosError } from \"@/lib/axiosError\"\r\nimport queryClient from \"@/app/utils/queryClient\"\r\n\r\ntype updateUserPayload = {\r\n  id: number,\r\n  username: string\r\n  phone: string\r\n}\r\n\r\nexport const useGetCurrentUser = () => {\r\n  return useQuery<any, IAxiosError>({\r\n    queryKey: [\"currentUser\"],\r\n    queryFn: getCurrentUser,\r\n  })\r\n}\r\n\r\nexport const useUpdateUser = () => {\r\n  return useMutation<any, IAxiosError, updateUserPayload>({\r\n    mutationFn: (payload) => updateUser(payload.id, payload.username, payload.phone),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: [\"currentUser\"] })\r\n    },\r\n  })\r\n}"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAEA;;;;;AAQO,MAAM,oBAAoB;;IAC/B,OAAO,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAoB;QAChC,UAAU;YAAC;SAAc;QACzB,SAAS,oIAAA,CAAA,iBAAc;IACzB;AACF;GALa;;QACJ,8KAAA,CAAA,WAAQ;;;AAMV,MAAM,gBAAgB;;IAC3B,OAAO,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAuC;QACtD,UAAU;yCAAE,CAAC,UAAY,CAAA,GAAA,oIAAA,CAAA,aAAU,AAAD,EAAE,QAAQ,EAAE,EAAE,QAAQ,QAAQ,EAAE,QAAQ,KAAK;;QAC/E,SAAS;yCAAE;gBACT,sIAAA,CAAA,UAAW,CAAC,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;qBAAc;gBAAC;YAC5D;;IACF;AACF;IAPa;;QACJ,iLAAA,CAAA,cAAW","debugId":null}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/api/user/userService.ts"],"sourcesContent":["import { apiClient } from \"@/app/utils/axios\"\r\n\r\nexport const getPopularProducts = async () => {\r\n  const { data } = await apiClient.get('products/popular')\r\n  return data.data\r\n}\r\n\r\nexport const getMyMachines = async (id: number) => {\r\n  const { data } = await apiClient.get(`products/${id}`)\r\n  return data.data\r\n}"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,qBAAqB;IAChC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,+HAAA,CAAA,YAAS,CAAC,GAAG,CAAC;IACrC,OAAO,KAAK,IAAI;AAClB;AAEO,MAAM,gBAAgB,OAAO;IAClC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,+HAAA,CAAA,YAAS,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI;IACrD,OAAO,KAAK,IAAI;AAClB","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/api/user/useUser.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\r\nimport { IAxiosError } from \"@/lib/axiosError\"\r\nimport { getMyMachines, getPopularProducts } from \"./userService\"\r\n\r\nexport const useGetPopularProducts = () => {\r\n  return useQuery<any, IAxiosError>({\r\n    queryKey: ['get_products'],\r\n    queryFn: getPopularProducts\r\n  })\r\n}\r\n\r\nexport const useGetMyMachines = (id: number) => {\r\n  return useQuery<any, IAxiosError>({\r\n    queryKey: ['get_my_machines', id],\r\n    queryFn: ({ queryKey }) => getMyMachines(queryKey[1] as number),\r\n    enabled: !!id,\r\n  });\r\n};"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEO,MAAM,wBAAwB;;IACnC,OAAO,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAoB;QAChC,UAAU;YAAC;SAAe;QAC1B,SAAS,oIAAA,CAAA,qBAAkB;IAC7B;AACF;GALa;;QACJ,8KAAA,CAAA,WAAQ;;;AAMV,MAAM,mBAAmB,CAAC;;IAC/B,OAAO,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAoB;QAChC,UAAU;YAAC;YAAmB;SAAG;QACjC,OAAO;yCAAE,CAAC,EAAE,QAAQ,EAAE,GAAK,CAAA,GAAA,oIAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ,CAAC,EAAE;;QACpD,SAAS,CAAC,CAAC;IACb;AACF;IANa;;QACJ,8KAAA,CAAA,WAAQ","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/cards/NFTCard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { base_image_url, base_url } from \"@/app/constants/keys\";\r\nimport { ArrowRight } from \"lucide-react\";\r\nimport React from \"react\";\r\n\r\ninterface NFTCardProps {\r\n  image: string;\r\n  title: string;\r\n  price: number;\r\n  dailyIncome: number;\r\n  fee: number;\r\n  days: number;\r\n  level: string;\r\n  action: \"Buy\" | \"Sell\";\r\n  onClick?: () => void;\r\n}\r\n\r\n// Internal Card component\r\nconst Card = ({\r\n  children,\r\n  className = \"\",\r\n}: {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}) => {\r\n  return <div className={`rounded-lg shadow-sm ${className}`}>{children}</div>;\r\n};\r\n\r\n// Internal CardContent component\r\nconst CardContent = ({\r\n  children,\r\n  className = \"\",\r\n}: {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}) => {\r\n  return <div className={`p-4 ${className}`}>{children}</div>;\r\n};\r\n\r\n// Internal Button component\r\nconst Button = ({\r\n  children,\r\n  className = \"\",\r\n  ...props\r\n}: React.ButtonHTMLAttributes<HTMLButtonElement>) => {\r\n  return (\r\n    <button\r\n      className={`inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none disabled:pointer-events-none disabled:opacity-50 ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport function NFTCard({\r\n  image,\r\n  title,\r\n  price,\r\n  dailyIncome,\r\n  fee,\r\n  days,\r\n  level,\r\n  action,\r\n  onClick,\r\n}: NFTCardProps) {\r\n  return (\r\n    <Card className=\"bg-[#1A1F2C] border-none overflow-hidden\">\r\n      <div className=\"relative aspect-square\">\r\n        <img src={`${base_image_url}${image}`} alt={title} className=\"object-fit w-full h-full\" />\r\n      </div>\r\n      <CardContent className=\"p-4\">\r\n        <h3 className=\"text-xl font-semibold text-white mb-4\">{title}</h3>\r\n        <div className=\"space-y-2 mb-4\">\r\n          <div className=\"flex justify-between text-sm\">\r\n            <span className=\"text-gray-400\">Price</span>\r\n            <span className=\"text-white\">${price}</span>\r\n          </div>\r\n          <div className=\"flex justify-between text-sm\">\r\n            <span className=\"text-gray-400\">Daily Income</span>\r\n            <span className=\"text-white\">{dailyIncome}%</span>\r\n          </div>\r\n          <div className=\"flex justify-between text-sm\">\r\n            <span className=\"text-gray-400\">Fee</span>\r\n            <span className=\"text-white\">{fee}%</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex justify-between text-sm mb-4\">\r\n          <div>\r\n            <span className=\"text-gray-400\">Days: </span>\r\n            <span className=\"text-white\">{days}</span>\r\n          </div>\r\n          <div>\r\n            <span className=\"text-gray-400\">Level: </span>\r\n            <span className=\"text-white\">{level}</span>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          className={`w-full ${\r\n            action === \"Buy\"\r\n              ? \"bg-[#7C3AED] hover:bg-[#6D28D9]\"\r\n              : \"bg-[#6366F1] hover:bg-[#4F46E5]\"\r\n          }`}\r\n          onClick={onClick}\r\n        >\r\n          {action}\r\n          <ArrowRight className=\"w-4 h-4 ml-2\" />\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAkBA,0BAA0B;AAC1B,MAAM,OAAO,CAAC,EACZ,QAAQ,EACR,YAAY,EAAE,EAIf;IACC,qBAAO,6LAAC;QAAI,WAAW,CAAC,qBAAqB,EAAE,WAAW;kBAAG;;;;;;AAC/D;KARM;AAUN,iCAAiC;AACjC,MAAM,cAAc,CAAC,EACnB,QAAQ,EACR,YAAY,EAAE,EAIf;IACC,qBAAO,6LAAC;QAAI,WAAW,CAAC,IAAI,EAAE,WAAW;kBAAG;;;;;;AAC9C;MARM;AAUN,4BAA4B;AAC5B,MAAM,SAAS,CAAC,EACd,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OAC2C;IAC9C,qBACE,6LAAC;QACC,WAAW,CAAC,6JAA6J,EAAE,WAAW;QACrL,GAAG,KAAK;kBAER;;;;;;AAGP;MAbM;AAeC,SAAS,QAAQ,EACtB,KAAK,EACL,KAAK,EACL,KAAK,EACL,WAAW,EACX,GAAG,EACH,IAAI,EACJ,KAAK,EACL,MAAM,EACN,OAAO,EACM;IACb,qBACE,6LAAC;QAAK,WAAU;;0BACd,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,KAAK,GAAG,kIAAA,CAAA,iBAAc,GAAG,OAAO;oBAAE,KAAK;oBAAO,WAAU;;;;;;;;;;;0BAE/D,6LAAC;gBAAY,WAAU;;kCACrB,6LAAC;wBAAG,WAAU;kCAAyC;;;;;;kCACvD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAK,WAAU;kDAAgB;;;;;;kDAChC,6LAAC;wCAAK,WAAU;;4CAAa;4CAAE;;;;;;;;;;;;;0CAEjC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAK,WAAU;kDAAgB;;;;;;kDAChC,6LAAC;wCAAK,WAAU;;4CAAc;4CAAY;;;;;;;;;;;;;0CAE5C,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAK,WAAU;kDAAgB;;;;;;kDAChC,6LAAC;wCAAK,WAAU;;4CAAc;4CAAI;;;;;;;;;;;;;;;;;;;kCAGtC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;;kDACC,6LAAC;wCAAK,WAAU;kDAAgB;;;;;;kDAChC,6LAAC;wCAAK,WAAU;kDAAc;;;;;;;;;;;;0CAEhC,6LAAC;;kDACC,6LAAC;wCAAK,WAAU;kDAAgB;;;;;;kDAChC,6LAAC;wCAAK,WAAU;kDAAc;;;;;;;;;;;;;;;;;;kCAGlC,6LAAC;wBACC,WAAW,CAAC,OAAO,EACjB,WAAW,QACP,oCACA,mCACJ;wBACF,SAAS;;4BAER;0CACD,6LAAC,qNAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKhC;MAxDgB","debugId":null}},
    {"offset": {"line": 609, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/assets/SVGs/Artwork.svg.mjs%20%28structured%20image%20object%29"],"sourcesContent":["import src from \"IMAGE\";\nexport default { src, width: 25, height: 22, blurDataURL: null, blurWidth: 0, blurHeight: 0 }\n"],"names":[],"mappings":";;;AAAA;;uCACe;IAAE,KAAA,gIAAA,CAAA,UAAG;IAAE,OAAO;IAAI,QAAQ;IAAI,aAAa;IAAM,WAAW;IAAG,YAAY;AAAE","debugId":null}},
    {"offset": {"line": 631, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/cards/StatsCard.tsx"],"sourcesContent":["import Image from \"next/image\";\r\nimport img from \"../../assets/SVGs/Artwork.svg\"\r\ninterface StatsCardProps {\r\n  value: string;\r\n  label: string;\r\n  color: string;\r\n  image?: string;\r\n}\r\nconst Card = ({\r\n  children,\r\n  className = \"\",\r\n}: {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  image?: string;\r\n}) => {\r\n  return <div className={`rounded-lg shadow-sm ${className}`}>{children}</div>;\r\n};\r\nexport function StatsCard({\r\n  value,\r\n  label,\r\n  color,\r\n}: //  image\r\nStatsCardProps) {\r\n  return (\r\n    <Card className=\"bg-[#2b2b2b] border-none p-4\">\r\n      <div className=\"flex items-center gap-3\">\r\n        <div className={`p-2 rounded-full ${color}`}>\r\n          {/* <Circle className=\"w-5 h-5 text-white\" /> */}\r\n          <Image\r\n            alt=\"image\"\r\n            src={img}\r\n            className=\"w-5 h-5 text-white\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <p className=\"text-2xl font-bold text-white\">{value}</p>\r\n          <p className=\"text-sm text-gray-400\">{label}</p>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAOA,MAAM,OAAO,CAAC,EACZ,QAAQ,EACR,YAAY,EAAE,EAKf;IACC,qBAAO,6LAAC;QAAI,WAAW,CAAC,qBAAqB,EAAE,WAAW;kBAAG;;;;;;AAC/D;KATM;AAUC,SAAS,UAAU,EACxB,KAAK,EACL,KAAK,EACL,KAAK,EAEO;IACZ,qBACE,6LAAC;QAAK,WAAU;kBACd,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAW,CAAC,iBAAiB,EAAE,OAAO;8BAEzC,cAAA,6LAAC,gIAAA,CAAA,UAAK;wBACJ,KAAI;wBACJ,KAAK,iTAAA,CAAA,UAAG;wBACR,WAAU;;;;;;;;;;;8BAGd,6LAAC;;sCACC,6LAAC;4BAAE,WAAU;sCAAiC;;;;;;sCAC9C,6LAAC;4BAAE,WAAU;sCAAyB;;;;;;;;;;;;;;;;;;;;;;;AAKhD;MAxBgB","debugId":null}},
    {"offset": {"line": 722, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/loaders/CardLoader.tsx"],"sourcesContent":["const CardLoader = () => (\r\n  <div className=\"animate-pulse bg-[#1A1F2C] rounded-lg overflow-hidden shadow-sm\">\r\n    <div className=\"h-48 bg-gray-700 w-full\" />\r\n    <div className=\"p-4 space-y-4\">\r\n      <div className=\"h-4 bg-gray-600 rounded w-3/4\" />\r\n      <div className=\"h-3 bg-gray-600 rounded w-1/2\" />\r\n      <div className=\"h-3 bg-gray-600 rounded w-1/2\" />\r\n      <div className=\"h-3 bg-gray-600 rounded w-1/2\" />\r\n      <div className=\"h-3 bg-gray-600 rounded w-1/2\" />\r\n      <div className=\"h-10 bg-gray-600 rounded w-full\" />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default CardLoader"],"names":[],"mappings":";;;;;AAAA,MAAM,aAAa,kBACjB,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;;;;;0BACf,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;;;;;kCACf,6LAAC;wBAAI,WAAU;;;;;;kCACf,6LAAC;wBAAI,WAAU;;;;;;kCACf,6LAAC;wBAAI,WAAU;;;;;;kCACf,6LAAC;wBAAI,WAAU;;;;;;kCACf,6LAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;;KATf;uCAcS","debugId":null}},
    {"offset": {"line": 807, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/%28pages%29/%28user%29/user/dashboard/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useGetCurrentUser } from \"@/api/auth/useAuth\"\r\nimport { useGetMyMachines, useGetPopularProducts } from \"@/api/user/useUser\"\r\nimport { NFTCard } from \"@/app/components/cards/NFTCard\"\r\nimport { StatsCard } from \"@/app/components/cards/StatsCard\"\r\nimport CardLoader from \"@/loaders/CardLoader\"\r\n\r\nconst page = () => {\r\n  const { data: userData } = useGetCurrentUser();\r\n\r\n  const userId = userData?.id;\r\n  const { data, isLoading } = useGetPopularProducts();\r\n  const {\r\n    data: myMachinesData,\r\n    isLoading: isMachinesLoading,\r\n  } = useGetMyMachines(1);\r\n\r\n  console.log(\"my machines data: \", myMachinesData)\r\n\r\n  const statsData = [\r\n    { value: \"24K\", label: \"Current Deposit\", color: \"bg-[#7C3AED]\" },\r\n    { value: \"82K\", label: \"Current Balance\", color: \"bg-[#22C55E]\" },\r\n    { value: \"200\", label: \"Total Withdraw\", color: \"bg-[#EAB308]\" },\r\n    { value: \"89\", label: \"Total Referral Bonus\", color: \"bg-[#F97316]\" },\r\n  ]\r\n\r\n  const nftData = [\r\n    {\r\n      image: \"https://images.unsplash.com/photo-1531297484001-80022131f5a1\",\r\n      title: \"Distant Galaxy\",\r\n      price: 1000,\r\n      dailyIncome: 2,\r\n      fee: 1,\r\n      days: 10,\r\n      level: \"Lv1-Lv3\",\r\n    },\r\n    {\r\n      image: \"https://images.unsplash.com/photo-1581091226825-a6a2a5aee158\",\r\n      title: \"Distant Galaxy\",\r\n      price: 1000,\r\n      dailyIncome: 2,\r\n      fee: 1,\r\n      days: 10,\r\n      level: \"Lv1-Lv3\",\r\n    },\r\n    {\r\n      image: \"https://images.unsplash.com/photo-1526374965328-7f61d4dc18c5\",\r\n      title: \"Distant Galaxy\",\r\n      price: 1000,\r\n      dailyIncome: 2,\r\n      fee: 1,\r\n      days: 10,\r\n      level: \"Lv1-Lv3\",\r\n    },\r\n    {\r\n      image: \"https://images.unsplash.com/photo-1500673922987-e212871fec22\",\r\n      title: \"Distant Galaxy\",\r\n      price: 1000,\r\n      dailyIncome: 2,\r\n      fee: 1,\r\n      days: 10,\r\n      level: \"Lv1-Lv3\",\r\n    },\r\n  ]\r\n  return (\r\n    <div className='min-h-screen bg-black p-4 md:p-8'>\r\n      <div className='max-w-7xl mx-auto space-y-8'>\r\n        {/* Stats Grid */}\r\n        <div className='grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4'>\r\n          {statsData.map((stat, index) => (\r\n            <StatsCard\r\n              key={index}\r\n              value={stat.value}\r\n              label={stat.label}\r\n              color={stat.color}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        {/* Popular Machines */}\r\n        <div>\r\n          <h2 className='text-2xl font-bold text-white mb-4'>\r\n            Popular Machines\r\n          </h2>\r\n          <div className='grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4'>\r\n            {isLoading\r\n              ? Array.from({ length: 4 }).map((_, idx) => (\r\n                  <CardLoader key={idx} />\r\n                ))\r\n              : data?.map((nft: any, index: number) => (\r\n                  <NFTCard\r\n                    key={index}\r\n                    image={nft.image}\r\n                    title={nft.title}\r\n                    price={+nft.price}\r\n                    dailyIncome={+nft.dailyIncome}\r\n                    fee={+nft.fee}\r\n                    days={nft.rentalDays}\r\n                    level='Lv1-Lv3'\r\n                    action='Buy'\r\n                  />\r\n                ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* My NFTs */}\r\n        <div>\r\n          <h2 className='text-2xl font-bold text-white mb-4'>My NFTS</h2>\r\n          <div className='grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4'>\r\n            {nftData.map((nft, index) => (\r\n              <NFTCard key={index} {...nft} action='Sell' />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default page\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAQA,MAAM,OAAO;;IACX,MAAM,EAAE,MAAM,QAAQ,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,oBAAiB,AAAD;IAE3C,MAAM,SAAS,UAAU;IACzB,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,wBAAqB,AAAD;IAChD,MAAM,EACJ,MAAM,cAAc,EACpB,WAAW,iBAAiB,EAC7B,GAAG,CAAA,GAAA,gIAAA,CAAA,mBAAgB,AAAD,EAAE;IAErB,QAAQ,GAAG,CAAC,sBAAsB;IAElC,MAAM,YAAY;QAChB;YAAE,OAAO;YAAO,OAAO;YAAmB,OAAO;QAAe;QAChE;YAAE,OAAO;YAAO,OAAO;YAAmB,OAAO;QAAe;QAChE;YAAE,OAAO;YAAO,OAAO;YAAkB,OAAO;QAAe;QAC/D;YAAE,OAAO;YAAM,OAAO;YAAwB,OAAO;QAAe;KACrE;IAED,MAAM,UAAU;QACd;YACE,OAAO;YACP,OAAO;YACP,OAAO;YACP,aAAa;YACb,KAAK;YACL,MAAM;YACN,OAAO;QACT;QACA;YACE,OAAO;YACP,OAAO;YACP,OAAO;YACP,aAAa;YACb,KAAK;YACL,MAAM;YACN,OAAO;QACT;QACA;YACE,OAAO;YACP,OAAO;YACP,OAAO;YACP,aAAa;YACb,KAAK;YACL,MAAM;YACN,OAAO;QACT;QACA;YACE,OAAO;YACP,OAAO;YACP,OAAO;YACP,aAAa;YACb,KAAK;YACL,MAAM;YACN,OAAO;QACT;KACD;IACD,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;8BACZ,UAAU,GAAG,CAAC,CAAC,MAAM,sBACpB,6LAAC,kJAAA,CAAA,YAAS;4BAER,OAAO,KAAK,KAAK;4BACjB,OAAO,KAAK,KAAK;4BACjB,OAAO,KAAK,KAAK;2BAHZ;;;;;;;;;;8BASX,6LAAC;;sCACC,6LAAC;4BAAG,WAAU;sCAAqC;;;;;;sCAGnD,6LAAC;4BAAI,WAAU;sCACZ,YACG,MAAM,IAAI,CAAC;gCAAE,QAAQ;4BAAE,GAAG,GAAG,CAAC,CAAC,GAAG,oBAChC,6LAAC,gIAAA,CAAA,UAAU,MAAM;;;;4CAEnB,MAAM,IAAI,CAAC,KAAU,sBACnB,6LAAC,gJAAA,CAAA,UAAO;oCAEN,OAAO,IAAI,KAAK;oCAChB,OAAO,IAAI,KAAK;oCAChB,OAAO,CAAC,IAAI,KAAK;oCACjB,aAAa,CAAC,IAAI,WAAW;oCAC7B,KAAK,CAAC,IAAI,GAAG;oCACb,MAAM,IAAI,UAAU;oCACpB,OAAM;oCACN,QAAO;mCARF;;;;;;;;;;;;;;;;8BAejB,6LAAC;;sCACC,6LAAC;4BAAG,WAAU;sCAAqC;;;;;;sCACnD,6LAAC;4BAAI,WAAU;sCACZ,QAAQ,GAAG,CAAC,CAAC,KAAK,sBACjB,6LAAC,gJAAA,CAAA,UAAO;oCAAc,GAAG,GAAG;oCAAE,QAAO;mCAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO5B;GA9GM;;QACuB,gIAAA,CAAA,oBAAiB;QAGhB,gIAAA,CAAA,wBAAqB;QAI7C,gIAAA,CAAA,mBAAgB;;;uCAwGP","debugId":null}}]
}