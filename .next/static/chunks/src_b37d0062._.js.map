{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/modals/Modal.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport MUIModal from '@mui/material/Modal';\r\nimport { SxProps, Theme } from '@mui/material/styles';\r\n\r\nconst style: SxProps<Theme> = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: \"90%\",\r\n  maxWidth: 450,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\ninterface ModalProps {\r\n  open: boolean;\r\n  setOpen: (open: boolean) => void;\r\n  children?: React.ReactNode;\r\n  boxStyle?: SxProps<Theme>;\r\n}\r\n\r\nexport default function Modal({ open, setOpen, children, boxStyle }: ModalProps) {\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <MUIModal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n      slotProps={{\r\n        backdrop: {\r\n          sx: {\r\n            backdropFilter: 'blur(4px)',\r\n            backgroundColor: 'rgba(0,0,0,0.3)',\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Box sx={{ ...(style as object), ...(boxStyle as object) }}>\r\n        {children}\r\n      </Box>\r\n    </MUIModal>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAGA,MAAM,QAAwB;IAC5B,UAAU;IACV,KAAK;IACL,MAAM;IACN,WAAW;IACX,OAAO;IACP,UAAU;IACV,SAAS;IACT,QAAQ;IACR,WAAW;IACX,GAAG;AACL;AASe,SAAS,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAc;IAC7E,MAAM,cAAc,IAAM,QAAQ;IAElC,qBACE,6LAAC,6JAAA,CAAA,UAAQ;QACP,MAAM;QACN,SAAS;QACT,mBAAgB;QAChB,oBAAiB;QACjB,WAAW;YACT,UAAU;gBACR,IAAI;oBACF,gBAAgB;oBAChB,iBAAiB;gBACnB;YACF;QACF;kBAEA,cAAA,6LAAC,yJAAA,CAAA,UAAG;YAAC,IAAI;gBAAE,GAAI,KAAK;gBAAa,GAAI,QAAQ;YAAY;sBACtD;;;;;;;;;;;AAIT;KAvBwB","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/ui/Inputs/FormInput.tsx"],"sourcesContent":["// import React from \"react\";\r\n// import { Controller, Control, FieldErrors } from \"react-hook-form\";\r\n// import { TextField } from \"@mui/material\";\r\n\r\n// interface FormInputProps {\r\n//   name: string;\r\n//   control: Control<any>;\r\n//   label: string;\r\n//   type?: string;\r\n//   errors?: FieldErrors;\r\n//   multiline?: boolean;\r\n//   rows?: number;\r\n// }\r\n\r\n// const FormInput: React.FC<FormInputProps> = ({\r\n//   name,\r\n//   control,\r\n//   label,\r\n//   type = \"text\",\r\n//   errors,\r\n//   multiline = false,\r\n//   rows = 4,\r\n// }) => {\r\n//   return (\r\n//     <Controller\r\n//       name={name}\r\n//       control={control}\r\n//       render={({ field }) => (\r\n//         <TextField\r\n//           {...field}\r\n//           type={type}\r\n//           label={label}\r\n//           variant=\"outlined\"\r\n//           fullWidth\r\n//           margin=\"normal\"\r\n//           multiline={multiline}\r\n//           rows={multiline ? rows : undefined}\r\n//           error={!!errors?.[name]}\r\n//           helperText={errors?.[name]?.message as string}\r\n//           InputLabelProps={{ style: { color: \"#aaa\" } }}\r\n//           InputProps={{\r\n//             style: { color: \"#fff\" },\r\n//           }}\r\n//           sx={{\r\n//             backgroundColor: \"#262626\",\r\n//             // px: 2,\r\n//             // py: 1,\r\n//             borderRadius: \"6px\",\r\n//             \"& .MuiOutlinedInput-root\": {\r\n//               \"& fieldset\": {\r\n//                 borderColor: \"#444\",\r\n//               },\r\n//               \"&:hover fieldset\": {\r\n//                 borderColor: \"#666\",\r\n//               },\r\n//               \"&.Mui-focused fieldset\": {\r\n//                 borderColor: \"#888\",\r\n//               },\r\n//             },\r\n//             \"& .MuiInputBase-root\": {\r\n//               color: \"#fff\",\r\n//             },\r\n//           }}\r\n//         />\r\n//       )}\r\n//     />\r\n//   );\r\n// };\r\n\r\n// export default FormInput;\r\nimport React, { useState } from \"react\";\r\nimport { Controller, Control, FieldErrors } from \"react-hook-form\";\r\nimport { TextField, IconButton, InputAdornment } from \"@mui/material\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\n\r\ninterface FormInputProps {\r\n  name: string;\r\n  control: Control<any>;\r\n  label: string;\r\n  type?: string;\r\n  errors?: FieldErrors;\r\n  multiline?: boolean;\r\n  rows?: number;\r\n  rules?: any;\r\n}\r\n\r\nconst FormInput: React.FC<FormInputProps> = ({\r\n  name,\r\n  control,\r\n  label,\r\n  type = \"text\",\r\n  errors,\r\n  multiline = false,\r\n  rows = 4,\r\n  rules,\r\n}) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const isPassword = type === \"password\";\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      rules={rules}\r\n      name={name}\r\n      control={control}\r\n      render={({ field }) => (\r\n        <TextField\r\n          {...field}\r\n          type={isPassword && !showPassword ? \"password\" : \"text\"}\r\n          label={label}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          multiline={multiline}\r\n          rows={multiline ? rows : undefined}\r\n          error={!!errors?.[name]}\r\n          helperText={errors?.[name]?.message as string}\r\n          InputLabelProps={{ style: { color: \"#aaa\" } }}\r\n          InputProps={{\r\n            style: { color: \"#fff\" },\r\n            endAdornment: isPassword && (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={togglePasswordVisibility}\r\n                  edge=\"end\"\r\n                  sx={{ color: \"#aaa\" }}\r\n                >\r\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          sx={{\r\n            backgroundColor: \"#262626\",\r\n            borderRadius: \"6px\",\r\n            \"& .MuiOutlinedInput-root\": {\r\n              \"& fieldset\": {\r\n                borderColor: \"#444\",\r\n              },\r\n              \"&:hover fieldset\": {\r\n                borderColor: \"#666\",\r\n              },\r\n              \"&.Mui-focused fieldset\": {\r\n                borderColor: \"#888\",\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n"],"names":[],"mappings":"AAAA,6BAA6B;AAC7B,sEAAsE;AACtE,6CAA6C;AAE7C,6BAA6B;AAC7B,kBAAkB;AAClB,2BAA2B;AAC3B,mBAAmB;AACnB,mBAAmB;AACnB,0BAA0B;AAC1B,yBAAyB;AACzB,mBAAmB;AACnB,IAAI;AAEJ,iDAAiD;AACjD,UAAU;AACV,aAAa;AACb,WAAW;AACX,mBAAmB;AACnB,YAAY;AACZ,uBAAuB;AACvB,cAAc;AACd,UAAU;AACV,aAAa;AACb,kBAAkB;AAClB,oBAAoB;AACpB,0BAA0B;AAC1B,iCAAiC;AACjC,qBAAqB;AACrB,uBAAuB;AACvB,wBAAwB;AACxB,0BAA0B;AAC1B,+BAA+B;AAC/B,sBAAsB;AACtB,4BAA4B;AAC5B,kCAAkC;AAClC,gDAAgD;AAChD,qCAAqC;AACrC,2DAA2D;AAC3D,2DAA2D;AAC3D,0BAA0B;AAC1B,wCAAwC;AACxC,eAAe;AACf,kBAAkB;AAClB,0CAA0C;AAC1C,wBAAwB;AACxB,wBAAwB;AACxB,mCAAmC;AACnC,4CAA4C;AAC5C,gCAAgC;AAChC,uCAAuC;AACvC,mBAAmB;AACnB,sCAAsC;AACtC,uCAAuC;AACvC,mBAAmB;AACnB,4CAA4C;AAC5C,uCAAuC;AACvC,mBAAmB;AACnB,iBAAiB;AACjB,wCAAwC;AACxC,+BAA+B;AAC/B,iBAAiB;AACjB,eAAe;AACf,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AAEL,4BAA4B;;;;;AAC5B;AACA;AACA;AAAA;AAAA;AACA;AAAA;;;;;;;;AAaA,MAAM,YAAsC,CAAC,EAC3C,IAAI,EACJ,OAAO,EACP,KAAK,EACL,OAAO,MAAM,EACb,MAAM,EACN,YAAY,KAAK,EACjB,OAAO,CAAC,EACR,KAAK,EACN;;IACC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,aAAa,SAAS;IAE5B,MAAM,2BAA2B;QAC/B,gBAAgB,CAAC,OAAS,CAAC;IAC7B;IAEA,qBACE,6LAAC,iKAAA,CAAA,aAAU;QACT,OAAO;QACP,MAAM;QACN,SAAS;QACT,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,6MAAA,CAAA,YAAS;gBACP,GAAG,KAAK;gBACT,MAAM,cAAc,CAAC,eAAe,aAAa;gBACjD,OAAO;gBACP,SAAQ;gBACR,SAAS;gBACT,QAAO;gBACP,WAAW;gBACX,MAAM,YAAY,OAAO;gBACzB,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK;gBACvB,YAAY,QAAQ,CAAC,KAAK,EAAE;gBAC5B,iBAAiB;oBAAE,OAAO;wBAAE,OAAO;oBAAO;gBAAE;gBAC5C,YAAY;oBACV,OAAO;wBAAE,OAAO;oBAAO;oBACvB,cAAc,4BACZ,6LAAC,4NAAA,CAAA,iBAAc;wBAAC,UAAS;kCACvB,cAAA,6LAAC,gNAAA,CAAA,aAAU;4BACT,SAAS;4BACT,MAAK;4BACL,IAAI;gCAAE,OAAO;4BAAO;sCAEnB,6BAAe,6LAAC,qKAAA,CAAA,UAAa;;;;uDAAM,6LAAC,kKAAA,CAAA,UAAU;;;;;;;;;;;;;;;gBAIvD;gBACA,IAAI;oBACF,iBAAiB;oBACjB,cAAc;oBACd,4BAA4B;wBAC1B,cAAc;4BACZ,aAAa;wBACf;wBACA,oBAAoB;4BAClB,aAAa;wBACf;wBACA,0BAA0B;4BACxB,aAAa;wBACf;oBACF;gBACF;;;;;;;;;;;AAKV;GApEM;KAAA;uCAsES","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/%28auth%29/login/schema.ts"],"sourcesContent":["import * as yup from 'yup'\r\n\r\nexport const loginSchema = yup.object().shape({\r\n    email:yup.string().email().required(\"Email is required\"),\r\n    password:yup.string().required(\"Password is required\")\r\n})"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,cAAc,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,KAAK,CAAC;IAC1C,OAAM,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,KAAK,GAAG,QAAQ,CAAC;IACpC,UAAS,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ,CAAC;AACnC","debugId":null}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/constants/keys.ts"],"sourcesContent":["export const base_url = process.env.NEXT_PUBLIC_API_URL;\r\n"],"names":[],"mappings":";;;AAAwB;AAAjB,MAAM,WAAW,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,mBAAmB","debugId":null}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/utils/auth.ts"],"sourcesContent":["export const auth = {\r\n  logout: async () => {\r\n    // const email =   localStorage.getItem('userEmail');\r\n    // console.log(email, 'emailemail');\r\n    // const lastOnboardingDate =   localStorage.getItem('lastOnboardingDate');\r\n    localStorage.clear();\r\n    // if (lastOnboardingDate) {\r\n    //       localStorage.setItem('lastOnboardingDate', lastOnboardingDate);\r\n    // }\r\n    // if (email) {\r\n    //       localStorage.setItem('userEmail', email);\r\n    // }\r\n  },\r\n  delete: async () => {\r\n    localStorage.clear();\r\n  },\r\n  accessToken: async () => {\r\n    return localStorage.getItem(\"accessToken\");\r\n  },\r\n  refreshToken: async () => {\r\n    return localStorage.getItem(\"refreshToken\");\r\n  },\r\n  platform: async () => {\r\n    return localStorage.getItem(\"platform\");\r\n  },\r\n  setUser: async (userId: string) => {\r\n    localStorage.setItem(\"userId\", userId);\r\n  },\r\n  user: async () => {\r\n    return localStorage.getItem(\"userId\");\r\n  },\r\n  updateTokens: async (accessToken: string, refreshToken: string) => {\r\n    localStorage.setItem(\"accessToken\", accessToken);\r\n    localStorage.setItem(\"refreshToken\", refreshToken);\r\n  },\r\n};\r\n\r\nexport default auth;\r\n"],"names":[],"mappings":";;;;AAAO,MAAM,OAAO;IAClB,QAAQ;QACN,qDAAqD;QACrD,oCAAoC;QACpC,2EAA2E;QAC3E,aAAa,KAAK;IAClB,4BAA4B;IAC5B,wEAAwE;IACxE,IAAI;IACJ,eAAe;IACf,kDAAkD;IAClD,IAAI;IACN;IACA,QAAQ;QACN,aAAa,KAAK;IACpB;IACA,aAAa;QACX,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,cAAc;QACZ,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,UAAU;QACR,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,SAAS,OAAO;QACd,aAAa,OAAO,CAAC,UAAU;IACjC;IACA,MAAM;QACJ,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,cAAc,OAAO,aAAqB;QACxC,aAAa,OAAO,CAAC,eAAe;QACpC,aAAa,OAAO,CAAC,gBAAgB;IACvC;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/utils/axios.ts"],"sourcesContent":["import { base_url } from \"../constants/keys\";\r\nimport auth from \"./auth\";\r\nimport axios from \"axios\";\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: base_url,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Access-Control-Allow-Origin\": \"*\", //\r\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, PATCH, OPTIONS\",\r\n  },\r\n});\r\napiClient.interceptors.request.use(\r\n  async (config) => {\r\n    const accessToken = await auth.accessToken();\r\n    if (accessToken) {\r\n      config.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    }\r\n    if (config.data instanceof FormData) {\r\n      config.headers[\"Content-Type\"] = \"multipart/form-data\";\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    } else {\r\n      config.headers[\"Content-Type\"] = \"application/json\";\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// apiClient.interceptors.response.use(\r\n//   (response) => response,\r\n//   async (error) => {\r\n//     const originalRequest = error.config;\r\n//     if (error.response?.status === 401 && !originalRequest._retry) {\r\n//       originalRequest._retry = true;\r\n//       const refreshToken = await auth.refreshToken();\r\n\r\n//       if (refreshToken) {\r\n//         try {\r\n//           const response = await axios.post(`${baseUrl}/auth/refresh-token`, {\r\n//             refreshToken,\r\n//           });\r\n//           const { accessToken, refreshToken: newRefreshToken } =\r\n//             response.data.data;\r\n//           await auth.updateTokens(accessToken, newRefreshToken);\r\n//           originalRequest.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n//           return axios(originalRequest);\r\n//         } catch (refreshError) {\r\n//           auth.logout();\r\n//           return Promise.reject(refreshError);\r\n//         }\r\n//       } else {\r\n//         auth.logout();\r\n//       }\r\n//     }\r\n//     return Promise.reject(error);\r\n//   }\r\n// );\r\napiClient.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const queryFn = async <T>(\r\n  endpoint: string,\r\n  params?: Record<string, any>\r\n): Promise<T> => {\r\n  const response = await apiClient.get(endpoint, { params });\r\n  return response.data;\r\n};\r\n\r\nexport const mutationFn = async (\r\n  endpoint: string,\r\n  method: \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\",\r\n  body?: Record<string, any>,\r\n  headers?: Record<string, any>\r\n) => {\r\n  const response = await apiClient.request({\r\n    url: endpoint,\r\n    method,\r\n    data: body,\r\n    headers: {\r\n      ...headers,\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,MAAM,YAAY,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC7B,SAAS,kIAAA,CAAA,WAAQ;IACjB,SAAS;QACP,gBAAgB;QAChB,+BAA+B;QAC/B,gCAAgC;IAClC;AACF;AACA,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAChC,OAAO;IACL,MAAM,cAAc,MAAM,8HAAA,CAAA,UAAI,CAAC,WAAW;IAC1C,IAAI,aAAa;QACf,OAAO,OAAO,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,aAAa;QACzD,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ;IACA,IAAI,OAAO,IAAI,YAAY,UAAU;QACnC,OAAO,OAAO,CAAC,eAAe,GAAG;QACjC,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ,OAAO;QACL,OAAO,OAAO,CAAC,eAAe,GAAG;QACjC,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ;IACA,OAAO;AACT,GACA,CAAC,QAAU,QAAQ,MAAM,CAAC;AAG5B,uCAAuC;AACvC,4BAA4B;AAC5B,uBAAuB;AACvB,4CAA4C;AAC5C,uEAAuE;AACvE,uCAAuC;AACvC,wDAAwD;AAExD,4BAA4B;AAC5B,gBAAgB;AAChB,iFAAiF;AACjF,4BAA4B;AAC5B,gBAAgB;AAChB,mEAAmE;AACnE,kCAAkC;AAClC,mEAAmE;AACnE,gFAAgF;AAChF,2CAA2C;AAC3C,mCAAmC;AACnC,2BAA2B;AAC3B,iDAAiD;AACjD,YAAY;AACZ,iBAAiB;AACjB,yBAAyB;AACzB,UAAU;AACV,QAAQ;AACR,oCAAoC;AACpC,MAAM;AACN,KAAK;AACL,UAAU,YAAY,CAAC,QAAQ,CAAC,GAAG,CACjC,CAAC,WAAa,UACd,OAAO;IACL,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGK,MAAM,UAAU,OACrB,UACA;IAEA,MAAM,WAAW,MAAM,UAAU,GAAG,CAAC,UAAU;QAAE;IAAO;IACxD,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OACxB,UACA,QACA,MACA;IAEA,MAAM,WAAW,MAAM,UAAU,OAAO,CAAC;QACvC,KAAK;QACL;QACA,MAAM;QACN,SAAS;YACP,GAAG,OAAO;QACZ;IACF;IACA,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/api/authentication/index.ts"],"sourcesContent":["import { mutationFn } from \"@/app/utils/axios\";\r\nimport { ILoginBody, ISendEmailBody, ISignupBody } from \"./types\";\r\n\r\nexport const loginApi = {\r\n    mutationFn: (body: ILoginBody) => {\r\n        return mutationFn('auth/signin', 'POST', body);\r\n    },\r\n};\r\n\r\nexport const RegisterApi = {\r\n    mutationFn: (body: ISignupBody) => {\r\n        return mutationFn('auth/signup', 'POST', body);\r\n    },\r\n};\r\nexport const ConfirmEmailApi = {\r\n    mutationFn: (body: ISendEmailBody) => {\r\n        return mutationFn('auth/send-email', 'POST', body);\r\n    },\r\n};\r\n\r\n"],"names":[],"mappings":";;;;;AAAA;;AAGO,MAAM,WAAW;IACpB,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,+HAAA,CAAA,aAAU,AAAD,EAAE,eAAe,QAAQ;IAC7C;AACJ;AAEO,MAAM,cAAc;IACvB,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,+HAAA,CAAA,aAAU,AAAD,EAAE,eAAe,QAAQ;IAC7C;AACJ;AACO,MAAM,kBAAkB;IAC3B,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,+HAAA,CAAA,aAAU,AAAD,EAAE,mBAAmB,QAAQ;IACjD;AACJ","debugId":null}},
    {"offset": {"line": 462, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/%28auth%29/login/hooks/index.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { loginSchema } from \"../schema\";\r\nimport { IAddLoginFormValues } from \"../types\";\r\nimport { useMutation } from \"@tanstack/react-query\";\r\nimport { loginApi } from \"@/api/authentication\";\r\n\r\nexport default function useLogin() {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(loginSchema),\r\n    defaultValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  });\r\n  const { mutateAsync: loginUser } = useMutation({\r\n    mutationFn: loginApi.mutationFn,\r\n  });\r\n  const handleLogin: SubmitHandler<IAddLoginFormValues> = async (data) => {\r\n    try {\r\n      const response = await loginUser(data);\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return { control, handleSubmit, errors, handleLogin };\r\n}\r\n"],"names":[],"mappings":";;;AAEA;AACA;AACA;AAEA;AACA;;AAPA;;;;;;AASe,SAAS;;IACtB,MAAM,EACJ,OAAO,EACP,YAAY,EACZ,KAAK,EACL,WAAW,EAAE,MAAM,EAAE,EACtB,GAAG,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE;QACV,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE,4IAAA,CAAA,cAAW;QACjC,eAAe;YACb,OAAO;YACP,UAAU;QACZ;IACF;IACA,MAAM,EAAE,aAAa,SAAS,EAAE,GAAG,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE;QAC7C,YAAY,wIAAA,CAAA,WAAQ,CAAC,UAAU;IACjC;IACA,MAAM,cAAkD,OAAO;QAC7D,IAAI;YACF,MAAM,WAAW,MAAM,UAAU;YACjC,QAAQ,GAAG,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,GAAG,CAAC;QACd;IACF;IACA,OAAO;QAAE;QAAS;QAAc;QAAQ;IAAY;AACtD;GAzBwB;;QAMlB,iKAAA,CAAA,UAAO;QAOwB,iLAAA,CAAA,cAAW","debugId":null}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/PhoneInput.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Input as BaseInput } from '@mui/base/Input';\r\nimport { Box, styled } from '@mui/system';\r\n\r\nfunction OTP({\r\n  separator,\r\n  length,\r\n  value,\r\n  onChange,\r\n}: {\r\n  separator: React.ReactNode;\r\n  length: number;\r\n  value: string;\r\n  onChange: React.Dispatch<React.SetStateAction<string>>;\r\n}) {\r\n  const inputRefs = React.useRef<HTMLInputElement[]>(new Array(length).fill(null));\r\n\r\n  const focusInput = (targetIndex: number) => {\r\n    const targetInput = inputRefs.current[targetIndex];\r\n    targetInput.focus();\r\n  };\r\n\r\n  const selectInput = (targetIndex: number) => {\r\n    const targetInput = inputRefs.current[targetIndex];\r\n    targetInput.select();\r\n  };\r\n\r\n  const handleKeyDown = (\r\n    event: React.KeyboardEvent<HTMLInputElement>,\r\n    currentIndex: number,\r\n  ) => {\r\n    switch (event.key) {\r\n      case 'ArrowUp':\r\n      case 'ArrowDown':\r\n      case ' ':\r\n        event.preventDefault();\r\n        break;\r\n      case 'ArrowLeft':\r\n        event.preventDefault();\r\n        if (currentIndex > 0) {\r\n          focusInput(currentIndex - 1);\r\n          selectInput(currentIndex - 1);\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        event.preventDefault();\r\n        if (currentIndex < length - 1) {\r\n          focusInput(currentIndex + 1);\r\n          selectInput(currentIndex + 1);\r\n        }\r\n        break;\r\n      case 'Delete':\r\n        event.preventDefault();\r\n        onChange((prevOtp) => {\r\n          const otp =\r\n            prevOtp.slice(0, currentIndex) + prevOtp.slice(currentIndex + 1);\r\n          return otp;\r\n        });\r\n\r\n        break;\r\n      case 'Backspace':\r\n        event.preventDefault();\r\n        if (currentIndex > 0) {\r\n          focusInput(currentIndex - 1);\r\n          selectInput(currentIndex - 1);\r\n        }\r\n\r\n        onChange((prevOtp) => {\r\n          const otp =\r\n            prevOtp.slice(0, currentIndex) + prevOtp.slice(currentIndex + 1);\r\n          return otp;\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    currentIndex: number,\r\n  ) => {\r\n    const currentValue = event.target.value;\r\n    let indexToEnter = 0;\r\n\r\n    while (indexToEnter <= currentIndex) {\r\n      if (inputRefs.current[indexToEnter].value && indexToEnter < currentIndex) {\r\n        indexToEnter += 1;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    onChange((prev) => {\r\n      const otpArray = prev.split('');\r\n      const lastValue = currentValue[currentValue.length - 1];\r\n      otpArray[indexToEnter] = lastValue;\r\n      return otpArray.join('');\r\n    });\r\n    if (currentValue !== '') {\r\n      if (currentIndex < length - 1) {\r\n        focusInput(currentIndex + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<HTMLInputElement, MouseEvent>,\r\n    currentIndex: number,\r\n  ) => {\r\n    selectInput(currentIndex);\r\n  };\r\n\r\n  const handlePaste = (\r\n    event: React.ClipboardEvent<HTMLInputElement>,\r\n    currentIndex: number,\r\n  ) => {\r\n    event.preventDefault();\r\n    const clipboardData = event.clipboardData;\r\n\r\n    // Check if there is text data in the clipboard\r\n    if (clipboardData.types.includes('text/plain')) {\r\n      let pastedText = clipboardData.getData('text/plain');\r\n      pastedText = pastedText.substring(0, length).trim();\r\n      let indexToEnter = 0;\r\n\r\n      while (indexToEnter <= currentIndex) {\r\n        if (inputRefs.current[indexToEnter].value && indexToEnter < currentIndex) {\r\n          indexToEnter += 1;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      const otpArray = value.split('');\r\n\r\n      for (let i = indexToEnter; i < length; i += 1) {\r\n        const lastValue = pastedText[i - indexToEnter] ?? ' ';\r\n        otpArray[i] = lastValue;\r\n      }\r\n\r\n      onChange(otpArray.join(''));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', gap: 1, alignItems: 'center' }}>\r\n      {new Array(length).fill(null).map((_, index) => (\r\n        <React.Fragment key={index}>\r\n          <BaseInput\r\n            slots={{\r\n              input: InputElement,\r\n            }}\r\n            aria-label={`Digit ${index + 1} of OTP`}\r\n            slotProps={{\r\n              input: {\r\n                ref: (ele) => {\r\n                  inputRefs.current[index] = ele!;\r\n                },\r\n                onKeyDown: (event) => handleKeyDown(event, index),\r\n                onChange: (event) => handleChange(event, index),\r\n                onClick: (event) => handleClick(event, index),\r\n                onPaste: (event) => handlePaste(event, index),\r\n                value: value[index] ?? '',\r\n              },\r\n            }}\r\n          />\r\n          {index === length - 1 ? null : separator}\r\n        </React.Fragment>\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function OTPInput() {\r\n  const [otp, setOtp] = React.useState('');\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n      <OTP separator={<span>-</span>} value={otp} onChange={setOtp} length={5} />\r\n      <span>Entered value: {otp}</span>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst blue = {\r\n  100: '#DAECFF',\r\n  200: '#80BFFF',\r\n  400: '#3399FF',\r\n  500: '#007FFF',\r\n  600: '#0072E5',\r\n  700: '#0059B2',\r\n};\r\n\r\nconst grey = {\r\n  50: '#F3F6F9',\r\n  100: '#E5EAF2',\r\n  200: '#DAE2ED',\r\n  300: '#C7D0DD',\r\n  400: '#B0B8C4',\r\n  500: '#9DA8B7',\r\n  600: '#6B7A90',\r\n  700: '#434D5B',\r\n  800: '#303740',\r\n  900: '#1C2025',\r\n};\r\n\r\nconst InputElement = styled('input')(\r\n  ({ theme }) => `\r\n  width: 40px;\r\n  font-family: 'IBM Plex Sans', sans-serif;\r\n  font-size: 0.875rem;\r\n  font-weight: 400;\r\n  line-height: 1.5;\r\n  padding: 8px 0;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};\r\n  background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};\r\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};\r\n  box-shadow: 0 2px 4px ${\r\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\r\n  };\r\n\r\n  &:hover {\r\n    border-color: ${blue[400]};\r\n  }\r\n\r\n  &:focus {\r\n    border-color: ${blue[400]};\r\n    box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[600] : blue[200]};\r\n  }\r\n\r\n  /* firefox */\r\n  &:focus-visible {\r\n    outline: 0;\r\n  }\r\n`,\r\n);"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 788, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/Login.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { Button, Checkbox, TextField } from \"@mui/material\"\r\nimport { Divider } from \"antd\"\r\nimport Link from \"next/link\"\r\nimport { useState } from \"react\"\r\nimport Modal from \"./modals/Modal\"\r\nimport FormInput from \"./ui/Inputs/FormInput\"\r\nimport useLogin from \"../(auth)/login/hooks\"\r\nimport OTPInput from \"./PhoneInput\"\r\n\r\nconst Login = () => {\r\n  const [IsForgotPasswordModalOpen, setIsForgotPasswordModalOpen] =\r\n    useState<boolean>(false)\r\n  const { control, handleSubmit, errors, handleLogin } = useLogin()\r\n\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n  })\r\n\r\n  const handleChange = (e: any) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value })\r\n  }\r\n  return (\r\n    <div className='w-full max-w-md'>\r\n      <div className='text-[#737373] font-medium text-2xl'>LOGO</div>\r\n      <div className='text-3xl mt-4'>Welcome to NFT!</div>\r\n      <div className='text-[#c0c0c0] text-sm mt-2'>\r\n        Please sign in to your account and start the adventure\r\n      </div>\r\n\r\n      <div className='space-y-4'>\r\n        <div className='space-y-1'>\r\n          <FormInput\r\n            name='email'\r\n            control={control}\r\n            label='Email or Username'\r\n            errors={errors}\r\n            rules={{ required: \"Email is required\" }}\r\n          />\r\n          <FormInput\r\n            name='password'\r\n            control={control}\r\n            label='Password'\r\n            type='password'\r\n            errors={errors}\r\n            rules={{ required: \"Password is required\" }}\r\n          />\r\n          <Button\r\n            variant='text'\r\n            className='block text-[#7367F0]'\r\n            onClick={() => setIsForgotPasswordModalOpen(true)}\r\n          >\r\n            Forgot Password?\r\n          </Button>\r\n        </div>\r\n\r\n        <div className='flex items-center gap-2'>\r\n          <Checkbox className='!p-0' />{\" \"}\r\n          <span className='text-muted'>Remember Me</span>\r\n        </div>\r\n\r\n        <Button\r\n          variant='contained'\r\n          fullWidth\r\n          onClick={handleSubmit(handleLogin)}\r\n        >\r\n          Sign in\r\n        </Button>\r\n\r\n        <div className='text-sm text-center block mt-2'>\r\n          New on our platform?{\" \"}\r\n          <Link className='text-primary' href='/register'>\r\n            Create an account\r\n          </Link>\r\n        </div>\r\n\r\n        <Divider>Or</Divider>\r\n\r\n        <div className='flex items-center justify-center gap-2 mt-4'>\r\n          <div className='h-[38px] w-[38px] bg-[#1d2b48] grid place-items-center rounded'>\r\n            <img src='/icons/fb.png' alt='' />\r\n          </div>\r\n          <div className='h-[38px] w-[38px] bg-[#0d3148] grid place-items-center rounded'>\r\n            <img src='/icons/twitter.png' alt='' />\r\n          </div>\r\n          <div className='h-[38px] w-[38px] bg-[#3f1917] grid place-items-center rounded'>\r\n            <img src='/icons/google.png' alt='' />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* forget pass modal */}\r\n      {/* <Modal\r\n        open={IsForgotPasswordModalOpen}\r\n        setOpen={setIsForgotPasswordModalOpen}\r\n      >\r\n        <div className=\"space-y-4\">\r\n        <div className='text-[#737373] text-2xl text-center'>LOGO</div>\r\n        <div className='font-medium text-xl'>Forgot Password? 🔒</div>\r\n        <div className='text-[#737373] text-sm'>\r\n          Enter your email, and we'll send you OTP to reset your password\r\n        </div>\r\n\r\n        <TextField\r\n          name='email'\r\n          label='Email'\r\n          variant='outlined'\r\n          fullWidth\r\n          value={form.email}\r\n          onChange={handleChange}\r\n          margin='normal'\r\n          InputLabelProps={{ style: { color: \"#aaa\" } }}\r\n          InputProps={{ style: { color: \"#fff\" } }}\r\n        />\r\n\r\n        <Button variant=\"contained\" fullWidth>Send Reset Link</Button>\r\n        <Button variant=\"text\" fullWidth>Back to log in</Button>\r\n        </div>\r\n      </Modal> */}\r\n      {/* tfv modal */}\r\n      <Modal\r\n        open={IsForgotPasswordModalOpen}\r\n        setOpen={setIsForgotPasswordModalOpen}\r\n      >\r\n        <div className=\"space-y-4\">\r\n        <div className='text-[#737373] text-2xl text-center'>LOGO</div>\r\n        <div className='font-medium text-xl'>Two-Step Verification 💬</div>\r\n        <div className='text-[#737373] text-sm'>\r\n        We sent a verification code to your Email. Enter the code from the eamil in the field below.\r\n        <div>*****d20@gmail.com</div>\r\n        </div>\r\n\r\n        <OTPInput />\r\n\r\n        <Button variant=\"contained\" fullWidth>Send Reset Link</Button>\r\n        <Button variant=\"text\" fullWidth>Back to log in</Button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AATA;;;;;;;;;AAWA,MAAM,QAAQ;;IACZ,MAAM,CAAC,2BAA2B,6BAA6B,GAC7D,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IACpB,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,oJAAA,CAAA,UAAQ,AAAD;IAE9D,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,OAAO;IACT;IAEA,MAAM,eAAe,CAAC;QACpB,QAAQ;YAAE,GAAG,IAAI;YAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QAAC;IACrD;IACA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BAAsC;;;;;;0BACrD,6LAAC;gBAAI,WAAU;0BAAgB;;;;;;0BAC/B,6LAAC;gBAAI,WAAU;0BAA8B;;;;;;0BAI7C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,yJAAA,CAAA,UAAS;gCACR,MAAK;gCACL,SAAS;gCACT,OAAM;gCACN,QAAQ;gCACR,OAAO;oCAAE,UAAU;gCAAoB;;;;;;0CAEzC,6LAAC,yJAAA,CAAA,UAAS;gCACR,MAAK;gCACL,SAAS;gCACT,OAAM;gCACN,MAAK;gCACL,QAAQ;gCACR,OAAO;oCAAE,UAAU;gCAAuB;;;;;;0CAE5C,6LAAC,oMAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,WAAU;gCACV,SAAS,IAAM,6BAA6B;0CAC7C;;;;;;;;;;;;kCAKH,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,0MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;4BAAU;0CAC9B,6LAAC;gCAAK,WAAU;0CAAa;;;;;;;;;;;;kCAG/B,6LAAC,oMAAA,CAAA,SAAM;wBACL,SAAQ;wBACR,SAAS;wBACT,SAAS,aAAa;kCACvB;;;;;;kCAID,6LAAC;wBAAI,WAAU;;4BAAiC;4BACzB;0CACrB,6LAAC,+JAAA,CAAA,UAAI;gCAAC,WAAU;gCAAe,MAAK;0CAAY;;;;;;;;;;;;kCAKlD,6LAAC,uLAAA,CAAA,UAAO;kCAAC;;;;;;kCAET,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,KAAI;oCAAgB,KAAI;;;;;;;;;;;0CAE/B,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,KAAI;oCAAqB,KAAI;;;;;;;;;;;0CAEpC,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,KAAI;oCAAoB,KAAI;;;;;;;;;;;;;;;;;;;;;;;0BAiCvC,6LAAC,+IAAA,CAAA,UAAK;gBACJ,MAAM;gBACN,SAAS;0BAET,cAAA,6LAAC;oBAAI,WAAU;;sCACf,6LAAC;4BAAI,WAAU;sCAAsC;;;;;;sCACrD,6LAAC;4BAAI,WAAU;sCAAsB;;;;;;sCACrC,6LAAC;4BAAI,WAAU;;gCAAyB;8CAExC,6LAAC;8CAAI;;;;;;;;;;;;sCAGL,6LAAC,0IAAA,CAAA,UAAQ;;;;;sCAET,6LAAC,oMAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAY,SAAS;sCAAC;;;;;;sCACtC,6LAAC,oMAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAO,SAAS;sCAAC;;;;;;;;;;;;;;;;;;;;;;;AAKzC;GAjIM;;QAGmD,oJAAA,CAAA,UAAQ;;;KAH3D;uCAmIS","debugId":null}}]
}