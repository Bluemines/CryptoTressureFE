{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/Tabs.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction } from 'react'\r\n\r\nconst Tabs = ({ tabs, activeTab, setActiveTab }: { tabs: string[], activeTab: string, setActiveTab: Dispatch<SetStateAction<string>> }) => {\r\n  return (\r\n    <div className='flex'>\r\n      {tabs.map((item, index) => (\r\n        <button key={index} className={`py-2 px-4 cursor-pointer hover:text-[#7367F0] ${activeTab === item ? 'border-b border-b-[#7367F0] text-[#7367F0]' : 'text-gray-400'}`} onClick={() => setActiveTab(item)}>\r\n          {item}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tabs"],"names":[],"mappings":";;;;;AAEA,MAAM,OAAO,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAyF;IACpI,qBACE,6LAAC;QAAI,WAAU;kBACZ,KAAK,GAAG,CAAC,CAAC,MAAM,sBACf,6LAAC;gBAAmB,WAAW,CAAC,8CAA8C,EAAE,cAAc,OAAO,+CAA+C,iBAAiB;gBAAE,SAAS,IAAM,aAAa;0BAChM;eADU;;;;;;;;;;AAMrB;KAVM;uCAYS","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/ui/PrimaryButton.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { Button, ButtonProps } from \"antd\"\r\n\r\ninterface PrimaryButtonProps extends ButtonProps {\r\n  bgColor?: string\r\n  textColor?: string\r\n  children: React.ReactNode\r\n  className?: string\r\n  [key: string]: any\r\n}\r\n\r\nconst isDark = (hex: string): boolean => {\r\n  const color = hex.startsWith('#') ? hex.slice(1) : hex;\r\n  const r = parseInt(color.substring(0, 2), 16);\r\n  const g = parseInt(color.substring(2, 4), 16);\r\n  const b = parseInt(color.substring(4, 6), 16);\r\n  // Perceived brightness\r\n  return (r * 299 + g * 587 + b * 114) / 1000 < 128;\r\n};\r\n\r\nconst getHoverColor = (bgColor: string): string => {\r\n  return isDark(bgColor) ? adjustColor(bgColor, 20) : adjustColor(bgColor, -20);\r\n};\r\n\r\nfunction adjustColor(hex: string, amount: number): string {\r\n  let color = hex.startsWith('#') ? hex.slice(1) : hex;\r\n\r\n  // Expand shorthand hex (e.g., #abc -> #aabbcc)\r\n  if (color.length === 3) {\r\n    color = color\r\n      .split('')\r\n      .map((c) => c + c)\r\n      .join('');\r\n  }\r\n\r\n  const num = parseInt(color, 16);\r\n\r\n  let r = (num >> 16) + amount;\r\n  let g = ((num >> 8) & 0x00ff) + amount;\r\n  let b = (num & 0x0000ff) + amount;\r\n\r\n  r = Math.min(255, Math.max(0, r));\r\n  g = Math.min(255, Math.max(0, g));\r\n  b = Math.min(255, Math.max(0, b));\r\n\r\n  return `#${(r << 16 | g << 8 | b).toString(16).padStart(6, '0')}`;\r\n}\r\n\r\nconst PrimaryButton: React.FC<PrimaryButtonProps> = ({\r\n  bgColor = \"#7367F0\",\r\n  textColor = \"#FFFFFF\",\r\n  children,\r\n  className = \"\",\r\n  ...rest\r\n}) => {\r\n\r\n  return (\r\n    <Button\r\n      className={`!border-none !font-medium transition-colors duration-200 ${className}`}\r\n      style={{\r\n        backgroundColor: bgColor,\r\n        color: textColor,\r\n      }}\r\n      onMouseEnter={(e) => {\r\n        ;(e.currentTarget as HTMLElement).style.backgroundColor =\r\n          getHoverColor(bgColor)\r\n      }}\r\n      onMouseLeave={(e) => {\r\n        ;(e.currentTarget as HTMLElement).style.backgroundColor = bgColor\r\n      }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default PrimaryButton\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAYA,MAAM,SAAS,CAAC;IACd,MAAM,QAAQ,IAAI,UAAU,CAAC,OAAO,IAAI,KAAK,CAAC,KAAK;IACnD,MAAM,IAAI,SAAS,MAAM,SAAS,CAAC,GAAG,IAAI;IAC1C,MAAM,IAAI,SAAS,MAAM,SAAS,CAAC,GAAG,IAAI;IAC1C,MAAM,IAAI,SAAS,MAAM,SAAS,CAAC,GAAG,IAAI;IAC1C,uBAAuB;IACvB,OAAO,CAAC,IAAI,MAAM,IAAI,MAAM,IAAI,GAAG,IAAI,OAAO;AAChD;AAEA,MAAM,gBAAgB,CAAC;IACrB,OAAO,OAAO,WAAW,YAAY,SAAS,MAAM,YAAY,SAAS,CAAC;AAC5E;AAEA,SAAS,YAAY,GAAW,EAAE,MAAc;IAC9C,IAAI,QAAQ,IAAI,UAAU,CAAC,OAAO,IAAI,KAAK,CAAC,KAAK;IAEjD,+CAA+C;IAC/C,IAAI,MAAM,MAAM,KAAK,GAAG;QACtB,QAAQ,MACL,KAAK,CAAC,IACN,GAAG,CAAC,CAAC,IAAM,IAAI,GACf,IAAI,CAAC;IACV;IAEA,MAAM,MAAM,SAAS,OAAO;IAE5B,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI;IACtB,IAAI,IAAI,CAAC,AAAC,OAAO,IAAK,MAAM,IAAI;IAChC,IAAI,IAAI,CAAC,MAAM,QAAQ,IAAI;IAE3B,IAAI,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG;IAC9B,IAAI,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG;IAC9B,IAAI,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG;IAE9B,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,KAAK,KAAK,IAAI,CAAC,EAAE,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG,MAAM;AACnE;AAEA,MAAM,gBAA8C,CAAC,EACnD,UAAU,SAAS,EACnB,YAAY,SAAS,EACrB,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,MACJ;IAEC,qBACE,6LAAC,qMAAA,CAAA,SAAM;QACL,WAAW,CAAC,yDAAyD,EAAE,WAAW;QAClF,OAAO;YACL,iBAAiB;YACjB,OAAO;QACT;QACA,cAAc,CAAC;;YACX,EAAE,aAAa,CAAiB,KAAK,CAAC,eAAe,GACrD,cAAc;QAClB;QACA,cAAc,CAAC;;YACX,EAAE,aAAa,CAAiB,KAAK,CAAC,eAAe,GAAG;QAC5D;QACC,GAAG,IAAI;kBAEP;;;;;;AAGP;KA3BM;uCA6BS","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/ui/StatsCard.tsx"],"sourcesContent":["const StatsCard = ({ value, label, bgColor }: { value: string, label: string, bgColor: string }) => (\r\n  <div className=\"rounded-xl p-4 bg-[#2B2B2B] flex-1\">\r\n    <div className=\"flex gap-4\">\r\n      <div className={`w-[55px] h-[55px] rounded-full ${bgColor}`}></div>\r\n      <div>\r\n        <div className=\"text-lg font-semibold\">{value}</div>\r\n        <div className=\"text-sm text-[#9d9d9d]\">{label}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default StatsCard"],"names":[],"mappings":";;;;;AAAA,MAAM,YAAY,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAqD,iBAC7F,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAW,CAAC,+BAA+B,EAAE,SAAS;;;;;;8BAC3D,6LAAC;;sCACC,6LAAC;4BAAI,WAAU;sCAAyB;;;;;;sCACxC,6LAAC;4BAAI,WAAU;sCAA0B;;;;;;;;;;;;;;;;;;;;;;;KAN3C;uCAYS","debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/DataTable/styles.ts"],"sourcesContent":["// components/styles.ts\r\n\r\nimport { TableStyles } from 'react-data-table-component';\r\n\r\nconst black: TableStyles = {\r\n  headRow: {\r\n    style: {\r\n      backgroundColor: '#080a0c',\r\n      color: '#ffffff',\r\n      textTransform: 'uppercase' as const,\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      color: '#858584',\r\n      backgroundColor: '#080a0c',\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      backgroundColor: '#080a0c',\r\n      color: '#e5e7eb',\r\n      borderTop: '1px solid #374151',\r\n    },\r\n  },\r\n};\r\n\r\nconst gray: TableStyles = {\r\n  headRow: {\r\n    style: {\r\n      backgroundColor: '#232323',\r\n      color: '#ffffff',\r\n      textTransform: 'capitalize' as const,\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      color: '#9ca3af',\r\n      backgroundColor: '#1b1b1b',\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      backgroundColor: '#232323',\r\n      color: '#a9a9a9',\r\n      borderTop: '1px solid #374151',\r\n    },\r\n  },\r\n};\r\n\r\nconst styles: Record<'black' | 'gray', TableStyles> = { black, gray };\r\n\r\nexport default styles;\r\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;AAIvB,MAAM,QAAqB;IACzB,SAAS;QACP,OAAO;YACL,iBAAiB;YACjB,OAAO;YACP,eAAe;QACjB;IACF;IACA,MAAM;QACJ,OAAO;YACL,OAAO;YACP,iBAAiB;QACnB;IACF;IACA,YAAY;QACV,OAAO;YACL,iBAAiB;YACjB,OAAO;YACP,WAAW;QACb;IACF;AACF;AAEA,MAAM,OAAoB;IACxB,SAAS;QACP,OAAO;YACL,iBAAiB;YACjB,OAAO;YACP,eAAe;QACjB;IACF;IACA,MAAM;QACJ,OAAO;YACL,OAAO;YACP,iBAAiB;QACnB;IACF;IACA,YAAY;QACV,OAAO;YACL,iBAAiB;YACjB,OAAO;YACP,WAAW;QACb;IACF;AACF;AAEA,MAAM,SAAgD;IAAE;IAAO;AAAK;uCAErD","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/DataTable/DataTable.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport DataTableComponent, {\r\n  createTheme,\r\n  TableColumn,\r\n  TableProps,\r\n} from \"react-data-table-component\";\r\nimport styles from \"./styles\";\r\nimport { Box, Typography } from \"@mui/material\";\r\n\r\ncreateTheme(\"customDark\", {\r\n  text: {\r\n    primary: \"#e5e7eb\",\r\n    secondary: \"#ffffff\",\r\n  },\r\n  background: {\r\n    default: \"#1f2937\",\r\n  },\r\n  divider: {\r\n    default: \"#374151\",\r\n  },\r\n  highlightOnHover: {\r\n    default: \"#374151\",\r\n    text: \"#ffffff\",\r\n  },\r\n});\r\n\r\ntype ThemeOption = \"black\" | \"gray\";\r\n\r\ninterface CustomDataTableProps<T> extends Partial<TableProps<T>> {\r\n  data: T[];\r\n  columns: TableColumn<T>[];\r\n  themeStyle?: ThemeOption;\r\n  header?:false\r\n}\r\n\r\nconst DataTable = <T,>({\r\n  header,\r\n  data,\r\n  columns,\r\n  themeStyle = \"black\",\r\n  ...rest\r\n}: CustomDataTableProps<T>) => {\r\n  const customStyles = styles[themeStyle];\r\n\r\n  return (\r\n    <>\r\n      {header && (\r\n        <Box sx={{ bgcolor: \"#2C2B2B\", padding: 4 }}>\r\n          <Typography>Recents</Typography>\r\n        </Box>\r\n      )}\r\n      <DataTableComponent\r\n        data={data}\r\n        columns={columns}\r\n        theme=\"customDark\"\r\n        customStyles={customStyles}\r\n        pagination\r\n        highlightOnHover\r\n        {...rest}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n"],"names":[],"mappings":";;;;AAEA;AAKA;AACA;AAAA;AARA;;;;;AAUA,CAAA,GAAA,8KAAA,CAAA,cAAW,AAAD,EAAE,cAAc;IACxB,MAAM;QACJ,SAAS;QACT,WAAW;IACb;IACA,YAAY;QACV,SAAS;IACX;IACA,SAAS;QACP,SAAS;IACX;IACA,kBAAkB;QAChB,SAAS;QACT,MAAM;IACR;AACF;AAWA,MAAM,YAAY,CAAK,EACrB,MAAM,EACN,IAAI,EACJ,OAAO,EACP,aAAa,OAAO,EACpB,GAAG,MACqB;IACxB,MAAM,eAAe,kJAAA,CAAA,UAAM,CAAC,WAAW;IAEvC,qBACE;;YACG,wBACC,6LAAC,2LAAA,CAAA,MAAG;gBAAC,IAAI;oBAAE,SAAS;oBAAW,SAAS;gBAAE;0BACxC,cAAA,6LAAC,gNAAA,CAAA,aAAU;8BAAC;;;;;;;;;;;0BAGhB,6LAAC,8KAAA,CAAA,UAAkB;gBACjB,MAAM;gBACN,SAAS;gBACT,OAAM;gBACN,cAAc;gBACd,UAAU;gBACV,gBAAgB;gBACf,GAAG,IAAI;;;;;;;;AAIhB;KA3BM;uCA6BS","debugId":null}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/%28pages%29/%28user%29/user/wallet/page.tsx"],"sourcesContent":["\"use client\";\r\nimport Tabs from \"@/app/components/Tabs\";\r\nimport PrimaryButton from \"@/app/components/ui/PrimaryButton\";\r\nimport StatsCard from \"@/app/components/ui/StatsCard\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useState } from \"react\";\r\nimport DataTable from \"@/app/components/DataTable/DataTable\";\r\nimport { TableColumn } from \"react-data-table-component\";\r\n\r\nconst Wallet = () => {\r\n  const statsData = [\r\n    { label: \"Available Balance\", value: \"24K\", bgColor: \"bg-[#6F4FF2]\" },\r\n    { label: \"Available Credits\", value: \"82K\", bgColor: \"bg-[#50BB25]\" },\r\n    { label: \"Available Debts\", value: \"200\", bgColor: \"bg-[#F9D62C]\" },\r\n  ];\r\n  type Data = {\r\n    sr: number;\r\n    username: string;\r\n    currency: string;\r\n    amount: string;\r\n    source: string;\r\n    date: string;\r\n  };\r\n  const dataSource = [\r\n    {\r\n      sr: 1,\r\n      username: \"John Doe\",\r\n      currency: \"USD\",\r\n      amount: \"Rs 1332\",\r\n      source: \"Lorem Ipsum\",\r\n      date: \"1 min ago\",\r\n    },\r\n    {\r\n      sr: 2,\r\n      username: \"John Doe\",\r\n      currency: \"USD\",\r\n      amount: \"Rs 1332\",\r\n      source: \"Lorem Ipsum\",\r\n      date: \"1 min ago\",\r\n    },\r\n    {\r\n      sr: 3,\r\n      username: \"John Doe\",\r\n      currency: \"USD\",\r\n      amount: \"Rs 1332\",\r\n      source: \"Lorem Ipsum\",\r\n      date: \"1 min ago\",\r\n    },\r\n  ];\r\n\r\n  const columns:TableColumn<Data>[] = [\r\n    {\r\n      name: \"Sr#\",\r\n      selector: (row) => row.sr,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Username\",\r\n      selector: (row) => row.username,\r\n    },\r\n    {\r\n      name: \"Currency\",\r\n      selector: (row) => row.currency,\r\n    },\r\n    {\r\n      name: \"Amount\",\r\n      selector: (row) => row.amount,\r\n    },\r\n    {\r\n      name: \"Source\",\r\n      selector: (row) => row.source,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: (row) => row.date,\r\n    },\r\n  ];\r\n\r\n  const tabs = [\"Credit\", \"Debit\"];\r\n  const [activeTab, setActiveTab] = useState(tabs[0]);\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <div className=\"text-white py-5\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"text-xl\">P2P Wallet</div>\r\n        <div className=\"flex gap-2 items-center\">\r\n          <div className=\"bg-[#2B2B2B] py-2 px-4 rounded\">\r\n            Easypaisa account *******1234 is connected\r\n          </div>\r\n          <div>\r\n            <PrimaryButton\r\n              onClick={() => router.push(\"/user/wallet/add-new-wallet\")}\r\n              bgColor=\"#7367F0\"\r\n              className=\"!text-white !border-none !font-medium\"\r\n            >\r\n              Add new Wallet\r\n            </PrimaryButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex gap-4 my-4\">\r\n        {statsData.map((item, index) => (\r\n          <StatsCard\r\n            key={index}\r\n            label={item.label}\r\n            value={item.value}\r\n            bgColor={item.bgColor}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <Tabs tabs={tabs} activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n      <div className=\"mt-4\">\r\n        {activeTab === \"Credit\" && (\r\n          <DataTable data={dataSource} columns={columns} themeStyle=\"gray\" />\r\n        )}\r\n        {activeTab === \"Debit\" && (\r\n          <DataTable data={dataSource} columns={columns} themeStyle=\"gray\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wallet;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AANA;;;;;;;AASA,MAAM,SAAS;;IACb,MAAM,YAAY;QAChB;YAAE,OAAO;YAAqB,OAAO;YAAO,SAAS;QAAe;QACpE;YAAE,OAAO;YAAqB,OAAO;YAAO,SAAS;QAAe;QACpE;YAAE,OAAO;YAAmB,OAAO;YAAO,SAAS;QAAe;KACnE;IASD,MAAM,aAAa;QACjB;YACE,IAAI;YACJ,UAAU;YACV,UAAU;YACV,QAAQ;YACR,QAAQ;YACR,MAAM;QACR;QACA;YACE,IAAI;YACJ,UAAU;YACV,UAAU;YACV,QAAQ;YACR,QAAQ;YACR,MAAM;QACR;QACA;YACE,IAAI;YACJ,UAAU;YACV,UAAU;YACV,QAAQ;YACR,QAAQ;YACR,MAAM;QACR;KACD;IAED,MAAM,UAA8B;QAClC;YACE,MAAM;YACN,UAAU,CAAC,MAAQ,IAAI,EAAE;YACzB,UAAU;QACZ;QACA;YACE,MAAM;YACN,UAAU,CAAC,MAAQ,IAAI,QAAQ;QACjC;QACA;YACE,MAAM;YACN,UAAU,CAAC,MAAQ,IAAI,QAAQ;QACjC;QACA;YACE,MAAM;YACN,UAAU,CAAC,MAAQ,IAAI,MAAM;QAC/B;QACA;YACE,MAAM;YACN,UAAU,CAAC,MAAQ,IAAI,MAAM;QAC/B;QACA;YACE,MAAM;YACN,UAAU,CAAC,MAAQ,IAAI,IAAI;QAC7B;KACD;IAED,MAAM,OAAO;QAAC;QAAU;KAAQ;IAChC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,CAAC,EAAE;IAClD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCAAU;;;;;;kCACzB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CAAiC;;;;;;0CAGhD,6LAAC;0CACC,cAAA,6LAAC,mJAAA,CAAA,UAAa;oCACZ,SAAS,IAAM,OAAO,IAAI,CAAC;oCAC3B,SAAQ;oCACR,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;0BAOP,6LAAC;gBAAI,WAAU;0BACZ,UAAU,GAAG,CAAC,CAAC,MAAM,sBACpB,6LAAC,+IAAA,CAAA,UAAS;wBAER,OAAO,KAAK,KAAK;wBACjB,OAAO,KAAK,KAAK;wBACjB,SAAS,KAAK,OAAO;uBAHhB;;;;;;;;;;0BAQX,6LAAC,oIAAA,CAAA,UAAI;gBAAC,MAAM;gBAAM,WAAW;gBAAW,cAAc;;;;;;0BAEtD,6LAAC;gBAAI,WAAU;;oBACZ,cAAc,0BACb,6LAAC,sJAAA,CAAA,UAAS;wBAAC,MAAM;wBAAY,SAAS;wBAAS,YAAW;;;;;;oBAE3D,cAAc,yBACb,6LAAC,sJAAA,CAAA,UAAS;wBAAC,MAAM;wBAAY,SAAS;wBAAS,YAAW;;;;;;;;;;;;;;;;;;AAKpE;GApHM;;QAuEW,qIAAA,CAAA,YAAS;;;KAvEpB;uCAsHS","debugId":null}}]
}