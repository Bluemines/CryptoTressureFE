{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/modals/Modal.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport MUIModal from '@mui/material/Modal';\r\nimport { SxProps, Theme } from '@mui/material/styles';\r\n\r\nconst style: SxProps<Theme> = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: \"90%\",\r\n  maxWidth: 450,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\ninterface ModalProps {\r\n  open: boolean;\r\n  setOpen: (open: boolean) => void;\r\n  children?: React.ReactNode;\r\n  boxStyle?: SxProps<Theme>;\r\n}\r\n\r\nexport default function Modal({ open, setOpen, children, boxStyle }: ModalProps) {\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <MUIModal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n      slotProps={{\r\n        backdrop: {\r\n          sx: {\r\n            backdropFilter: 'blur(4px)',\r\n            backgroundColor: 'rgba(0,0,0,0.3)',\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Box sx={{ ...(style as object), ...(boxStyle as object) }}>\r\n        {children}\r\n      </Box>\r\n    </MUIModal>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAGA,MAAM,QAAwB;IAC5B,UAAU;IACV,KAAK;IACL,MAAM;IACN,WAAW;IACX,OAAO;IACP,UAAU;IACV,SAAS;IACT,QAAQ;IACR,WAAW;IACX,GAAG;AACL;AASe,SAAS,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAc;IAC7E,MAAM,cAAc,IAAM,QAAQ;IAElC,qBACE,6LAAC,6JAAA,CAAA,UAAQ;QACP,MAAM;QACN,SAAS;QACT,mBAAgB;QAChB,oBAAiB;QACjB,WAAW;YACT,UAAU;gBACR,IAAI;oBACF,gBAAgB;oBAChB,iBAAiB;gBACnB;YACF;QACF;kBAEA,cAAA,6LAAC,yJAAA,CAAA,UAAG;YAAC,IAAI;gBAAE,GAAI,KAAK;gBAAa,GAAI,QAAQ;YAAY;sBACtD;;;;;;;;;;;AAIT;KAvBwB","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/%28pages%29/%28user%29/admin/rewards-distribution/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport Modal from \"@/app/components/modals/Modal\"\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Chip,\r\n  TextField,\r\n  Button,\r\n} from \"@mui/material\"\r\nimport { useState } from \"react\"\r\n\r\ntype RewardRow = {\r\n  id: number\r\n  name: string\r\n  email: string\r\n  level: number\r\n  date: string\r\n  rewardAmount: string\r\n  status: \"Success\" | \"Failed\"\r\n}\r\n\r\nconst Page = () => {\r\n  const [search, setSearch] = useState(\"\")\r\n\r\n  const columns = [\r\n    { id: \"name\", label: \"User\" },\r\n    { id: \"email\", label: \"Email\" },\r\n    { id: \"level\", label: \"Level\" },\r\n    { id: \"date\", label: \"Date\" },\r\n    { id: \"rewardAmount\", label: \"Reward Amount\" },\r\n    { id: \"status\", label: \"Status\" },\r\n  ] as const\r\n\r\n  const data: RewardRow[] = [\r\n    {\r\n      id: 1,\r\n      name: \"John Bushmill\",\r\n      email: \"Johnb@mail.com\",\r\n      level: 2,\r\n      date: \"1 min ago\",\r\n      rewardAmount: \"$1000\",\r\n      status: \"Failed\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Jane Doe\",\r\n      email: \"jane@mail.com\",\r\n      level: 3,\r\n      date: \"5 min ago\",\r\n      rewardAmount: \"$500\",\r\n      status: \"Success\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Alice Smith\",\r\n      email: \"alice@mail.com\",\r\n      level: 1,\r\n      date: \"10 min ago\",\r\n      rewardAmount: \"$200\",\r\n      status: \"Success\",\r\n    },\r\n  ]\r\n\r\n  const statusBgColors: Record<string, string> = {\r\n    Success: \"#4CAF50\",\r\n    Failed: \"#F44336\",\r\n  }\r\n\r\n  const statusColors: Record<string, string> = {\r\n    Success: \"#fff\",\r\n    Failed: \"#fff\",\r\n  }\r\n\r\n  const filteredData = data.filter((row) =>\r\n    row.name.toLowerCase().includes(search.toLowerCase())\r\n  )\r\n\r\n  const [open, setOpen] = useState(false)\r\n\r\n  return (\r\n    <div className=\"p-4 bg-[#1f1f1f] min-h-screen text-white\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <TextField\r\n          label=\"Search user\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          sx={{\r\n            label: { color: \"#aaa\" },\r\n            input: { color: \"#eee\" },\r\n            \"& .MuiOutlinedInput-root\": {\r\n              \"& fieldset\": { borderColor: \"#555\" },\r\n              \"&:hover fieldset\": { borderColor: \"#888\" },\r\n              \"&.Mui-focused fieldset\": { borderColor: \"#A78BFA\" },\r\n            },\r\n          }}\r\n        />\r\n        <Button variant=\"contained\" sx={{ fontWeight: 600 }} onClick={() => setOpen(true)}>\r\n          Distribute Awards Manually\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"font-semibold text-xl my-3\">Rewards Distribution</div>\r\n\r\n      <TableContainer component={Paper} sx={{ background: \"#2b2b2b\" }}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((col) => (\r\n                <TableCell\r\n                  key={col.id}\r\n                  sx={{\r\n                    color: \"#eee\",\r\n                    borderBottom: \"1px solid #444\",\r\n                    fontWeight: 600,\r\n                  }}\r\n                >\r\n                  {col.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {filteredData.map((row) => (\r\n              <TableRow key={row.id}>\r\n                {columns.map((col) => (\r\n                  <TableCell key={col.id} sx={{ color: \"#ccc\" }}>\r\n                    {col.id === \"status\" ? (\r\n                      <Chip\r\n                        label={row[col.id as keyof RewardRow] as string}\r\n                        sx={{\r\n                          backgroundColor:\r\n                            statusBgColors[row.status] || \"#888\",\r\n                          color: statusColors[row.status] || \"#fff\",\r\n                          fontWeight: 500,\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      row[col.id as keyof RewardRow]\r\n                    )}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n            <Modal\r\n              open={open}\r\n              setOpen={setOpen}\r\n            >\r\n              <div className='text-lg font-medium'>Approve withdrawl?</div>\r\n              <div className='text-[#A9A9A9] mt-4'>\r\n                Do you want to approve withdrawal of $10 of User John Doe?\r\n              </div>\r\n              <div className='flex'>\r\n                <Button\r\n                  sx={{\r\n                    backgroundColor: \"#008A3D\",\r\n                    color: \"#fff\",\r\n                    marginTop: \"22px\",\r\n                    marginLeft: \"auto\",\r\n                  }}\r\n                >\r\n                  Confirm\r\n                </Button>\r\n              </div>\r\n            </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Page\r\n"],"names":[],"mappings":"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","debugId":null}}]
}