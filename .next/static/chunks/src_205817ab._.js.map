{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/modals/Modal.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport MUIModal from '@mui/material/Modal';\r\nimport { SxProps, Theme } from '@mui/material/styles';\r\n\r\nconst style: SxProps<Theme> = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: \"90%\",\r\n  maxWidth: 450,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\ninterface ModalProps {\r\n  open: boolean;\r\n  setOpen: (open: boolean) => void;\r\n  children?: React.ReactNode;\r\n  boxStyle?: SxProps<Theme>;\r\n}\r\n\r\nexport default function Modal({ open, setOpen, children, boxStyle }: ModalProps) {\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <MUIModal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n      slotProps={{\r\n        backdrop: {\r\n          sx: {\r\n            backdropFilter: 'blur(4px)',\r\n            backgroundColor: 'rgba(0,0,0,0.3)',\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Box sx={{ ...(style as object), ...(boxStyle as object) }}>\r\n        {children}\r\n      </Box>\r\n    </MUIModal>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAGA,MAAM,QAAwB;IAC5B,UAAU;IACV,KAAK;IACL,MAAM;IACN,WAAW;IACX,OAAO;IACP,UAAU;IACV,SAAS;IACT,QAAQ;IACR,WAAW;IACX,GAAG;AACL;AASe,SAAS,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAc;IAC7E,MAAM,cAAc,IAAM,QAAQ;IAElC,qBACE,6LAAC,6JAAA,CAAA,UAAQ;QACP,MAAM;QACN,SAAS;QACT,mBAAgB;QAChB,oBAAiB;QACjB,WAAW;YACT,UAAU;gBACR,IAAI;oBACF,gBAAgB;oBAChB,iBAAiB;gBACnB;YACF;QACF;kBAEA,cAAA,6LAAC,yJAAA,CAAA,UAAG;YAAC,IAAI;gBAAE,GAAI,KAAK;gBAAa,GAAI,QAAQ;YAAY;sBACtD;;;;;;;;;;;AAIT;KAvBwB","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/ui/Inputs/FormInput.tsx"],"sourcesContent":["// import React from \"react\";\r\n// import { Controller, Control, FieldErrors } from \"react-hook-form\";\r\n// import { TextField } from \"@mui/material\";\r\n\r\n// interface FormInputProps {\r\n//   name: string;\r\n//   control: Control<any>;\r\n//   label: string;\r\n//   type?: string;\r\n//   errors?: FieldErrors;\r\n//   multiline?: boolean;\r\n//   rows?: number;\r\n// }\r\n\r\n// const FormInput: React.FC<FormInputProps> = ({\r\n//   name,\r\n//   control,\r\n//   label,\r\n//   type = \"text\",\r\n//   errors,\r\n//   multiline = false,\r\n//   rows = 4,\r\n// }) => {\r\n//   return (\r\n//     <Controller\r\n//       name={name}\r\n//       control={control}\r\n//       render={({ field }) => (\r\n//         <TextField\r\n//           {...field}\r\n//           type={type}\r\n//           label={label}\r\n//           variant=\"outlined\"\r\n//           fullWidth\r\n//           margin=\"normal\"\r\n//           multiline={multiline}\r\n//           rows={multiline ? rows : undefined}\r\n//           error={!!errors?.[name]}\r\n//           helperText={errors?.[name]?.message as string}\r\n//           InputLabelProps={{ style: { color: \"#aaa\" } }}\r\n//           InputProps={{\r\n//             style: { color: \"#fff\" },\r\n//           }}\r\n//           sx={{\r\n//             backgroundColor: \"#262626\",\r\n//             // px: 2,\r\n//             // py: 1,\r\n//             borderRadius: \"6px\",\r\n//             \"& .MuiOutlinedInput-root\": {\r\n//               \"& fieldset\": {\r\n//                 borderColor: \"#444\",\r\n//               },\r\n//               \"&:hover fieldset\": {\r\n//                 borderColor: \"#666\",\r\n//               },\r\n//               \"&.Mui-focused fieldset\": {\r\n//                 borderColor: \"#888\",\r\n//               },\r\n//             },\r\n//             \"& .MuiInputBase-root\": {\r\n//               color: \"#fff\",\r\n//             },\r\n//           }}\r\n//         />\r\n//       )}\r\n//     />\r\n//   );\r\n// };\r\n\r\n// export default FormInput;\r\nimport React, { useState } from \"react\";\r\nimport { Controller, Control, FieldErrors } from \"react-hook-form\";\r\nimport { TextField, IconButton, InputAdornment } from \"@mui/material\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\n\r\ninterface FormInputProps {\r\n  name: string;\r\n  control: Control<any>;\r\n  label: string;\r\n  type?: string;\r\n  errors?: FieldErrors;\r\n  multiline?: boolean;\r\n  rows?: number;\r\n  rules?: any;\r\n}\r\n\r\nconst FormInput: React.FC<FormInputProps> = ({\r\n  name,\r\n  control,\r\n  label,\r\n  type = \"text\",\r\n  errors,\r\n  multiline = false,\r\n  rows = 4,\r\n  rules,\r\n}) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const isPassword = type === \"password\";\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Controller\r\n      rules={rules}\r\n      name={name}\r\n      control={control}\r\n      render={({ field }) => (\r\n        <TextField\r\n          {...field}\r\n          type={isPassword && !showPassword ? \"password\" : \"text\"}\r\n          label={label}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          multiline={multiline}\r\n          rows={multiline ? rows : undefined}\r\n          error={!!errors?.[name]}\r\n          helperText={errors?.[name]?.message as string}\r\n          InputLabelProps={{ style: { color: \"#aaa\" } }}\r\n          InputProps={{\r\n            style: { color: \"#fff\" },\r\n            endAdornment: isPassword && (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={togglePasswordVisibility}\r\n                  edge=\"end\"\r\n                  sx={{ color: \"#aaa\" }}\r\n                >\r\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          sx={{\r\n            backgroundColor: \"#262626\",\r\n            borderRadius: \"6px\",\r\n            \"& .MuiOutlinedInput-root\": {\r\n              \"& fieldset\": {\r\n                borderColor: \"#444\",\r\n              },\r\n              \"&:hover fieldset\": {\r\n                borderColor: \"#666\",\r\n              },\r\n              \"&.Mui-focused fieldset\": {\r\n                borderColor: \"#888\",\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n"],"names":[],"mappings":"AAAA,6BAA6B;AAC7B,sEAAsE;AACtE,6CAA6C;AAE7C,6BAA6B;AAC7B,kBAAkB;AAClB,2BAA2B;AAC3B,mBAAmB;AACnB,mBAAmB;AACnB,0BAA0B;AAC1B,yBAAyB;AACzB,mBAAmB;AACnB,IAAI;AAEJ,iDAAiD;AACjD,UAAU;AACV,aAAa;AACb,WAAW;AACX,mBAAmB;AACnB,YAAY;AACZ,uBAAuB;AACvB,cAAc;AACd,UAAU;AACV,aAAa;AACb,kBAAkB;AAClB,oBAAoB;AACpB,0BAA0B;AAC1B,iCAAiC;AACjC,qBAAqB;AACrB,uBAAuB;AACvB,wBAAwB;AACxB,0BAA0B;AAC1B,+BAA+B;AAC/B,sBAAsB;AACtB,4BAA4B;AAC5B,kCAAkC;AAClC,gDAAgD;AAChD,qCAAqC;AACrC,2DAA2D;AAC3D,2DAA2D;AAC3D,0BAA0B;AAC1B,wCAAwC;AACxC,eAAe;AACf,kBAAkB;AAClB,0CAA0C;AAC1C,wBAAwB;AACxB,wBAAwB;AACxB,mCAAmC;AACnC,4CAA4C;AAC5C,gCAAgC;AAChC,uCAAuC;AACvC,mBAAmB;AACnB,sCAAsC;AACtC,uCAAuC;AACvC,mBAAmB;AACnB,4CAA4C;AAC5C,uCAAuC;AACvC,mBAAmB;AACnB,iBAAiB;AACjB,wCAAwC;AACxC,+BAA+B;AAC/B,iBAAiB;AACjB,eAAe;AACf,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AAEL,4BAA4B;;;;;AAC5B;AACA;AACA;AAAA;AAAA;AACA;AAAA;;;;;;;;AAaA,MAAM,YAAsC,CAAC,EAC3C,IAAI,EACJ,OAAO,EACP,KAAK,EACL,OAAO,MAAM,EACb,MAAM,EACN,YAAY,KAAK,EACjB,OAAO,CAAC,EACR,KAAK,EACN;;IACC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,aAAa,SAAS;IAE5B,MAAM,2BAA2B;QAC/B,gBAAgB,CAAC,OAAS,CAAC;IAC7B;IAEA,qBACE,6LAAC,iKAAA,CAAA,aAAU;QACT,OAAO;QACP,MAAM;QACN,SAAS;QACT,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,6MAAA,CAAA,YAAS;gBACP,GAAG,KAAK;gBACT,MAAM,cAAc,CAAC,eAAe,aAAa;gBACjD,OAAO;gBACP,SAAQ;gBACR,SAAS;gBACT,QAAO;gBACP,WAAW;gBACX,MAAM,YAAY,OAAO;gBACzB,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK;gBACvB,YAAY,QAAQ,CAAC,KAAK,EAAE;gBAC5B,iBAAiB;oBAAE,OAAO;wBAAE,OAAO;oBAAO;gBAAE;gBAC5C,YAAY;oBACV,OAAO;wBAAE,OAAO;oBAAO;oBACvB,cAAc,4BACZ,6LAAC,4NAAA,CAAA,iBAAc;wBAAC,UAAS;kCACvB,cAAA,6LAAC,gNAAA,CAAA,aAAU;4BACT,SAAS;4BACT,MAAK;4BACL,IAAI;gCAAE,OAAO;4BAAO;sCAEnB,6BAAe,6LAAC,qKAAA,CAAA,UAAa;;;;uDAAM,6LAAC,kKAAA,CAAA,UAAU;;;;;;;;;;;;;;;gBAIvD;gBACA,IAAI;oBACF,iBAAiB;oBACjB,cAAc;oBACd,4BAA4B;wBAC1B,cAAc;4BACZ,aAAa;wBACf;wBACA,oBAAoB;4BAClB,aAAa;wBACf;wBACA,0BAA0B;4BACxB,aAAa;wBACf;oBACF;gBACF;;;;;;;;;;;AAKV;GApEM;KAAA;uCAsES","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/%28auth%29/login/schema.ts"],"sourcesContent":["import * as yup from 'yup'\r\n\r\nexport const loginSchema = yup.object().shape({\r\n    email:yup.string().email().required(\"Email is required\"),\r\n    password:yup.string().required(\"Password is required\")\r\n})\r\n\r\nexport const forgetPasswordSchema = yup.object().shape({\r\n    email:yup.string().email().required(\"Email is required\"),\r\n})\r\n\r\nexport const resetPasswordSchema = yup.object().shape({\r\n    email:yup.string().email().required(\"Email is required\"),\r\n    code: yup.string().required(),\r\n    newPassword: yup.string().required(\"Password is required\"),\r\n    confirmPassword: yup.string().required(\"Confirm Password is required\"),\r\n})"],"names":[],"mappings":";;;;;AAAA;;AAEO,MAAM,cAAc,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,KAAK,CAAC;IAC1C,OAAM,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,KAAK,GAAG,QAAQ,CAAC;IACpC,UAAS,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ,CAAC;AACnC;AAEO,MAAM,uBAAuB,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,KAAK,CAAC;IACnD,OAAM,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,KAAK,GAAG,QAAQ,CAAC;AACxC;AAEO,MAAM,sBAAsB,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,KAAK,CAAC;IAClD,OAAM,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,KAAK,GAAG,QAAQ,CAAC;IACpC,MAAM,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ;IAC3B,aAAa,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ,CAAC;IACnC,iBAAiB,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ,CAAC;AAC3C","debugId":null}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/constants/keys.ts"],"sourcesContent":["export const base_url = process.env.NEXT_PUBLIC_API_URL;\r\n"],"names":[],"mappings":";;;AAAwB;AAAjB,MAAM","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/utils/auth.ts"],"sourcesContent":["export const auth = {\r\n  logout: async () => {\r\n    // const email =   localStorage.getItem('userEmail');\r\n    // console.log(email, 'emailemail');\r\n    // const lastOnboardingDate =   localStorage.getItem('lastOnboardingDate');\r\n    localStorage.clear();\r\n    // if (lastOnboardingDate) {\r\n    //       localStorage.setItem('lastOnboardingDate', lastOnboardingDate);\r\n    // }\r\n    // if (email) {\r\n    //       localStorage.setItem('userEmail', email);\r\n    // }\r\n  },\r\n  delete: async () => {\r\n    localStorage.clear();\r\n  },\r\n  accessToken: async () => {\r\n    return localStorage.getItem(\"accessToken\");\r\n  },\r\n  setToken: async (token: string) => {\r\n    return localStorage.setItem(\"accessToken\", token);\r\n  },\r\n  refreshToken: async () => {\r\n    return localStorage.getItem(\"refreshToken\");\r\n  },\r\n  platform: async () => {\r\n    return localStorage.getItem(\"platform\");\r\n  },\r\n  setUser: async (userId: string) => {\r\n    localStorage.setItem(\"userId\", userId);\r\n  },\r\n  user: async () => {\r\n    return localStorage.getItem(\"userId\");\r\n  },\r\n  updateTokens: async (accessToken: string, refreshToken: string) => {\r\n    localStorage.setItem(\"accessToken\", accessToken);\r\n    localStorage.setItem(\"refreshToken\", refreshToken);\r\n  },\r\n};\r\n\r\nexport default auth;\r\n"],"names":[],"mappings":";;;;AAAO,MAAM,OAAO;IAClB,QAAQ;QACN,qDAAqD;QACrD,oCAAoC;QACpC,2EAA2E;QAC3E,aAAa,KAAK;IAClB,4BAA4B;IAC5B,wEAAwE;IACxE,IAAI;IACJ,eAAe;IACf,kDAAkD;IAClD,IAAI;IACN;IACA,QAAQ;QACN,aAAa,KAAK;IACpB;IACA,aAAa;QACX,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,UAAU,OAAO;QACf,OAAO,aAAa,OAAO,CAAC,eAAe;IAC7C;IACA,cAAc;QACZ,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,UAAU;QACR,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,SAAS,OAAO;QACd,aAAa,OAAO,CAAC,UAAU;IACjC;IACA,MAAM;QACJ,OAAO,aAAa,OAAO,CAAC;IAC9B;IACA,cAAc,OAAO,aAAqB;QACxC,aAAa,OAAO,CAAC,eAAe;QACpC,aAAa,OAAO,CAAC,gBAAgB;IACvC;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/utils/axios.ts"],"sourcesContent":["import { base_url } from \"../constants/keys\";\r\nimport auth from \"./auth\";\r\nimport axios from \"axios\";\r\n\r\nexport const apiClient = axios.create({\r\n  baseURL: base_url,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Access-Control-Allow-Origin\": \"*\", //\r\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, PATCH, OPTIONS\",\r\n  },\r\n});\r\napiClient.interceptors.request.use(\r\n  async (config) => {\r\n    const accessToken = await auth.accessToken();\r\n    if (accessToken) {\r\n      config.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    }\r\n    if (config.data instanceof FormData) {\r\n      config.headers[\"Content-Type\"] = \"multipart/form-data\";\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    } else {\r\n      config.headers[\"Content-Type\"] = \"application/json\";\r\n      config.headers[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      config.headers[\"Access-Control-Allow-Methods\"] =\r\n        \"GET, POST, PUT, DELETE, PATCH, OPTIONS\";\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// apiClient.interceptors.response.use(\r\n//   (response) => response,\r\n//   async (error) => {\r\n//     const originalRequest = error.config;\r\n//     if (error.response?.status === 401 && !originalRequest._retry) {\r\n//       originalRequest._retry = true;\r\n//       const refreshToken = await auth.refreshToken();\r\n\r\n//       if (refreshToken) {\r\n//         try {\r\n//           const response = await axios.post(`${baseUrl}/auth/refresh-token`, {\r\n//             refreshToken,\r\n//           });\r\n//           const { accessToken, refreshToken: newRefreshToken } =\r\n//             response.data.data;\r\n//           await auth.updateTokens(accessToken, newRefreshToken);\r\n//           originalRequest.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n//           return axios(originalRequest);\r\n//         } catch (refreshError) {\r\n//           auth.logout();\r\n//           return Promise.reject(refreshError);\r\n//         }\r\n//       } else {\r\n//         auth.logout();\r\n//       }\r\n//     }\r\n//     return Promise.reject(error);\r\n//   }\r\n// );\r\napiClient.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const queryFn = async <T>(\r\n  endpoint: string,\r\n  params?: Record<string, any>\r\n): Promise<T> => {\r\n  const response = await apiClient.get(endpoint, { params });\r\n  return response.data;\r\n};\r\n\r\nexport const mutationFn = async (\r\n  endpoint: string,\r\n  method: \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\",\r\n  body?: Record<string, any>,\r\n  headers?: Record<string, any>\r\n) => {\r\n  const response = await apiClient.request({\r\n    url: endpoint,\r\n    method,\r\n    data: body,\r\n    headers: {\r\n      ...headers,\r\n    },\r\n  });\r\n  return response.data;\r\n};"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,MAAM,YAAY,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACpC,SAAS,kIAAA,CAAA,WAAQ;IACjB,SAAS;QACP,gBAAgB;QAChB,+BAA+B;QAC/B,gCAAgC;IAClC;AACF;AACA,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAChC,OAAO;IACL,MAAM,cAAc,MAAM,8HAAA,CAAA,UAAI,CAAC,WAAW;IAC1C,IAAI,aAAa;QACf,OAAO,OAAO,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,aAAa;QACzD,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ;IACA,IAAI,OAAO,IAAI,YAAY,UAAU;QACnC,OAAO,OAAO,CAAC,eAAe,GAAG;QACjC,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ,OAAO;QACL,OAAO,OAAO,CAAC,eAAe,GAAG;QACjC,OAAO,OAAO,CAAC,8BAA8B,GAAG;QAChD,OAAO,OAAO,CAAC,+BAA+B,GAC5C;IACJ;IACA,OAAO;AACT,GACA,CAAC,QAAU,QAAQ,MAAM,CAAC;AAG5B,uCAAuC;AACvC,4BAA4B;AAC5B,uBAAuB;AACvB,4CAA4C;AAC5C,uEAAuE;AACvE,uCAAuC;AACvC,wDAAwD;AAExD,4BAA4B;AAC5B,gBAAgB;AAChB,iFAAiF;AACjF,4BAA4B;AAC5B,gBAAgB;AAChB,mEAAmE;AACnE,kCAAkC;AAClC,mEAAmE;AACnE,gFAAgF;AAChF,2CAA2C;AAC3C,mCAAmC;AACnC,2BAA2B;AAC3B,iDAAiD;AACjD,YAAY;AACZ,iBAAiB;AACjB,yBAAyB;AACzB,UAAU;AACV,QAAQ;AACR,oCAAoC;AACpC,MAAM;AACN,KAAK;AACL,UAAU,YAAY,CAAC,QAAQ,CAAC,GAAG,CACjC,CAAC,WAAa,UACd,OAAO;IACL,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGK,MAAM,UAAU,OACrB,UACA;IAEA,MAAM,WAAW,MAAM,UAAU,GAAG,CAAC,UAAU;QAAE;IAAO;IACxD,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OACxB,UACA,QACA,MACA;IAEA,MAAM,WAAW,MAAM,UAAU,OAAO,CAAC;QACvC,KAAK;QACL;QACA,MAAM;QACN,SAAS;YACP,GAAG,OAAO;QACZ;IACF;IACA,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/api/authentication/index.ts"],"sourcesContent":["import { mutationFn } from \"@/app/utils/axios\";\r\nimport { ILoginBody, ISendEmailBody, ISignupBody } from \"./types\";\r\n\r\nexport const loginApi = {\r\n    mutationFn: (body: ILoginBody) => {\r\n        return mutationFn('auth/signin', 'POST', body);\r\n    },\r\n};\r\n\r\nexport const RegisterApi = {\r\n    mutationFn: (body: ISignupBody) => {\r\n        return mutationFn('auth/signup', 'POST', body);\r\n    },\r\n};\r\nexport const ConfirmEmailApi = {\r\n    mutationFn: (body: ISendEmailBody) => {\r\n        return mutationFn('auth/send-email', 'POST', body);\r\n    },\r\n};\r\n\r\nexport const ForgetPasswordApi = {\r\n    mutationFn: (body: ISendEmailBody) => {\r\n        return mutationFn('auth/request-password-reset', 'POST', body);\r\n    },\r\n};\r\n\r\nexport const resetPasswordApi = {\r\n    mutationFn: (body: ISendEmailBody) => {\r\n        return mutationFn('auth/reset-password', 'POST', body);\r\n    },\r\n};\r\n\r\n"],"names":[],"mappings":";;;;;;;AAAA;;AAGO,MAAM,WAAW;IACpB,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,+HAAA,CAAA,aAAU,AAAD,EAAE,eAAe,QAAQ;IAC7C;AACJ;AAEO,MAAM,cAAc;IACvB,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,+HAAA,CAAA,aAAU,AAAD,EAAE,eAAe,QAAQ;IAC7C;AACJ;AACO,MAAM,kBAAkB;IAC3B,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,+HAAA,CAAA,aAAU,AAAD,EAAE,mBAAmB,QAAQ;IACjD;AACJ;AAEO,MAAM,oBAAoB;IAC7B,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,+HAAA,CAAA,aAAU,AAAD,EAAE,+BAA+B,QAAQ;IAC7D;AACJ;AAEO,MAAM,mBAAmB;IAC5B,YAAY,CAAC;QACT,OAAO,CAAA,GAAA,+HAAA,CAAA,aAAU,AAAD,EAAE,uBAAuB,QAAQ;IACrD;AACJ","debugId":null}},
    {"offset": {"line": 489, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/%28auth%29/login/hooks/index.ts"],"sourcesContent":["\"use client\"\r\n\r\nimport { SubmitHandler, useForm } from \"react-hook-form\"\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\nimport {\r\n  forgetPasswordSchema,\r\n  loginSchema,\r\n  resetPasswordSchema,\r\n} from \"../schema\"\r\nimport { IAddLoginFormValues, IForgetPassword } from \"../types\"\r\nimport { useMutation } from \"@tanstack/react-query\"\r\nimport {\r\n  ForgetPasswordApi,\r\n  loginApi,\r\n  resetPasswordApi,\r\n} from \"@/api/authentication\"\r\nimport { useState } from \"react\"\r\nimport { AxiosError } from \"axios\"\r\nimport toast from \"react-hot-toast\"\r\nimport { useRouter } from \"next/navigation\"\r\nimport auth from \"@/app/utils/auth\"\r\nimport { useGetCurrentUser } from \"@/api/auth/useAuth\"\r\n\r\nexport default function useLogin() {\r\n  const router = useRouter()\r\n  const [open, setOpen] = useState(false)\r\n  const [message, setMessage] = useState(\"\")\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    register,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(loginSchema),\r\n    defaultValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  })\r\n  const { mutateAsync: loginUser, isPending } = useMutation({\r\n    mutationFn: loginApi.mutationFn,\r\n    onSuccess: (data) => {\r\n      auth.setToken(data.data.access_token)\r\n      router.push('/user/dashboard')\r\n    },\r\n    onError: (error) => {\r\n      const err = error as AxiosError<{ message: string }>\r\n      toast.error(err.response?.data?.message || 'Something went wrong')\r\n    }\r\n  })\r\n  const handleLogin: SubmitHandler<IAddLoginFormValues> = async (data) => {\r\n    try {\r\n      const response = await loginUser(data)\r\n      if (response.success === true) {\r\n        setMessage(response.message)\r\n        setOpen(true)\r\n      } else {\r\n        setMessage(response.message)\r\n      }\r\n    } catch (error: unknown) {\r\n      const err = error as AxiosError<{ message: string }>\r\n      if (err?.response?.data?.message) {\r\n        setMessage(err.response.data.message)\r\n      } else {\r\n        setMessage(\"Something went wrong.\")\r\n      }\r\n    }\r\n  }\r\n  return { control, handleSubmit, errors, handleLogin, open, setOpen, message, isPending }\r\n}\r\n\r\nexport function useForgetPassword() {\r\n  const [open, setOpen] = useState(false)\r\n  const [message, setMessage] = useState(\"\")\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(forgetPasswordSchema),\r\n    defaultValues: {\r\n      email: \"\",\r\n    },\r\n  })\r\n  const {\r\n    mutateAsync: forgetPassword,\r\n    error,\r\n    isSuccess: forgetSuccess,\r\n  } = useMutation({\r\n    mutationFn: ForgetPasswordApi.mutationFn,\r\n    onSuccess: () => {\r\n      toast.success('Otp Sent to Email!')\r\n      localStorage.setItem('forgetPassEmail', watch('email'))\r\n    }\r\n  })\r\n  const handleForgetPassword: SubmitHandler<IForgetPassword> = async (data) => {\r\n    try {\r\n      const response = await forgetPassword(data)\r\n      if (response.success === true) {\r\n        setMessage(response.message)\r\n        setOpen(true)\r\n      } else {\r\n        setMessage(response.message)\r\n      }\r\n    } catch (error: unknown) {\r\n      const err = error as AxiosError<{ message: string }>\r\n      if (err?.response?.data?.message) {\r\n        setMessage(err.response.data.message)\r\n      } else {\r\n        setMessage(\"Something went wrong.\")\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    control,\r\n    handleSubmit,\r\n    errors,\r\n    handleForgetPassword,\r\n    open,\r\n    setOpen,\r\n    message,\r\n    forgetSuccess,\r\n    watch,\r\n  }\r\n}\r\n\r\nexport function useResetPassword(emailFromForget: string) {\r\n  const [open, setOpen] = useState(false)\r\n  const [message, setMessage] = useState(\"\")\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(resetPasswordSchema),\r\n    defaultValues: {\r\n      email: localStorage.getItem('forgetPassEmail') || '',\r\n      code: \"\",\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n  })\r\n\r\n  const {\r\n    mutateAsync: resetPassword,\r\n    error,\r\n    isSuccess: resetSuccess,\r\n  } = useMutation({\r\n    mutationFn: resetPasswordApi.mutationFn,\r\n    onSuccess: () => {\r\n      toast.success('Reset Successfull!')\r\n    },\r\n    onError: (error) => console.log(error)\r\n  })\r\n  const handleResetPassword: SubmitHandler<IForgetPassword> = async (data) => {\r\n    try {\r\n      const response = await resetPassword({ ...data, email: emailFromForget })\r\n      if (response.success === true) {\r\n        setMessage(response.message)\r\n        setOpen(true)\r\n      } else {\r\n        setMessage(response.message)\r\n      }\r\n    } catch (error: unknown) {\r\n      const err = error as AxiosError<{ message: string }>\r\n      if (err?.response?.data?.message) {\r\n        setMessage(err.response.data.message)\r\n      } else {\r\n        setMessage(\"Something went wrong.\")\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    control,\r\n    handleSubmit,\r\n    errors,\r\n    handleResetPassword,\r\n    open,\r\n    setOpen,\r\n    message,\r\n    resetSuccess,\r\n    watch,\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 704, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/%28auth%29/login/api/authService.ts"],"sourcesContent":["import { apiClient } from \"@/app/utils/axios\"\r\n\r\nexport const resetPassword = async (email: string, code: string, newPassword: string, confirmPassword: string) => {\r\n  const { data } = await apiClient.post('auth/reset-password', { email, code, newPassword, confirmPassword })\r\n  return data\r\n}"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,gBAAgB,OAAO,OAAe,MAAc,aAAqB;IACpF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,+HAAA,CAAA,YAAS,CAAC,IAAI,CAAC,uBAAuB;QAAE;QAAO;QAAM;QAAa;IAAgB;IACzG,OAAO;AACT","debugId":null}},
    {"offset": {"line": 727, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/%28auth%29/login/api/useAuth.ts"],"sourcesContent":["import { useMutation } from \"@tanstack/react-query\";\r\nimport { resetPassword } from \"./authService\";\r\nimport { AxiosError, AxiosResponse } from \"axios\"\r\n\r\ninterface Response {\r\n  message: string\r\n  status: number\r\n  success: boolean\r\n}\r\nexport interface IAxiosError extends AxiosError {\r\n  response?: AxiosResponse<Response>\r\n}\r\n\r\n\r\ntype ForgetPasswordPayload = {\r\n  email: string;\r\n  code: string;\r\n  newPassword: string;\r\n  confirmPassword: string;\r\n};\r\n\r\nexport const useForgetPasswordd = () => {\r\n  return useMutation<any, IAxiosError, ForgetPasswordPayload>({\r\n    mutationFn: (payload) => resetPassword(payload.email, payload.code, payload.newPassword, payload.confirmPassword)\r\n  });\r\n};"],"names":[],"mappings":";;;AAAA;AACA;;;;AAoBO,MAAM,qBAAqB;;IAChC,OAAO,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAA2C;QAC1D,UAAU;8CAAE,CAAC,UAAY,CAAA,GAAA,wJAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ,KAAK,EAAE,QAAQ,IAAI,EAAE,QAAQ,WAAW,EAAE,QAAQ,eAAe;;IAClH;AACF;GAJa;;QACJ,iLAAA,CAAA,cAAW","debugId":null}},
    {"offset": {"line": 757, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/api/auth/authService.ts"],"sourcesContent":["import { apiClient } from \"@/app/utils/axios\"\r\n\r\nexport const getCurrentUser = async () => {\r\n  const { data } = await apiClient.get('auth/me')\r\n  return data.data\r\n}\r\n\r\nexport const updateUser = async (id: number, username: string, phone: string) => {\r\n  const { data } = await apiClient.patch('user/update', { id, username, phone })\r\n  return data\r\n}"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,iBAAiB;IAC5B,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,+HAAA,CAAA,YAAS,CAAC,GAAG,CAAC;IACrC,OAAO,KAAK,IAAI;AAClB;AAEO,MAAM,aAAa,OAAO,IAAY,UAAkB;IAC7D,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,+HAAA,CAAA,YAAS,CAAC,KAAK,CAAC,eAAe;QAAE;QAAI;QAAU;IAAM;IAC5E,OAAO;AACT","debugId":null}},
    {"offset": {"line": 784, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/api/auth/useAuth.ts"],"sourcesContent":["import { useMutation, useQuery } from \"@tanstack/react-query\"\r\nimport { getCurrentUser, updateUser } from \"./authService\"\r\nimport { IAxiosError } from \"@/lib/axiosError\"\r\nimport queryClient from \"@/app/utils/queryClient\"\r\n\r\ntype updateUserPayload = {\r\n  id: number,\r\n  username: string\r\n  phone: string\r\n}\r\n\r\nexport const useGetCurrentUser = () => {\r\n  return useQuery<any, IAxiosError>({\r\n    queryKey: [\"currentUser\"],\r\n    queryFn: getCurrentUser,\r\n  })\r\n}\r\n\r\nexport const useUpdateUser = () => {\r\n  return useMutation<any, IAxiosError, updateUserPayload>({\r\n    mutationFn: (payload) => updateUser(payload.id, payload.username, payload.phone),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: [\"currentUser\"] })\r\n    },\r\n  })\r\n}"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAEA;;;;;AAQO,MAAM,oBAAoB;;IAC/B,OAAO,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAoB;QAChC,UAAU;YAAC;SAAc;QACzB,SAAS,oIAAA,CAAA,iBAAc;IACzB;AACF;GALa;;QACJ,8KAAA,CAAA,WAAQ;;;AAMV,MAAM,gBAAgB;;IAC3B,OAAO,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAuC;QACtD,UAAU;yCAAE,CAAC,UAAY,CAAA,GAAA,oIAAA,CAAA,aAAU,AAAD,EAAE,QAAQ,EAAE,EAAE,QAAQ,QAAQ,EAAE,QAAQ,KAAK;;QAC/E,SAAS;yCAAE;gBACT,sIAAA,CAAA,UAAW,CAAC,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;qBAAc;gBAAC;YAC5D;;IACF;AACF;IAPa;;QACJ,iLAAA,CAAA,cAAW","debugId":null}},
    {"offset": {"line": 841, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/store/authStore.ts"],"sourcesContent":["// stores/useUserStore.ts\r\nimport { create } from 'zustand'\r\nimport { persist } from 'zustand/middleware'\r\n\r\ninterface User {\r\n  id: number\r\n  username: string\r\n  email: string\r\n  emailVerified: boolean\r\n  createdAt: string\r\n  updatedAt: string\r\n}\r\n\r\ninterface UserStore {\r\n  user: User | null\r\n  setUser: (user: User) => void\r\n  clearUser: () => void\r\n}\r\n\r\nexport const authStore = create<UserStore>()(\r\n  persist(\r\n    (set) => ({\r\n      user: null,\r\n      setUser: (user) => set({ user }),\r\n      clearUser: () => set({ user: null }),\r\n    }),\r\n    {\r\n      name: 'user-storage',\r\n      skipHydration: true,\r\n    }\r\n  )\r\n)\r\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;AACzB;AACA;;;AAiBO,MAAM,YAAY,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,IAC5B,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD,EACJ,CAAC,MAAQ,CAAC;QACR,MAAM;QACN,SAAS,CAAC,OAAS,IAAI;gBAAE;YAAK;QAC9B,WAAW,IAAM,IAAI;gBAAE,MAAM;YAAK;IACpC,CAAC,GACD;IACE,MAAM;IACN,eAAe;AACjB","debugId":null}},
    {"offset": {"line": 870, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Jawad/Desktop/Treasure-nft-clone/src/app/components/Login.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { Button, Checkbox, Snackbar } from \"@mui/material\"\r\nimport { Divider } from \"antd\"\r\nimport Link from \"next/link\"\r\nimport { useEffect, useState } from \"react\"\r\nimport Modal from \"./modals/Modal\"\r\nimport FormInput from \"./ui/Inputs/FormInput\"\r\nimport useLogin, {\r\n  useForgetPassword,\r\n  useResetPassword,\r\n} from \"../(auth)/login/hooks\"\r\nimport React from \"react\"\r\nimport { Controller } from \"react-hook-form\"\r\nimport OTP from \"antd/es/input/OTP\"\r\nimport { useForgetPasswordd } from \"../(auth)/login/api/useAuth\"\r\nimport toast from \"react-hot-toast\"\r\nimport { AxiosError } from \"axios\"\r\nimport { useGetCurrentUser } from \"@/api/auth/useAuth\"\r\nimport { authStore } from \"@/store/authStore\"\r\n\r\nconst Login = () => {\r\n  const [IsForgotPasswordModalOpen, setIsForgotPasswordModalOpen] =\r\n    useState<boolean>(false)\r\n  const [isResetPasswordModalOpen, setIsResetPasswordModalOpen] =\r\n    useState<boolean>(false)\r\n  const [is2FAModalOpen, setIs2FAModalOpen] = useState<boolean>(false)\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    errors,\r\n    handleLogin,\r\n    open,\r\n    setOpen,\r\n    message,\r\n    isPending,\r\n  } = useLogin()\r\n  const { data: currentUserData } = useGetCurrentUser()\r\n  const { setUser } = authStore()\r\n\r\n  useEffect(()=> {\r\n    if (currentUserData) {\r\n      setUser(currentUserData)\r\n    }\r\n  }, [currentUserData, setUser])\r\n\r\n  const {\r\n    control: forgetPassControl,\r\n    handleSubmit: handleForgetPass,\r\n    errors: forgetPassErrors,\r\n    handleForgetPassword,\r\n    forgetSuccess,\r\n    watch: emailWatch,\r\n  } = useForgetPassword()\r\n  const {\r\n    control: resetPassControl,\r\n    errors: resetPassErrors,\r\n    watch,\r\n  } = useResetPassword(emailWatch(\"email\"))\r\n\r\n  const { mutate: fgp } = useForgetPasswordd()\r\n  const onSubmit = () => {\r\n    fgp(\r\n      {\r\n        email: watch(\"email\"),\r\n        code: watch(\"code\"),\r\n        newPassword: watch(\"newPassword\"),\r\n        confirmPassword: watch(\"confirmPassword\"),\r\n      },\r\n      {\r\n        onSuccess: () => {\r\n          toast.success(\"Password reset Successfull\")\r\n          setIsForgotPasswordModalOpen(false)\r\n          setIsResetPasswordModalOpen(false)\r\n          setIs2FAModalOpen(false)\r\n        },\r\n        onError: (error) => {\r\n          const err = error as AxiosError<{ message: string }>\r\n          toast.error(err.response?.data?.message || \"Something went wrong\")\r\n        },\r\n      }\r\n    )\r\n  }\r\n\r\n  const handleCloseAllModals = () => {\r\n    setIsForgotPasswordModalOpen(false)\r\n    setIsResetPasswordModalOpen(false)\r\n    setIs2FAModalOpen(false)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (forgetSuccess) {\r\n      setIsForgotPasswordModalOpen(false)\r\n      setIs2FAModalOpen(true)\r\n    }\r\n  }, [forgetSuccess])\r\n\r\n  return (\r\n    <div className='w-full max-w-md'>\r\n      <div className='text-[#737373] font-medium text-2xl'>LOGO</div>\r\n      <div className='text-3xl mt-4'>Welcome to NFT!</div>\r\n      <div className='text-[#c0c0c0] text-sm mt-2'>\r\n        <Snackbar\r\n          // anchorOrigin={{ vertical, horizontal }}\r\n          // key={vertical + horizontal}\r\n          open={open}\r\n          onClose={() => setOpen(false)}\r\n          autoHideDuration={2000}\r\n          message={message}\r\n        />\r\n        Please sign in to your account and start the adventure\r\n      </div>\r\n\r\n      <div className='space-y-4'>\r\n        <div className='space-y-1'>\r\n          <FormInput\r\n            name='email'\r\n            control={control}\r\n            label='Email or Username'\r\n            errors={errors}\r\n            rules={{ required: \"Email is required\" }}\r\n          />\r\n          <FormInput\r\n            name='password'\r\n            control={control}\r\n            label='Password'\r\n            type='password'\r\n            errors={errors}\r\n            rules={{ required: \"Password is required\" }}\r\n          />\r\n          <Button\r\n            variant='text'\r\n            className='block text-[#7367F0]'\r\n            onClick={() => setIsForgotPasswordModalOpen(true)}\r\n          >\r\n            Forgot Password?\r\n          </Button>\r\n        </div>\r\n\r\n        <div className='flex items-center gap-2'>\r\n          <Checkbox className='!p-0' />{\" \"}\r\n          <span className='text-muted'>Remember Me</span>\r\n        </div>\r\n\r\n        <Button\r\n          variant='contained'\r\n          fullWidth\r\n          onClick={handleSubmit(handleLogin)}\r\n          disabled={isPending}\r\n        >\r\n          Sign in\r\n        </Button>\r\n\r\n        <div className='text-sm text-center block mt-2'>\r\n          New on our platform?{\" \"}\r\n          <Link className='text-primary' href='/register'>\r\n            Create an account\r\n          </Link>\r\n        </div>\r\n\r\n        <Divider>Or</Divider>\r\n\r\n        <div className='flex items-center justify-center gap-2 mt-4'>\r\n          <div className='h-[38px] w-[38px] bg-[#1d2b48] grid place-items-center rounded'>\r\n            <img src='/icons/fb.png' alt='' />\r\n          </div>\r\n          <div className='h-[38px] w-[38px] bg-[#0d3148] grid place-items-center rounded'>\r\n            <img src='/icons/twitter.png' alt='' />\r\n          </div>\r\n          <div className='h-[38px] w-[38px] bg-[#3f1917] grid place-items-center rounded'>\r\n            <img src='/icons/google.png' alt='' />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* forget pass modal */}\r\n      <Modal\r\n        open={IsForgotPasswordModalOpen}\r\n        setOpen={setIsForgotPasswordModalOpen}\r\n      >\r\n        <div className='space-y-4'>\r\n          <div className='text-[#737373] text-2xl text-center'>LOGO</div>\r\n          <div className='font-medium text-xl'>Forgot Password? 🔒</div>\r\n          <div className='text-[#737373] text-sm'>\r\n            Enter your email, and we'll send you OTP to reset your password\r\n          </div>\r\n          <FormInput\r\n            name='email'\r\n            control={forgetPassControl}\r\n            label='Email'\r\n            errors={forgetPassErrors}\r\n          />\r\n          <Button\r\n            variant='contained'\r\n            fullWidth\r\n            onClick={handleForgetPass(handleForgetPassword)}\r\n          >\r\n            Send Reset Link\r\n          </Button>\r\n          <Button variant='text' fullWidth onClick={handleCloseAllModals}>\r\n            Back to log in\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      {/* tfv modal */}\r\n      <Modal open={is2FAModalOpen} setOpen={setIs2FAModalOpen}>\r\n        <div className='space-y-4'>\r\n          <div className='text-[#737373] text-2xl text-center'>LOGO</div>\r\n          <div className='font-medium text-xl'>Two-Step Verification 💬</div>\r\n          <div className='text-[#737373] text-sm'>\r\n            We sent a verification code to your Email. Enter the code from the\r\n            eamil in the field below.\r\n            <div>{emailWatch(\"email\")}</div>\r\n          </div>\r\n\r\n          <div className='w-full'>\r\n            <Controller\r\n              name='code'\r\n              control={resetPassControl}\r\n              rules={{ required: \"OTP is required\" }}\r\n              render={({ field }) => (\r\n                <OTP\r\n                  style={{ width: \"100%\", justifyContent: \"center\" }}\r\n                  value={field.value}\r\n                  onChange={field.onChange}\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            variant='contained'\r\n            fullWidth\r\n            onClick={() => {\r\n              if (watch(\"code\").length >= 6) {\r\n                setIsResetPasswordModalOpen(true)\r\n              }\r\n            }}\r\n          >\r\n            Verify my account\r\n          </Button>\r\n          <div className='flex gap-2 items-center justify-center'>\r\n            <div>Didn't get the code?</div>\r\n            <div className='text-primary'>Resend</div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n      {/* reset password */}\r\n      <Modal\r\n        open={isResetPasswordModalOpen}\r\n        setOpen={setIsResetPasswordModalOpen}\r\n      >\r\n        <div className='space-y-4'>\r\n          <div className='text-[#737373] text-2xl text-center'>LOGO</div>\r\n          <div className='font-medium text-xl'>Reset Password 🔒</div>\r\n          <div className='text-[#737373] text-sm'>{emailWatch(\"email\")}</div>\r\n          <FormInput\r\n            name='newPassword'\r\n            control={resetPassControl}\r\n            label='New Password'\r\n            errors={resetPassErrors}\r\n          />\r\n          <FormInput\r\n            name='confirmPassword'\r\n            control={resetPassControl}\r\n            label='Confirm Password'\r\n            errors={resetPassErrors}\r\n          />\r\n\r\n          <Button variant='contained' fullWidth onClick={onSubmit}>\r\n            Set New Password\r\n          </Button>\r\n          <Button variant='text' fullWidth onClick={handleCloseAllModals}>\r\n            Back to log in\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"names":[],"mappings":"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","debugId":null}}]
}